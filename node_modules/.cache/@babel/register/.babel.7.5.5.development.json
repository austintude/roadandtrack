{
  "{\"sourceRoot\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"filename\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulpfile.babel.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n\n/* eslint no-undef: \"off\" */\n'use strict'; // External dependencies\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"generateCert\", {\n  enumerable: true,\n  get: function get() {\n    return _generateCert[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"images\", {\n  enumerable: true,\n  get: function get() {\n    return _images[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"php\", {\n  enumerable: true,\n  get: function get() {\n    return _php[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"scripts\", {\n  enumerable: true,\n  get: function get() {\n    return _scripts[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"styles\", {\n  enumerable: true,\n  get: function get() {\n    return _styles[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"editorStyles\", {\n  enumerable: true,\n  get: function get() {\n    return _editorStyles[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"translate\", {\n  enumerable: true,\n  get: function get() {\n    return _translate[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"watch\", {\n  enumerable: true,\n  get: function get() {\n    return _watch[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"cleanCSS\", {\n  enumerable: true,\n  get: function get() {\n    return _clean.cleanCSS;\n  }\n});\nObject.defineProperty(exports, \"cleanJS\", {\n  enumerable: true,\n  get: function get() {\n    return _clean.cleanJS;\n  }\n});\nexports.bundleTheme = exports.buildDev = exports[\"default\"] = exports.firstRun = void 0;\n\nvar _gulp = require(\"gulp\");\n\nvar _generateCert = _interopRequireDefault(require(\"./gulp/generateCert\"));\n\nvar _images = _interopRequireDefault(require(\"./gulp/images\"));\n\nvar _php = _interopRequireDefault(require(\"./gulp/php\"));\n\nvar _browserSync = require(\"./gulp/browserSync\");\n\nvar _scripts = _interopRequireDefault(require(\"./gulp/scripts\"));\n\nvar _styles = _interopRequireDefault(require(\"./gulp/styles\"));\n\nvar _editorStyles = _interopRequireDefault(require(\"./gulp/editorStyles\"));\n\nvar _translate = _interopRequireDefault(require(\"./gulp/translate\"));\n\nvar _watch = _interopRequireDefault(require(\"./gulp/watch\"));\n\nvar _prodPrep = _interopRequireDefault(require(\"./gulp/prodPrep\"));\n\nvar _prodStringReplace = _interopRequireDefault(require(\"./gulp/prodStringReplace\"));\n\nvar _prodCompress = _interopRequireDefault(require(\"./gulp/prodCompress\"));\n\nvar _clean = require(\"./gulp/clean\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// Internal dependencies\n\n/**\n * Map out the sequence of events on first load and make it the default task\n */\nvar firstRun = (0, _gulp.series)(_clean.cleanCSS, _clean.cleanJS, (0, _gulp.parallel)(_php[\"default\"], _images[\"default\"], (0, _gulp.series)(_styles[\"default\"], _editorStyles[\"default\"]), _scripts[\"default\"]), _browserSync.serve, _watch[\"default\"]);\nexports.firstRun = firstRun;\nvar _default = firstRun;\n/**\n * Build theme for development without BrowserSync or watching\n */\n\nexports[\"default\"] = _default;\nvar buildDev = (0, _gulp.parallel)(_php[\"default\"], _images[\"default\"], (0, _gulp.series)(_styles[\"default\"], _editorStyles[\"default\"]), _scripts[\"default\"], _translate[\"default\"]);\n/**\n * Export theme for distribution.\n */\n\nexports.buildDev = buildDev;\nvar bundleTheme = (0, _gulp.series)(_prodPrep[\"default\"], (0, _gulp.parallel)(_php[\"default\"], _scripts[\"default\"], (0, _gulp.series)(_styles[\"default\"], _editorStyles[\"default\"]), _images[\"default\"]), _translate[\"default\"], _prodStringReplace[\"default\"], _prodCompress[\"default\"]);\n/**\n * Export all imported functions as tasks\n */\n\nexports.bundleTheme = bundleTheme;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbImZpcnN0UnVuIiwiY2xlYW5DU1MiLCJjbGVhbkpTIiwicGhwIiwiaW1hZ2VzIiwic3R5bGVzIiwiZWRpdG9yU3R5bGVzIiwic2NyaXB0cyIsInNlcnZlIiwid2F0Y2giLCJidWlsZERldiIsInRyYW5zbGF0ZSIsImJ1bmRsZVRoZW1lIiwicHJvZFByZXAiLCJwcm9kU3RyaW5nUmVwbGFjZSIsInByb2RDb21wcmVzcyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0E7QUFDQSxhLENBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQTs7QUFHQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQWJBOztBQWVBOzs7QUFHTyxJQUFNQSxRQUFRLEdBQUcsa0JBQ3BCQyxlQURvQixFQUNWQyxjQURVLEVBQ0Qsb0JBQVNDLGVBQVQsRUFBY0Msa0JBQWQsRUFBc0Isa0JBQVFDLGtCQUFSLEVBQWdCQyx3QkFBaEIsQ0FBdEIsRUFBc0RDLG1CQUF0RCxDQURDLEVBQytEQyxrQkFEL0QsRUFDc0VDLGlCQUR0RSxDQUFqQjs7ZUFJUVQsUTtBQUVmOzs7OztBQUdPLElBQU1VLFFBQVEsR0FBRyxvQkFDcEJQLGVBRG9CLEVBQ2ZDLGtCQURlLEVBQ1Asa0JBQVFDLGtCQUFSLEVBQWdCQyx3QkFBaEIsQ0FETyxFQUN5QkMsbUJBRHpCLEVBQ2tDSSxxQkFEbEMsQ0FBakI7QUFJUDs7Ozs7QUFHTyxJQUFNQyxXQUFXLEdBQUcsa0JBQ3ZCQyxvQkFEdUIsRUFDYixvQkFBU1YsZUFBVCxFQUFjSSxtQkFBZCxFQUF1QixrQkFBUUYsa0JBQVIsRUFBZ0JDLHdCQUFoQixDQUF2QixFQUF1REYsa0JBQXZELENBRGEsRUFDbURPLHFCQURuRCxFQUM4REcsNkJBRDlELEVBQ2lGQyx3QkFEakYsQ0FBcEI7QUFJUCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYXVzdGludHVkZS9Eb2N1bWVudHMvUm9hZCBhbmQgVHJhY2sgU3BlY2lhbGlzdHMvd3AtY29udGVudC90aGVtZXMvd3ByaWctcm9hZGFuZHRyYWNrc3BlY2lhbGlzdHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZW52IGVzNiAqL1xuLyogZXNsaW50IG5vLXVuZGVmOiBcIm9mZlwiICovXG4ndXNlIHN0cmljdCc7XG5cbi8vIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuaW1wb3J0IHtwYXJhbGxlbCwgc2VyaWVzfSBmcm9tICdndWxwJztcblxuLy8gSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG5pbXBvcnQgZ2VuZXJhdGVDZXJ0IGZyb20gJy4vZ3VscC9nZW5lcmF0ZUNlcnQnO1xuaW1wb3J0IGltYWdlcyBmcm9tICcuL2d1bHAvaW1hZ2VzJztcbmltcG9ydCBwaHAgZnJvbSAnLi9ndWxwL3BocCc7XG5pbXBvcnQge3NlcnZlfSBmcm9tICcuL2d1bHAvYnJvd3NlclN5bmMnO1xuaW1wb3J0IHNjcmlwdHMgZnJvbSAnLi9ndWxwL3NjcmlwdHMnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICcuL2d1bHAvc3R5bGVzJztcbmltcG9ydCBlZGl0b3JTdHlsZXMgZnJvbSAnLi9ndWxwL2VkaXRvclN0eWxlcyc7XG5pbXBvcnQgdHJhbnNsYXRlIGZyb20gJy4vZ3VscC90cmFuc2xhdGUnO1xuaW1wb3J0IHdhdGNoIGZyb20gJy4vZ3VscC93YXRjaCc7XG5pbXBvcnQgcHJvZFByZXAgZnJvbSAnLi9ndWxwL3Byb2RQcmVwJztcbmltcG9ydCBwcm9kU3RyaW5nUmVwbGFjZSBmcm9tICcuL2d1bHAvcHJvZFN0cmluZ1JlcGxhY2UnO1xuaW1wb3J0IHByb2RDb21wcmVzcyBmcm9tICcuL2d1bHAvcHJvZENvbXByZXNzJztcbmltcG9ydCB7Y2xlYW5DU1MsIGNsZWFuSlN9IGZyb20gJy4vZ3VscC9jbGVhbic7XG5cbi8qKlxuICogTWFwIG91dCB0aGUgc2VxdWVuY2Ugb2YgZXZlbnRzIG9uIGZpcnN0IGxvYWQgYW5kIG1ha2UgaXQgdGhlIGRlZmF1bHQgdGFza1xuICovXG5leHBvcnQgY29uc3QgZmlyc3RSdW4gPSBzZXJpZXMoXG4gICAgY2xlYW5DU1MsIGNsZWFuSlMsIHBhcmFsbGVsKHBocCwgaW1hZ2VzLCBzZXJpZXMoIHN0eWxlcywgZWRpdG9yU3R5bGVzICksIHNjcmlwdHMpLCBzZXJ2ZSwgd2F0Y2hcbik7XG5cbmV4cG9ydCBkZWZhdWx0IGZpcnN0UnVuO1xuXG4vKipcbiAqIEJ1aWxkIHRoZW1lIGZvciBkZXZlbG9wbWVudCB3aXRob3V0IEJyb3dzZXJTeW5jIG9yIHdhdGNoaW5nXG4gKi9cbmV4cG9ydCBjb25zdCBidWlsZERldiA9IHBhcmFsbGVsKFxuICAgIHBocCwgaW1hZ2VzLCBzZXJpZXMoIHN0eWxlcywgZWRpdG9yU3R5bGVzICksIHNjcmlwdHMsIHRyYW5zbGF0ZVxuKTtcblxuLyoqXG4gKiBFeHBvcnQgdGhlbWUgZm9yIGRpc3RyaWJ1dGlvbi5cbiAqL1xuZXhwb3J0IGNvbnN0IGJ1bmRsZVRoZW1lID0gc2VyaWVzKFxuICAgIHByb2RQcmVwLCBwYXJhbGxlbChwaHAsIHNjcmlwdHMsIHNlcmllcyggc3R5bGVzLCBlZGl0b3JTdHlsZXMgKSwgaW1hZ2VzKSwgdHJhbnNsYXRlLCBwcm9kU3RyaW5nUmVwbGFjZSwgcHJvZENvbXByZXNzXG4pO1xuXG4vKipcbiAqIEV4cG9ydCBhbGwgaW1wb3J0ZWQgZnVuY3Rpb25zIGFzIHRhc2tzXG4gKi9cbmV4cG9ydCB7IGdlbmVyYXRlQ2VydCwgaW1hZ2VzLCBwaHAsIHNjcmlwdHMsIHN0eWxlcywgZWRpdG9yU3R5bGVzLCB0cmFuc2xhdGUsIHdhdGNoLCBjbGVhbkNTUywgY2xlYW5KUyB9O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "firstRun",
        "cleanCSS",
        "cleanJS",
        "php",
        "images",
        "styles",
        "editorStyles",
        "scripts",
        "serve",
        "watch",
        "buildDev",
        "translate",
        "bundleTheme",
        "prodPrep",
        "prodStringReplace",
        "prodCompress"
      ],
      "mappings": "AAAA;;AACA;AACA,a,CAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAbA;;AAeA;;;AAGO,IAAMA,QAAQ,GAAG,kBACpBC,eADoB,EACVC,cADU,EACD,oBAASC,eAAT,EAAcC,kBAAd,EAAsB,kBAAQC,kBAAR,EAAgBC,wBAAhB,CAAtB,EAAsDC,mBAAtD,CADC,EAC+DC,kBAD/D,EACsEC,iBADtE,CAAjB;;eAIQT,Q;AAEf;;;;;AAGO,IAAMU,QAAQ,GAAG,oBACpBP,eADoB,EACfC,kBADe,EACP,kBAAQC,kBAAR,EAAgBC,wBAAhB,CADO,EACyBC,mBADzB,EACkCI,qBADlC,CAAjB;AAIP;;;;;AAGO,IAAMC,WAAW,GAAG,kBACvBC,oBADuB,EACb,oBAASV,eAAT,EAAcI,mBAAd,EAAuB,kBAAQF,kBAAR,EAAgBC,wBAAhB,CAAvB,EAAuDF,kBAAvD,CADa,EACmDO,qBADnD,EAC8DG,6BAD9D,EACiFC,wBADjF,CAApB;AAIP",
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "sourcesContent": [
        "/* eslint-env es6 */\n/* eslint no-undef: \"off\" */\n'use strict';\n\n// External dependencies\nimport {parallel, series} from 'gulp';\n\n// Internal dependencies\nimport generateCert from './gulp/generateCert';\nimport images from './gulp/images';\nimport php from './gulp/php';\nimport {serve} from './gulp/browserSync';\nimport scripts from './gulp/scripts';\nimport styles from './gulp/styles';\nimport editorStyles from './gulp/editorStyles';\nimport translate from './gulp/translate';\nimport watch from './gulp/watch';\nimport prodPrep from './gulp/prodPrep';\nimport prodStringReplace from './gulp/prodStringReplace';\nimport prodCompress from './gulp/prodCompress';\nimport {cleanCSS, cleanJS} from './gulp/clean';\n\n/**\n * Map out the sequence of events on first load and make it the default task\n */\nexport const firstRun = series(\n    cleanCSS, cleanJS, parallel(php, images, series( styles, editorStyles ), scripts), serve, watch\n);\n\nexport default firstRun;\n\n/**\n * Build theme for development without BrowserSync or watching\n */\nexport const buildDev = parallel(\n    php, images, series( styles, editorStyles ), scripts, translate\n);\n\n/**\n * Export theme for distribution.\n */\nexport const bundleTheme = series(\n    prodPrep, parallel(php, scripts, series( styles, editorStyles ), images), translate, prodStringReplace, prodCompress\n);\n\n/**\n * Export all imported functions as tasks\n */\nexport { generateCert, images, php, scripts, styles, editorStyles, translate, watch, cleanCSS, cleanJS };\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566485032000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"filename\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/generateCert.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/generateCert.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/generateCert.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/generateCert.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
        "sourceFileName": "generateCert.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = generateCert;\n\nvar _createCert = _interopRequireDefault(require(\"create-cert\"));\n\nvar _fancyLog = _interopRequireDefault(require(\"fancy-log\"));\n\nvar _ansiColors = _interopRequireDefault(require(\"ansi-colors\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _constants = require(\"./constants\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\nfunction generateCert(done) {\n  // Use pem to create a new key/cert\n\n  /*\n     const createCertOptions = {\n         days: 1825,\n         commonName: 'localhost'\n     };\n     */\n  var createCertOptions = {\n    days: 1825,\n    selfSigned: true,\n    country: 'US',\n    state: 'OR',\n    locality: 'Portland',\n    altNames: ['localhost'],\n    organization: 'WP Rig',\n    commonName: 'localhost'\n  };\n  (0, _createCert[\"default\"])(createCertOptions).then(function (keys) {\n    // Create the BrowserSync directory if needed\n    if (!_fs[\"default\"].existsSync(_constants.paths.browserSync.dir)) {\n      _fs[\"default\"].mkdirSync(_constants.paths.browserSync.dir);\n    } // Save the key\n\n\n    _fs[\"default\"].writeFileSync(_constants.paths.browserSync.key, keys.key, function (err) {\n      if (err) {\n        throw err;\n      }\n    }); // Save the cert\n\n\n    _fs[\"default\"].writeFileSync(_constants.paths.browserSync.cert, keys.cert, function (err) {\n      if (err) {\n        throw err;\n      }\n    }); // Save the CA cert\n\n\n    _fs[\"default\"].writeFileSync(_constants.paths.browserSync.caCert, keys.caCert, function (err) {\n      if (err) {\n        throw err;\n      }\n    });\n\n    (0, _fancyLog[\"default\"])(_ansiColors[\"default\"].green('Custom SSL key and certificate generated successfully!'));\n    done();\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlbmVyYXRlQ2VydC5qcyJdLCJuYW1lcyI6WyJnZW5lcmF0ZUNlcnQiLCJkb25lIiwiY3JlYXRlQ2VydE9wdGlvbnMiLCJkYXlzIiwic2VsZlNpZ25lZCIsImNvdW50cnkiLCJzdGF0ZSIsImxvY2FsaXR5IiwiYWx0TmFtZXMiLCJvcmdhbml6YXRpb24iLCJjb21tb25OYW1lIiwidGhlbiIsImtleXMiLCJmcyIsImV4aXN0c1N5bmMiLCJwYXRocyIsImJyb3dzZXJTeW5jIiwiZGlyIiwibWtkaXJTeW5jIiwid3JpdGVGaWxlU3luYyIsImtleSIsImVyciIsImNlcnQiLCJjYUNlcnQiLCJjb2xvcnMiLCJncmVlbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUVBOzs7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFLQTs7OztBQUhBOzs7QUFLZSxTQUFTQSxZQUFULENBQXVCQyxJQUF2QixFQUE4QjtBQUM1Qzs7QUFDQTs7Ozs7O0FBT0EsTUFBTUMsaUJBQWlCLEdBQUc7QUFDekJDLElBQUFBLElBQUksRUFBRSxJQURtQjtBQUV6QkMsSUFBQUEsVUFBVSxFQUFFLElBRmE7QUFHekJDLElBQUFBLE9BQU8sRUFBRSxJQUhnQjtBQUl6QkMsSUFBQUEsS0FBSyxFQUFFLElBSmtCO0FBS3pCQyxJQUFBQSxRQUFRLEVBQUUsVUFMZTtBQU16QkMsSUFBQUEsUUFBUSxFQUFFLENBQUUsV0FBRixDQU5lO0FBT3pCQyxJQUFBQSxZQUFZLEVBQUUsUUFQVztBQVF6QkMsSUFBQUEsVUFBVSxFQUFFO0FBUmEsR0FBMUI7QUFXQSw4QkFBWVIsaUJBQVosRUFBZ0NTLElBQWhDLENBQXNDLFVBQUVDLElBQUYsRUFBWTtBQUNqRDtBQUNBLFFBQUssQ0FBRUMsZUFBR0MsVUFBSCxDQUFlQyxpQkFBTUMsV0FBTixDQUFrQkMsR0FBakMsQ0FBUCxFQUFnRDtBQUMvQ0oscUJBQUdLLFNBQUgsQ0FBY0gsaUJBQU1DLFdBQU4sQ0FBa0JDLEdBQWhDO0FBQ0EsS0FKZ0QsQ0FNakQ7OztBQUNBSixtQkFBR00sYUFBSCxDQUFrQkosaUJBQU1DLFdBQU4sQ0FBa0JJLEdBQXBDLEVBQXlDUixJQUFJLENBQUNRLEdBQTlDLEVBQW1ELFVBQUVDLEdBQUYsRUFBVztBQUM3RCxVQUFLQSxHQUFMLEVBQVc7QUFDVixjQUFNQSxHQUFOO0FBQ0E7QUFDRCxLQUpELEVBUGlELENBYWpEOzs7QUFDQVIsbUJBQUdNLGFBQUgsQ0FBa0JKLGlCQUFNQyxXQUFOLENBQWtCTSxJQUFwQyxFQUEwQ1YsSUFBSSxDQUFDVSxJQUEvQyxFQUFxRCxVQUFFRCxHQUFGLEVBQVc7QUFDL0QsVUFBS0EsR0FBTCxFQUFXO0FBQ1YsY0FBTUEsR0FBTjtBQUNBO0FBQ0QsS0FKRCxFQWRpRCxDQW9CakQ7OztBQUNBUixtQkFBR00sYUFBSCxDQUFrQkosaUJBQU1DLFdBQU4sQ0FBa0JPLE1BQXBDLEVBQTRDWCxJQUFJLENBQUNXLE1BQWpELEVBQXlELFVBQUVGLEdBQUYsRUFBVztBQUNuRSxVQUFLQSxHQUFMLEVBQVc7QUFDVixjQUFNQSxHQUFOO0FBQ0E7QUFDRCxLQUpEOztBQU1BLDhCQUFLRyx1QkFBT0MsS0FBUCxDQUFjLHdEQUFkLENBQUw7QUFFQXhCLElBQUFBLElBQUk7QUFDSixHQTlCRDtBQStCQSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYXVzdGludHVkZS9Eb2N1bWVudHMvUm9hZCBhbmQgVHJhY2sgU3BlY2lhbGlzdHMvd3AtY29udGVudC90aGVtZXMvd3ByaWctcm9hZGFuZHRyYWNrc3BlY2lhbGlzdHMvZ3VscCIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1lbnYgZXM2ICovXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBjcmVhdGVDZXJ0IGZyb20gJ2NyZWF0ZS1jZXJ0JztcbmltcG9ydCBsb2cgZnJvbSAnZmFuY3ktbG9nJztcbmltcG9ydCBjb2xvcnMgZnJvbSAnYW5zaS1jb2xvcnMnO1xuaW1wb3J0IGZzIGZyb20gJ2ZzJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgcGF0aHMgfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdlbmVyYXRlQ2VydCggZG9uZSApIHtcblx0Ly8gVXNlIHBlbSB0byBjcmVhdGUgYSBuZXcga2V5L2NlcnRcblx0LypcbiAgICBjb25zdCBjcmVhdGVDZXJ0T3B0aW9ucyA9IHtcbiAgICAgICAgZGF5czogMTgyNSxcbiAgICAgICAgY29tbW9uTmFtZTogJ2xvY2FsaG9zdCdcbiAgICB9O1xuICAgICovXG5cblx0Y29uc3QgY3JlYXRlQ2VydE9wdGlvbnMgPSB7XG5cdFx0ZGF5czogMTgyNSxcblx0XHRzZWxmU2lnbmVkOiB0cnVlLFxuXHRcdGNvdW50cnk6ICdVUycsXG5cdFx0c3RhdGU6ICdPUicsXG5cdFx0bG9jYWxpdHk6ICdQb3J0bGFuZCcsXG5cdFx0YWx0TmFtZXM6IFsgJ2xvY2FsaG9zdCcgXSxcblx0XHRvcmdhbml6YXRpb246ICdXUCBSaWcnLFxuXHRcdGNvbW1vbk5hbWU6ICdsb2NhbGhvc3QnLFxuXHR9O1xuXG5cdGNyZWF0ZUNlcnQoIGNyZWF0ZUNlcnRPcHRpb25zICkudGhlbiggKCBrZXlzICkgPT4ge1xuXHRcdC8vIENyZWF0ZSB0aGUgQnJvd3NlclN5bmMgZGlyZWN0b3J5IGlmIG5lZWRlZFxuXHRcdGlmICggISBmcy5leGlzdHNTeW5jKCBwYXRocy5icm93c2VyU3luYy5kaXIgKSApIHtcblx0XHRcdGZzLm1rZGlyU3luYyggcGF0aHMuYnJvd3NlclN5bmMuZGlyICk7XG5cdFx0fVxuXG5cdFx0Ly8gU2F2ZSB0aGUga2V5XG5cdFx0ZnMud3JpdGVGaWxlU3luYyggcGF0aHMuYnJvd3NlclN5bmMua2V5LCBrZXlzLmtleSwgKCBlcnIgKSA9PiB7XG5cdFx0XHRpZiAoIGVyciApIHtcblx0XHRcdFx0dGhyb3cgZXJyO1xuXHRcdFx0fVxuXHRcdH0gKTtcblxuXHRcdC8vIFNhdmUgdGhlIGNlcnRcblx0XHRmcy53cml0ZUZpbGVTeW5jKCBwYXRocy5icm93c2VyU3luYy5jZXJ0LCBrZXlzLmNlcnQsICggZXJyICkgPT4ge1xuXHRcdFx0aWYgKCBlcnIgKSB7XG5cdFx0XHRcdHRocm93IGVycjtcblx0XHRcdH1cblx0XHR9ICk7XG5cblx0XHQvLyBTYXZlIHRoZSBDQSBjZXJ0XG5cdFx0ZnMud3JpdGVGaWxlU3luYyggcGF0aHMuYnJvd3NlclN5bmMuY2FDZXJ0LCBrZXlzLmNhQ2VydCwgKCBlcnIgKSA9PiB7XG5cdFx0XHRpZiAoIGVyciApIHtcblx0XHRcdFx0dGhyb3cgZXJyO1xuXHRcdFx0fVxuXHRcdH0gKTtcblxuXHRcdGxvZyggY29sb3JzLmdyZWVuKCAnQ3VzdG9tIFNTTCBrZXkgYW5kIGNlcnRpZmljYXRlIGdlbmVyYXRlZCBzdWNjZXNzZnVsbHkhJyApICk7XG5cblx0XHRkb25lKCk7XG5cdH0gKTtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "generateCert.js"
      ],
      "names": [
        "generateCert",
        "done",
        "createCertOptions",
        "days",
        "selfSigned",
        "country",
        "state",
        "locality",
        "altNames",
        "organization",
        "commonName",
        "then",
        "keys",
        "fs",
        "existsSync",
        "paths",
        "browserSync",
        "dir",
        "mkdirSync",
        "writeFileSync",
        "key",
        "err",
        "cert",
        "caCert",
        "colors",
        "green"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;AAGA;;AACA;;AACA;;AACA;;AAKA;;;;AAHA;;;AAKe,SAASA,YAAT,CAAuBC,IAAvB,EAA8B;AAC5C;;AACA;;;;;;AAOA,MAAMC,iBAAiB,GAAG;AACzBC,IAAAA,IAAI,EAAE,IADmB;AAEzBC,IAAAA,UAAU,EAAE,IAFa;AAGzBC,IAAAA,OAAO,EAAE,IAHgB;AAIzBC,IAAAA,KAAK,EAAE,IAJkB;AAKzBC,IAAAA,QAAQ,EAAE,UALe;AAMzBC,IAAAA,QAAQ,EAAE,CAAE,WAAF,CANe;AAOzBC,IAAAA,YAAY,EAAE,QAPW;AAQzBC,IAAAA,UAAU,EAAE;AARa,GAA1B;AAWA,8BAAYR,iBAAZ,EAAgCS,IAAhC,CAAsC,UAAEC,IAAF,EAAY;AACjD;AACA,QAAK,CAAEC,eAAGC,UAAH,CAAeC,iBAAMC,WAAN,CAAkBC,GAAjC,CAAP,EAAgD;AAC/CJ,qBAAGK,SAAH,CAAcH,iBAAMC,WAAN,CAAkBC,GAAhC;AACA,KAJgD,CAMjD;;;AACAJ,mBAAGM,aAAH,CAAkBJ,iBAAMC,WAAN,CAAkBI,GAApC,EAAyCR,IAAI,CAACQ,GAA9C,EAAmD,UAAEC,GAAF,EAAW;AAC7D,UAAKA,GAAL,EAAW;AACV,cAAMA,GAAN;AACA;AACD,KAJD,EAPiD,CAajD;;;AACAR,mBAAGM,aAAH,CAAkBJ,iBAAMC,WAAN,CAAkBM,IAApC,EAA0CV,IAAI,CAACU,IAA/C,EAAqD,UAAED,GAAF,EAAW;AAC/D,UAAKA,GAAL,EAAW;AACV,cAAMA,GAAN;AACA;AACD,KAJD,EAdiD,CAoBjD;;;AACAR,mBAAGM,aAAH,CAAkBJ,iBAAMC,WAAN,CAAkBO,MAApC,EAA4CX,IAAI,CAACW,MAAjD,EAAyD,UAAEF,GAAF,EAAW;AACnE,UAAKA,GAAL,EAAW;AACV,cAAMA,GAAN;AACA;AACD,KAJD;;AAMA,8BAAKG,uBAAOC,KAAP,CAAc,wDAAd,CAAL;AAEAxB,IAAAA,IAAI;AACJ,GA9BD;AA+BA",
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport createCert from 'create-cert';\nimport log from 'fancy-log';\nimport colors from 'ansi-colors';\nimport fs from 'fs';\n\n/**\n * Internal dependencies\n */\nimport { paths } from './constants';\n\nexport default function generateCert( done ) {\n\t// Use pem to create a new key/cert\n\t/*\n    const createCertOptions = {\n        days: 1825,\n        commonName: 'localhost'\n    };\n    */\n\n\tconst createCertOptions = {\n\t\tdays: 1825,\n\t\tselfSigned: true,\n\t\tcountry: 'US',\n\t\tstate: 'OR',\n\t\tlocality: 'Portland',\n\t\taltNames: [ 'localhost' ],\n\t\torganization: 'WP Rig',\n\t\tcommonName: 'localhost',\n\t};\n\n\tcreateCert( createCertOptions ).then( ( keys ) => {\n\t\t// Create the BrowserSync directory if needed\n\t\tif ( ! fs.existsSync( paths.browserSync.dir ) ) {\n\t\t\tfs.mkdirSync( paths.browserSync.dir );\n\t\t}\n\n\t\t// Save the key\n\t\tfs.writeFileSync( paths.browserSync.key, keys.key, ( err ) => {\n\t\t\tif ( err ) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t} );\n\n\t\t// Save the cert\n\t\tfs.writeFileSync( paths.browserSync.cert, keys.cert, ( err ) => {\n\t\t\tif ( err ) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t} );\n\n\t\t// Save the CA cert\n\t\tfs.writeFileSync( paths.browserSync.caCert, keys.caCert, ( err ) => {\n\t\t\tif ( err ) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t} );\n\n\t\tlog( colors.green( 'Custom SSL key and certificate generated successfully!' ) );\n\n\t\tdone();\n\t} );\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566485032000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"filename\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/constants.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/constants.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/constants.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/constants.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
        "sourceFileName": "constants.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.paths = exports.nameFieldDefaults = exports.PHPCSOptions = exports.prodAssetsDir = exports.assetsDir = exports.prodThemePath = exports.isProd = exports.gulpTestPath = exports.gulpPath = exports.rootPath = exports.gulpPlugins = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar gulpPlugins = require('gulp-load-plugins')();\n\nexports.gulpPlugins = gulpPlugins;\n// Root path is where npm run commands happen\nvar rootPath = process.cwd();\nexports.rootPath = rootPath;\nvar gulpPath = \"\".concat(rootPath, \"/gulp\");\nexports.gulpPath = gulpPath;\nvar gulpTestPath = \"\".concat(rootPath, \"/gulp/tests\"); // Dev or production\n\nexports.gulpTestPath = gulpTestPath;\nvar isProd = process.env.NODE_ENV === 'production'; // get the config\n\nexports.isProd = isProd;\nvar config = (0, _utils.getThemeConfig)(); // directory for the production theme\n\nvar prodThemePath = _path[\"default\"].normalize(\"\".concat(rootPath, \"/../\").concat(config.theme.slug)); // directory for assets (CSS, JS, images)\n\n\nexports.prodThemePath = prodThemePath;\nvar assetsDir = \"\".concat(rootPath, \"/assets\"); // directory for assets (CSS, JS, images) in production\n\nexports.assetsDir = assetsDir;\nvar prodAssetsDir = \"\".concat(prodThemePath, \"/assets\"); // PHPCS options\n\nexports.prodAssetsDir = prodAssetsDir;\nvar PHPCSOptions = {\n  bin: \"\".concat(rootPath, \"/vendor/bin/phpcs\"),\n  standard: \"\".concat(rootPath, \"/phpcs.xml.dist\"),\n  warningSeverity: 0\n}; // Theme config name fields and their defaults\n\nexports.PHPCSOptions = PHPCSOptions;\nvar nameFieldDefaults = {\n  author: 'The WP Rig Contributors',\n  PHPNamespace: 'WP_Rig\\\\WP_Rig',\n  slug: 'wp-rig',\n  name: 'WP Rig',\n  underscoreCase: 'wp_rig',\n  constant: 'WP_RIG',\n  camelCase: 'WpRig',\n  camelCaseVar: 'wpRig'\n}; // Project paths\n\nexports.nameFieldDefaults = nameFieldDefaults;\nvar paths = {\n  assetsDir: assetsDir,\n  browserSync: {\n    dir: \"\".concat(rootPath, \"/BrowserSync\"),\n    cert: \"\".concat(rootPath, \"/BrowserSync/wp-rig-browser-sync-cert.crt\"),\n    caCert: \"\".concat(rootPath, \"/BrowserSync/wp-rig-browser-sync-root-cert.crt\"),\n    key: \"\".concat(rootPath, \"/BrowserSync/wp-rig-browser-sync-key.key\")\n  },\n  config: {\n    themeConfig: \"\".concat(rootPath, \"/config/themeConfig.js\")\n  },\n  php: {\n    src: [\"\".concat(rootPath, \"/**/*.php\"), \"!\".concat(rootPath, \"/optional/**/*.*\"), \"!\".concat(rootPath, \"/tests/**/*.*\"), \"!\".concat(rootPath, \"/vendor/**/*.*\")],\n    dest: \"\".concat(rootPath, \"/\")\n  },\n  styles: {\n    editorSrc: [\"\".concat(assetsDir, \"/css/src/editor/**/*.css\"), // Ignore partial files.\n    \"!\".concat(assetsDir, \"/css/src/**/_*.css\")],\n    editorSrcDir: \"\".concat(assetsDir, \"/css/src/editor\"),\n    editorDest: \"\".concat(assetsDir, \"/css/editor\"),\n    src: [\"\".concat(assetsDir, \"/css/src/**/*.css\"), // Ignore partial files.\n    \"!\".concat(assetsDir, \"/css/src/**/_*.css\"), // Ignore editor source css.\n    \"!\".concat(assetsDir, \"/css/src/editor/**/*.css\")],\n    srcDir: \"\".concat(assetsDir, \"/css/src\"),\n    dest: \"\".concat(assetsDir, \"/css\")\n  },\n  scripts: {\n    src: [\"\".concat(assetsDir, \"/js/src/**/*.js\"), // Ignore partial files.\n    \"!\".concat(assetsDir, \"/js/src/**/_*.js\")],\n    srcDir: \"\".concat(assetsDir, \"/js/src\"),\n    dest: \"\".concat(assetsDir, \"/js\")\n  },\n  images: {\n    src: \"\".concat(assetsDir, \"/images/src/**/*.{jpg,JPG,png,svg,gif,GIF}\"),\n    dest: \"\".concat(assetsDir, \"/images/\")\n  },\n  \"export\": {\n    src: [],\n    stringReplaceSrc: [\"\".concat(rootPath, \"/style.css\"), \"\".concat(rootPath, \"/languages/*.po\")]\n  },\n  languages: {\n    src: [\"\".concat(rootPath, \"/**/*.php\"), \"!\".concat(rootPath, \"/optional/**/*.*\"), \"!\".concat(rootPath, \"/tests/**/*.*\"), \"!\".concat(rootPath, \"/vendor/**/*.*\")],\n    dest: \"\".concat(rootPath, \"/languages/\").concat(nameFieldDefaults.slug, \".pot\")\n  }\n}; // Add rootPath to filesToCopy and additionalFilesToCopy\n\nexports.paths = paths;\nvar additionalFilesToCopy = (0, _utils.configValueDefined)('export.additionalFilesToCopy') ? config[\"export\"].additionalFilesToCopy : [];\nvar filesToCopy = (0, _utils.configValueDefined)('export.filesToCopy') ? config[\"export\"].filesToCopy : [];\nvar _iteratorNormalCompletion = true;\nvar _didIteratorError = false;\nvar _iteratorError = undefined;\n\ntry {\n  for (var _iterator = filesToCopy.concat(additionalFilesToCopy)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n    var filePath = _step.value;\n    // Add the files to export src\n    paths[\"export\"].src.push(\"\".concat(rootPath, \"/\").concat(filePath));\n  } // Override paths for production\n\n} catch (err) {\n  _didIteratorError = true;\n  _iteratorError = err;\n} finally {\n  try {\n    if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n      _iterator[\"return\"]();\n    }\n  } finally {\n    if (_didIteratorError) {\n      throw _iteratorError;\n    }\n  }\n}\n\nif (isProd) {\n  paths.php.dest = \"\".concat(prodThemePath, \"/\");\n  paths.styles.dest = \"\".concat(prodAssetsDir, \"/css/\");\n  paths.styles.editorDest = \"\".concat(prodAssetsDir, \"/css/editor/\");\n  paths.scripts.dest = \"\".concat(prodAssetsDir, \"/js/\");\n  paths.images.dest = \"\".concat(prodAssetsDir, \"/images/\");\n  paths.languages = {\n    src: \"\".concat(prodThemePath, \"/**/*.php\"),\n    dest: \"\".concat(prodThemePath, \"/languages/\").concat(config.theme.slug, \".pot\")\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "constants.js"
      ],
      "names": [
        "gulpPlugins",
        "require",
        "rootPath",
        "process",
        "cwd",
        "gulpPath",
        "gulpTestPath",
        "isProd",
        "env",
        "NODE_ENV",
        "config",
        "prodThemePath",
        "path",
        "normalize",
        "theme",
        "slug",
        "assetsDir",
        "prodAssetsDir",
        "PHPCSOptions",
        "bin",
        "standard",
        "warningSeverity",
        "nameFieldDefaults",
        "author",
        "PHPNamespace",
        "name",
        "underscoreCase",
        "constant",
        "camelCase",
        "camelCaseVar",
        "paths",
        "browserSync",
        "dir",
        "cert",
        "caCert",
        "key",
        "themeConfig",
        "php",
        "src",
        "dest",
        "styles",
        "editorSrc",
        "editorSrcDir",
        "editorDest",
        "srcDir",
        "scripts",
        "images",
        "stringReplaceSrc",
        "languages",
        "additionalFilesToCopy",
        "filesToCopy",
        "concat",
        "filePath",
        "push"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;AAIA;;AAKA;;;;AANO,IAAMA,WAAW,GAAGC,OAAO,CAAE,mBAAF,CAAP,EAApB;;;AAWP;AACO,IAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,EAAjB;;AAEA,IAAMC,QAAQ,aAAOH,QAAP,UAAd;;AAEA,IAAMI,YAAY,aAAOJ,QAAP,gBAAlB,C,CAEP;;;AACO,IAAMK,MAAM,GAAKJ,OAAO,CAACK,GAAR,CAAYC,QAAZ,KAAyB,YAA1C,C,CAEP;;;AACA,IAAMC,MAAM,GAAG,4BAAf,C,CAEA;;AACO,IAAMC,aAAa,GAAGC,iBAAKC,SAAL,WAAoBX,QAApB,iBAAqCQ,MAAM,CAACI,KAAP,CAAaC,IAAlD,EAAtB,C,CAEP;;;;AACO,IAAMC,SAAS,aAAOd,QAAP,YAAf,C,CAEP;;;AACO,IAAMe,aAAa,aAAON,aAAP,YAAnB,C,CAEP;;;AACO,IAAMO,YAAY,GAAG;AAC3BC,EAAAA,GAAG,YAAMjB,QAAN,sBADwB;AAE3BkB,EAAAA,QAAQ,YAAMlB,QAAN,oBAFmB;AAG3BmB,EAAAA,eAAe,EAAE;AAHU,CAArB,C,CAMP;;;AACO,IAAMC,iBAAiB,GAAG;AAChCC,EAAAA,MAAM,EAAE,yBADwB;AAEhCC,EAAAA,YAAY,EAAE,gBAFkB;AAGhCT,EAAAA,IAAI,EAAE,QAH0B;AAIhCU,EAAAA,IAAI,EAAE,QAJ0B;AAKhCC,EAAAA,cAAc,EAAE,QALgB;AAMhCC,EAAAA,QAAQ,EAAE,QANsB;AAOhCC,EAAAA,SAAS,EAAE,OAPqB;AAQhCC,EAAAA,YAAY,EAAE;AARkB,CAA1B,C,CAWP;;;AACA,IAAMC,KAAK,GAAG;AACbd,EAAAA,SAAS,EAATA,SADa;AAEbe,EAAAA,WAAW,EAAE;AACZC,IAAAA,GAAG,YAAM9B,QAAN,iBADS;AAEZ+B,IAAAA,IAAI,YAAM/B,QAAN,8CAFQ;AAGZgC,IAAAA,MAAM,YAAMhC,QAAN,mDAHM;AAIZiC,IAAAA,GAAG,YAAMjC,QAAN;AAJS,GAFA;AAQbQ,EAAAA,MAAM,EAAE;AACP0B,IAAAA,WAAW,YAAMlC,QAAN;AADJ,GARK;AAWbmC,EAAAA,GAAG,EAAE;AACJC,IAAAA,GAAG,EAAE,WACApC,QADA,2BAECA,QAFD,kCAGCA,QAHD,+BAICA,QAJD,oBADD;AAOJqC,IAAAA,IAAI,YAAMrC,QAAN;AAPA,GAXQ;AAoBbsC,EAAAA,MAAM,EAAE;AACPC,IAAAA,SAAS,EAAE,WACNzB,SADM,+BAEV;AAFU,eAGLA,SAHK,wBADJ;AAMP0B,IAAAA,YAAY,YAAM1B,SAAN,oBANL;AAOP2B,IAAAA,UAAU,YAAM3B,SAAN,gBAPH;AAQPsB,IAAAA,GAAG,EAAE,WACAtB,SADA,wBAEJ;AAFI,eAGCA,SAHD,yBAIJ;AAJI,eAKCA,SALD,8BARE;AAeP4B,IAAAA,MAAM,YAAM5B,SAAN,aAfC;AAgBPuB,IAAAA,IAAI,YAAMvB,SAAN;AAhBG,GApBK;AAsCb6B,EAAAA,OAAO,EAAE;AACRP,IAAAA,GAAG,EAAE,WACAtB,SADA,sBAEJ;AAFI,eAGCA,SAHD,sBADG;AAMR4B,IAAAA,MAAM,YAAM5B,SAAN,YANE;AAORuB,IAAAA,IAAI,YAAMvB,SAAN;AAPI,GAtCI;AA+Cb8B,EAAAA,MAAM,EAAE;AACPR,IAAAA,GAAG,YAAMtB,SAAN,+CADI;AAEPuB,IAAAA,IAAI,YAAMvB,SAAN;AAFG,GA/CK;AAmDb,YAAQ;AACPsB,IAAAA,GAAG,EAAE,EADE;AAEPS,IAAAA,gBAAgB,EAAE,WACb7C,QADa,2BAEbA,QAFa;AAFX,GAnDK;AA0Db8C,EAAAA,SAAS,EAAE;AACVV,IAAAA,GAAG,EAAE,WACApC,QADA,2BAECA,QAFD,kCAGCA,QAHD,+BAICA,QAJD,oBADK;AAOVqC,IAAAA,IAAI,YAAMrC,QAAN,wBAA8BoB,iBAAiB,CAACP,IAAhD;AAPM;AA1DE,CAAd,C,CAqEA;;;AACA,IAAMkC,qBAAqB,GAAG,+BAAoB,8BAApB,IAAuDvC,MAAM,UAAN,CAAcuC,qBAArE,GAA6F,EAA3H;AACA,IAAMC,WAAW,GAAG,+BAAoB,oBAApB,IAA6CxC,MAAM,UAAN,CAAcwC,WAA3D,GAAyE,EAA7F;;;;;;AACA,uBAAwBA,WAAW,CAACC,MAAZ,CAAoBF,qBAApB,CAAxB,8HAAsE;AAAA,QAA1DG,QAA0D;AACrE;AACAtB,IAAAA,KAAK,UAAL,CAAaQ,GAAb,CAAiBe,IAAjB,WAA2BnD,QAA3B,cAAyCkD,QAAzC;AACA,G,CAED;;;;;;;;;;;;;;;;;AACA,IAAK7C,MAAL,EAAc;AACbuB,EAAAA,KAAK,CAACO,GAAN,CAAUE,IAAV,aAAqB5B,aAArB;AACAmB,EAAAA,KAAK,CAACU,MAAN,CAAaD,IAAb,aAAwBtB,aAAxB;AACAa,EAAAA,KAAK,CAACU,MAAN,CAAaG,UAAb,aAA8B1B,aAA9B;AACAa,EAAAA,KAAK,CAACe,OAAN,CAAcN,IAAd,aAAyBtB,aAAzB;AACAa,EAAAA,KAAK,CAACgB,MAAN,CAAaP,IAAb,aAAwBtB,aAAxB;AACAa,EAAAA,KAAK,CAACkB,SAAN,GAAkB;AACjBV,IAAAA,GAAG,YAAM3B,aAAN,cADc;AAEjB4B,IAAAA,IAAI,YAAM5B,aAAN,wBAAmCD,MAAM,CAACI,KAAP,CAAaC,IAAhD;AAFa,GAAlB;AAIA",
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nexport const gulpPlugins = require( 'gulp-load-plugins' )();\nimport path from 'path';\n\n/**\n * Internal dependencies\n */\nimport {\n\tgetThemeConfig,\n\tconfigValueDefined,\n} from './utils';\n\n// Root path is where npm run commands happen\nexport const rootPath = process.cwd();\n\nexport const gulpPath = `${ rootPath }/gulp`;\n\nexport const gulpTestPath = `${ rootPath }/gulp/tests`;\n\n// Dev or production\nexport const isProd = ( process.env.NODE_ENV === 'production' );\n\n// get the config\nconst config = getThemeConfig();\n\n// directory for the production theme\nexport const prodThemePath = path.normalize( `${ rootPath }/../${ config.theme.slug }` );\n\n// directory for assets (CSS, JS, images)\nexport const assetsDir = `${ rootPath }/assets`;\n\n// directory for assets (CSS, JS, images) in production\nexport const prodAssetsDir = `${ prodThemePath }/assets`;\n\n// PHPCS options\nexport const PHPCSOptions = {\n\tbin: `${ rootPath }/vendor/bin/phpcs`,\n\tstandard: `${ rootPath }/phpcs.xml.dist`,\n\twarningSeverity: 0,\n};\n\n// Theme config name fields and their defaults\nexport const nameFieldDefaults = {\n\tauthor: 'The WP Rig Contributors',\n\tPHPNamespace: 'WP_Rig\\\\WP_Rig',\n\tslug: 'wp-rig',\n\tname: 'WP Rig',\n\tunderscoreCase: 'wp_rig',\n\tconstant: 'WP_RIG',\n\tcamelCase: 'WpRig',\n\tcamelCaseVar: 'wpRig',\n};\n\n// Project paths\nconst paths = {\n\tassetsDir,\n\tbrowserSync: {\n\t\tdir: `${ rootPath }/BrowserSync`,\n\t\tcert: `${ rootPath }/BrowserSync/wp-rig-browser-sync-cert.crt`,\n\t\tcaCert: `${ rootPath }/BrowserSync/wp-rig-browser-sync-root-cert.crt`,\n\t\tkey: `${ rootPath }/BrowserSync/wp-rig-browser-sync-key.key`,\n\t},\n\tconfig: {\n\t\tthemeConfig: `${ rootPath }/config/themeConfig.js`,\n\t},\n\tphp: {\n\t\tsrc: [\n\t\t\t`${ rootPath }/**/*.php`,\n\t\t\t`!${ rootPath }/optional/**/*.*`,\n\t\t\t`!${ rootPath }/tests/**/*.*`,\n\t\t\t`!${ rootPath }/vendor/**/*.*`,\n\t\t],\n\t\tdest: `${ rootPath }/`,\n\t},\n\tstyles: {\n\t\teditorSrc: [\n\t\t\t`${ assetsDir }/css/src/editor/**/*.css`,\n\t\t\t// Ignore partial files.\n\t\t\t`!${ assetsDir }/css/src/**/_*.css`,\n\t\t],\n\t\teditorSrcDir: `${ assetsDir }/css/src/editor`,\n\t\teditorDest: `${ assetsDir }/css/editor`,\n\t\tsrc: [\n\t\t\t`${ assetsDir }/css/src/**/*.css`,\n\t\t\t// Ignore partial files.\n\t\t\t`!${ assetsDir }/css/src/**/_*.css`,\n\t\t\t// Ignore editor source css.\n\t\t\t`!${ assetsDir }/css/src/editor/**/*.css`,\n\t\t],\n\t\tsrcDir: `${ assetsDir }/css/src`,\n\t\tdest: `${ assetsDir }/css`,\n\t},\n\tscripts: {\n\t\tsrc: [\n\t\t\t`${ assetsDir }/js/src/**/*.js`,\n\t\t\t// Ignore partial files.\n\t\t\t`!${ assetsDir }/js/src/**/_*.js`,\n\t\t],\n\t\tsrcDir: `${ assetsDir }/js/src`,\n\t\tdest: `${ assetsDir }/js`,\n\t},\n\timages: {\n\t\tsrc: `${ assetsDir }/images/src/**/*.{jpg,JPG,png,svg,gif,GIF}`,\n\t\tdest: `${ assetsDir }/images/`,\n\t},\n\texport: {\n\t\tsrc: [],\n\t\tstringReplaceSrc: [\n\t\t\t`${ rootPath }/style.css`,\n\t\t\t`${ rootPath }/languages/*.po`,\n\t\t],\n\t},\n\tlanguages: {\n\t\tsrc: [\n\t\t\t`${ rootPath }/**/*.php`,\n\t\t\t`!${ rootPath }/optional/**/*.*`,\n\t\t\t`!${ rootPath }/tests/**/*.*`,\n\t\t\t`!${ rootPath }/vendor/**/*.*`,\n\t\t],\n\t\tdest: `${ rootPath }/languages/${ nameFieldDefaults.slug }.pot`,\n\t},\n};\n\n// Add rootPath to filesToCopy and additionalFilesToCopy\nconst additionalFilesToCopy = configValueDefined( 'export.additionalFilesToCopy' ) ? config.export.additionalFilesToCopy : [];\nconst filesToCopy = configValueDefined( 'export.filesToCopy' ) ? config.export.filesToCopy : [];\nfor ( const filePath of filesToCopy.concat( additionalFilesToCopy ) ) {\n\t// Add the files to export src\n\tpaths.export.src.push( `${ rootPath }/${ filePath }` );\n}\n\n// Override paths for production\nif ( isProd ) {\n\tpaths.php.dest = `${ prodThemePath }/`;\n\tpaths.styles.dest = `${ prodAssetsDir }/css/`;\n\tpaths.styles.editorDest = `${ prodAssetsDir }/css/editor/`;\n\tpaths.scripts.dest = `${ prodAssetsDir }/js/`;\n\tpaths.images.dest = `${ prodAssetsDir }/images/`;\n\tpaths.languages = {\n\t\tsrc: `${ prodThemePath }/**/*.php`,\n\t\tdest: `${ prodThemePath }/languages/${ config.theme.slug }.pot`,\n\t};\n}\n\nexport { paths };\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566485032000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"filename\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/utils.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/utils.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/utils.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getThemeConfig = getThemeConfig;\nexports.getStringReplacementTasks = getStringReplacementTasks;\nexports.logError = logError;\nexports.createProdDir = createProdDir;\nexports.gulpRelativeDest = gulpRelativeDest;\nexports.backslashToForwardSlash = backslashToForwardSlash;\nexports.configValueDefined = configValueDefined;\nexports.appendBaseToFilePathArray = appendBaseToFilePathArray;\nexports.getDefaultConfig = void 0;\n\nvar _importFresh = _interopRequireDefault(require(\"import-fresh\"));\n\nvar _fancyLog = _interopRequireDefault(require(\"fancy-log\"));\n\nvar _ansiColors = _interopRequireDefault(require(\"ansi-colors\"));\n\nvar _rimraf = _interopRequireDefault(require(\"rimraf\"));\n\nvar _mkdirp = _interopRequireDefault(require(\"mkdirp\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _mississippi = require(\"mississippi\");\n\nvar _constants = require(\"./constants\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\nvar getDefaultConfig = function getDefaultConfig() {\n  return require(\"\".concat(_constants.rootPath, \"/config/config.default.json\"));\n};\n/**\n * Get theme configuration.\n *\n * @param {boolean} uncached Whether to get an uncached version of the configuration. Defaults to false.\n * @return {Object} Theme configuration data.\n */\n\n\nexports.getDefaultConfig = getDefaultConfig;\n\nfunction getThemeConfig() {\n  var uncached = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var config;\n  var configPath = \"\".concat(process.cwd(), \"/config/themeConfig.js\");\n\n  if (uncached) {\n    config = (0, _importFresh[\"default\"])(configPath);\n  } else {\n    config = require(configPath);\n  }\n\n  if (!config.theme.slug) {\n    config.theme.slug = config.theme.name.toLowerCase().replace(/[\\s_]+/g, '-').replace(/[^a-z0-9-]+/g, '');\n  }\n\n  if (!config.theme.underscoreCase) {\n    config.theme.underscoreCase = config.theme.slug.replace(/-/g, '_');\n  }\n\n  if (!config.theme.constant) {\n    config.theme.constant = config.theme.underscoreCase.toUpperCase();\n  }\n\n  if (!config.theme.camelCase) {\n    config.theme.camelCase = config.theme.slug.split('-').map(function (part) {\n      return part[0].toUpperCase() + part.substring(1);\n    }).join('');\n  }\n\n  if (!config.theme.camelCaseVar) {\n    config.theme.camelCaseVar = config.theme.camelCase[0].toLowerCase() + config.theme.camelCase.substring(1);\n  }\n\n  return config;\n}\n/**\n * Get string replacement streams to push into a pump process.\n *\n * @return {Array} List of tasks.\n */\n\n\nfunction getStringReplacementTasks() {\n  // Get a copy of the config\n  var config = getThemeConfig(_constants.isProd);\n  var stringReplacementTasks = Object.keys(_constants.nameFieldDefaults).map(function (nameField) {\n    return _constants.gulpPlugins.stringReplace( // Backslashes must be double escaped for regex\n    _constants.nameFieldDefaults[nameField].replace(/\\\\/g, '\\\\\\\\'), config.theme[nameField], {\n      logs: {\n        enabled: false\n      },\n      searchValue: 'regex'\n    });\n  }); // Return a single stream containing all the\n  // string replacement tasks\n\n  return _mississippi.pipeline.obj(stringReplacementTasks);\n}\n\nfunction logError() {\n  var errorTitle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'gulp';\n  return _constants.gulpPlugins.plumber({\n    errorHandler: _constants.gulpPlugins.notify.onError({\n      title: errorTitle,\n      message: '<%= error.message %>'\n    })\n  });\n}\n\nfunction createProdDir() {\n  (0, _fancyLog[\"default\"])(_ansiColors[\"default\"].green(\"Creating the production theme directory \".concat(_constants.prodThemePath))); // Check if the prod theme directory exists\n\n  if (_fs[\"default\"].existsSync(_constants.prodThemePath)) {\n    // and remove it\n    _rimraf[\"default\"].sync(_constants.prodThemePath);\n  } // Create the prod theme directory\n\n\n  (0, _mkdirp[\"default\"])(_constants.prodThemePath);\n}\n\nfunction gulpRelativeDest(file) {\n  var relativeProdFilePath = file.base.replace(file.cwd, _constants.prodThemePath);\n  return relativeProdFilePath;\n}\n\nfunction backslashToForwardSlash(path) {\n  var replaceFn = function replaceFn(p) {\n    return p.replace(/\\\\/g, '/');\n  };\n\n  if (Array.isArray(path)) {\n    var paths = [];\n    path.forEach(function (p) {\n      return paths.push(replaceFn(p));\n    });\n    return paths;\n  }\n\n  return replaceFn(path);\n}\n/**\n * Determine if a config value is defined\n * @param {string} configValueLocation a config value path to search for, e.g. 'config.theme.slug'\n * @return {boolean} whethere the config value is defined\n */\n\n\nfunction configValueDefined(configValueLocation) {\n  // We won't find anything if the location to search is empty\n  if (0 === configValueLocation.length) {\n    return false;\n  } // Get a copy of the config\n\n\n  var config = getThemeConfig(); // Turn the value location given into an array\n\n  var configValueLocationArray = configValueLocation.split('.'); // Remove config from the array if present\n\n  if ('config' === configValueLocationArray[0]) {\n    configValueLocationArray.shift();\n  } // Loop through the config value paths passed\n\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = configValueLocationArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var currentValueLocation = _step.value;\n\n      // Check if there is a match in the current object level\n      if (!Object.prototype.hasOwnProperty.call(config, currentValueLocation)) {\n        // Return false if no match\n        return false;\n      } // Move the config object to the next level\n\n\n      config = config[currentValueLocation];\n    } // If we've made it this far there is a match for the given config value path\n\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Append a base file path to a list of files\n * @param {string|Array} filePaths the file or files to append the base path to\n * @param {string} basePath the base path to append\n * @return {string|Array} file paths with base path appended\n */\n\n\nfunction appendBaseToFilePathArray(filePaths, basePath) {\n  if (!Array.isArray(filePaths)) {\n    return \"\".concat(basePath, \"/\").concat(filePaths);\n  }\n\n  var output = []; // Loop through all file paths\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = filePaths[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var filePath = _step2.value;\n      // And push them into output with the base added\n      output.push(\"\".concat(basePath, \"/\").concat(filePath));\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n        _iterator2[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return output;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "getDefaultConfig",
        "require",
        "rootPath",
        "getThemeConfig",
        "uncached",
        "config",
        "configPath",
        "process",
        "cwd",
        "theme",
        "slug",
        "name",
        "toLowerCase",
        "replace",
        "underscoreCase",
        "constant",
        "toUpperCase",
        "camelCase",
        "split",
        "map",
        "part",
        "substring",
        "join",
        "camelCaseVar",
        "getStringReplacementTasks",
        "isProd",
        "stringReplacementTasks",
        "Object",
        "keys",
        "nameFieldDefaults",
        "nameField",
        "gulpPlugins",
        "stringReplace",
        "logs",
        "enabled",
        "searchValue",
        "pipeline",
        "obj",
        "logError",
        "errorTitle",
        "plumber",
        "errorHandler",
        "notify",
        "onError",
        "title",
        "message",
        "createProdDir",
        "colors",
        "green",
        "prodThemePath",
        "fs",
        "existsSync",
        "rimraf",
        "sync",
        "gulpRelativeDest",
        "file",
        "relativeProdFilePath",
        "base",
        "backslashToForwardSlash",
        "path",
        "replaceFn",
        "p",
        "Array",
        "isArray",
        "paths",
        "forEach",
        "push",
        "configValueDefined",
        "configValueLocation",
        "length",
        "configValueLocationArray",
        "shift",
        "currentValueLocation",
        "prototype",
        "hasOwnProperty",
        "call",
        "appendBaseToFilePathArray",
        "filePaths",
        "basePath",
        "output",
        "filePath"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;;;;;;;;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAKA;;;;AAHA;;;AAWO,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAMC,OAAO,WAAMC,mBAAN,iCAAb;AAAA,CAAzB;AAEP;;;;;;;;;;AAMO,SAASC,cAAT,GAA4C;AAAA,MAAnBC,QAAmB,uEAAR,KAAQ;AAClD,MAAIC,MAAJ;AACA,MAAMC,UAAU,aAAOC,OAAO,CAACC,GAAR,EAAP,2BAAhB;;AAEA,MAAKJ,QAAL,EAAgB;AACfC,IAAAA,MAAM,GAAG,6BAAaC,UAAb,CAAT;AACA,GAFD,MAEO;AACND,IAAAA,MAAM,GAAGJ,OAAO,CAAEK,UAAF,CAAhB;AACA;;AAED,MAAK,CAAED,MAAM,CAACI,KAAP,CAAaC,IAApB,EAA2B;AAC1BL,IAAAA,MAAM,CAACI,KAAP,CAAaC,IAAb,GAAoBL,MAAM,CAACI,KAAP,CAAaE,IAAb,CAAkBC,WAAlB,GAAgCC,OAAhC,CAAyC,SAAzC,EAAoD,GAApD,EAA0DA,OAA1D,CAAmE,cAAnE,EAAmF,EAAnF,CAApB;AACA;;AAED,MAAK,CAAER,MAAM,CAACI,KAAP,CAAaK,cAApB,EAAqC;AACpCT,IAAAA,MAAM,CAACI,KAAP,CAAaK,cAAb,GAA8BT,MAAM,CAACI,KAAP,CAAaC,IAAb,CAAkBG,OAAlB,CAA2B,IAA3B,EAAiC,GAAjC,CAA9B;AACA;;AAED,MAAK,CAAER,MAAM,CAACI,KAAP,CAAaM,QAApB,EAA+B;AAC9BV,IAAAA,MAAM,CAACI,KAAP,CAAaM,QAAb,GAAwBV,MAAM,CAACI,KAAP,CAAaK,cAAb,CAA4BE,WAA5B,EAAxB;AACA;;AAED,MAAK,CAAEX,MAAM,CAACI,KAAP,CAAaQ,SAApB,EAAgC;AAC/BZ,IAAAA,MAAM,CAACI,KAAP,CAAaQ,SAAb,GAAyBZ,MAAM,CAACI,KAAP,CAAaC,IAAb,CACvBQ,KADuB,CAChB,GADgB,EAEvBC,GAFuB,CAElB,UAAEC,IAAF;AAAA,aAAYA,IAAI,CAAE,CAAF,CAAJ,CAAUJ,WAAV,KAA0BI,IAAI,CAACC,SAAL,CAAgB,CAAhB,CAAtC;AAAA,KAFkB,EAGvBC,IAHuB,CAGjB,EAHiB,CAAzB;AAIA;;AAED,MAAK,CAAEjB,MAAM,CAACI,KAAP,CAAac,YAApB,EAAmC;AAClClB,IAAAA,MAAM,CAACI,KAAP,CAAac,YAAb,GAA4BlB,MAAM,CAACI,KAAP,CAAaQ,SAAb,CAAwB,CAAxB,EAA4BL,WAA5B,KAA4CP,MAAM,CAACI,KAAP,CAAaQ,SAAb,CAAuBI,SAAvB,CAAkC,CAAlC,CAAxE;AACA;;AAED,SAAOhB,MAAP;AACA;AAED;;;;;;;AAKO,SAASmB,yBAAT,GAAqC;AAC3C;AACA,MAAMnB,MAAM,GAAGF,cAAc,CAAEsB,iBAAF,CAA7B;AAEA,MAAMC,sBAAsB,GAAGC,MAAM,CAACC,IAAP,CAAaC,4BAAb,EAAiCV,GAAjC,CAAsC,UAAEW,SAAF,EAAiB;AACrF,WAAOC,uBAAYC,aAAZ,EACN;AACAH,iCAAmBC,SAAnB,EAA+BjB,OAA/B,CAAwC,KAAxC,EAA+C,MAA/C,CAFM,EAGNR,MAAM,CAACI,KAAP,CAAcqB,SAAd,CAHM,EAIN;AACCG,MAAAA,IAAI,EAAE;AACLC,QAAAA,OAAO,EAAE;AADJ,OADP;AAICC,MAAAA,WAAW,EAAE;AAJd,KAJM,CAAP;AAWA,GAZ8B,CAA/B,CAJ2C,CAkB3C;AACA;;AACA,SAAOC,sBAASC,GAAT,CAAcX,sBAAd,CAAP;AACA;;AAEM,SAASY,QAAT,GAAyC;AAAA,MAAtBC,UAAsB,uEAAT,MAAS;AAC/C,SAAOR,uBAAYS,OAAZ,CAAqB;AAC3BC,IAAAA,YAAY,EAAEV,uBAAYW,MAAZ,CAAmBC,OAAnB,CAA4B;AACzCC,MAAAA,KAAK,EAAEL,UADkC;AAEzCM,MAAAA,OAAO,EAAE;AAFgC,KAA5B;AADa,GAArB,CAAP;AAMA;;AAEM,SAASC,aAAT,GAAyB;AAC/B,4BAAKC,uBAAOC,KAAP,mDAA0DC,wBAA1D,EAAL,EAD+B,CAE/B;;AACA,MAAKC,eAAGC,UAAH,CAAeF,wBAAf,CAAL,EAAsC;AACrC;AACAG,uBAAOC,IAAP,CAAaJ,wBAAb;AACA,GAN8B,CAQ/B;;;AACA,0BAAQA,wBAAR;AACA;;AAEM,SAASK,gBAAT,CAA2BC,IAA3B,EAAkC;AACxC,MAAMC,oBAAoB,GAAGD,IAAI,CAACE,IAAL,CAAU5C,OAAV,CAAmB0C,IAAI,CAAC/C,GAAxB,EAA6ByC,wBAA7B,CAA7B;AACA,SAAOO,oBAAP;AACA;;AAEM,SAASE,uBAAT,CAAkCC,IAAlC,EAAyC;AAC/C,MAAMC,SAAS,GAAK,SAAdA,SAAc,CAAEC,CAAF;AAAA,WAASA,CAAC,CAAChD,OAAF,CAAW,KAAX,EAAkB,GAAlB,CAAT;AAAA,GAApB;;AACA,MAAKiD,KAAK,CAACC,OAAN,CAAeJ,IAAf,CAAL,EAA6B;AAC5B,QAAMK,KAAK,GAAG,EAAd;AACAL,IAAAA,IAAI,CAACM,OAAL,CAAc,UAAEJ,CAAF;AAAA,aAASG,KAAK,CAACE,IAAN,CAAYN,SAAS,CAAEC,CAAF,CAArB,CAAT;AAAA,KAAd;AACA,WAAOG,KAAP;AACA;;AACD,SAAOJ,SAAS,CAAED,IAAF,CAAhB;AACA;AAED;;;;;;;AAKO,SAASQ,kBAAT,CAA6BC,mBAA7B,EAAmD;AACzD;AACA,MAAK,MAAMA,mBAAmB,CAACC,MAA/B,EAAwC;AACvC,WAAO,KAAP;AACA,GAJwD,CAMzD;;;AACA,MAAIhE,MAAM,GAAGF,cAAc,EAA3B,CAPyD,CASzD;;AACA,MAAMmE,wBAAwB,GAAGF,mBAAmB,CAAClD,KAApB,CAA2B,GAA3B,CAAjC,CAVyD,CAYzD;;AACA,MAAK,aAAaoD,wBAAwB,CAAE,CAAF,CAA1C,EAAkD;AACjDA,IAAAA,wBAAwB,CAACC,KAAzB;AACA,GAfwD,CAiBzD;;;AAjByD;AAAA;AAAA;;AAAA;AAkBzD,yBAAoCD,wBAApC,8HAA+D;AAAA,UAAnDE,oBAAmD;;AAC9D;AACA,UAAK,CAAE7C,MAAM,CAAC8C,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAsCtE,MAAtC,EAA8CmE,oBAA9C,CAAP,EAA8E;AAC7E;AACA,eAAO,KAAP;AACA,OAL6D,CAO9D;;;AACAnE,MAAAA,MAAM,GAAGA,MAAM,CAAEmE,oBAAF,CAAf;AACA,KA3BwD,CA6BzD;;AA7ByD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA8BzD,SAAO,IAAP;AACA;AAED;;;;;;;;AAMO,SAASI,yBAAT,CAAoCC,SAApC,EAA+CC,QAA/C,EAA0D;AAChE,MAAK,CAAEhB,KAAK,CAACC,OAAN,CAAec,SAAf,CAAP,EAAoC;AACnC,qBAAWC,QAAX,cAAyBD,SAAzB;AACA;;AAED,MAAME,MAAM,GAAG,EAAf,CALgE,CAOhE;;AAPgE;AAAA;AAAA;;AAAA;AAQhE,0BAAwBF,SAAxB,mIAAoC;AAAA,UAAxBG,QAAwB;AACnC;AACAD,MAAAA,MAAM,CAACb,IAAP,WAAiBY,QAAjB,cAA+BE,QAA/B;AACA;AAX+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAahE,SAAOD,MAAP;AACA",
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport importFresh from 'import-fresh';\nimport log from 'fancy-log';\nimport colors from 'ansi-colors';\nimport rimraf from 'rimraf';\nimport mkdirp from 'mkdirp';\nimport fs from 'fs';\nimport { pipeline } from 'mississippi';\n\n/**\n * Internal dependencies\n */\nimport {\n\tgulpPlugins,\n\tnameFieldDefaults,\n\tprodThemePath,\n\tisProd,\n\trootPath,\n} from './constants';\n\nexport const getDefaultConfig = () => require( `${ rootPath }/config/config.default.json` );\n\n/**\n * Get theme configuration.\n *\n * @param {boolean} uncached Whether to get an uncached version of the configuration. Defaults to false.\n * @return {Object} Theme configuration data.\n */\nexport function getThemeConfig( uncached = false ) {\n\tlet config;\n\tconst configPath = `${ process.cwd() }/config/themeConfig.js`;\n\n\tif ( uncached ) {\n\t\tconfig = importFresh( configPath );\n\t} else {\n\t\tconfig = require( configPath );\n\t}\n\n\tif ( ! config.theme.slug ) {\n\t\tconfig.theme.slug = config.theme.name.toLowerCase().replace( /[\\s_]+/g, '-' ).replace( /[^a-z0-9-]+/g, '' );\n\t}\n\n\tif ( ! config.theme.underscoreCase ) {\n\t\tconfig.theme.underscoreCase = config.theme.slug.replace( /-/g, '_' );\n\t}\n\n\tif ( ! config.theme.constant ) {\n\t\tconfig.theme.constant = config.theme.underscoreCase.toUpperCase();\n\t}\n\n\tif ( ! config.theme.camelCase ) {\n\t\tconfig.theme.camelCase = config.theme.slug\n\t\t\t.split( '-' )\n\t\t\t.map( ( part ) => part[ 0 ].toUpperCase() + part.substring( 1 ) )\n\t\t\t.join( '' );\n\t}\n\n\tif ( ! config.theme.camelCaseVar ) {\n\t\tconfig.theme.camelCaseVar = config.theme.camelCase[ 0 ].toLowerCase() + config.theme.camelCase.substring( 1 );\n\t}\n\n\treturn config;\n}\n\n/**\n * Get string replacement streams to push into a pump process.\n *\n * @return {Array} List of tasks.\n */\nexport function getStringReplacementTasks() {\n\t// Get a copy of the config\n\tconst config = getThemeConfig( isProd );\n\n\tconst stringReplacementTasks = Object.keys( nameFieldDefaults ).map( ( nameField ) => {\n\t\treturn gulpPlugins.stringReplace(\n\t\t\t// Backslashes must be double escaped for regex\n\t\t\tnameFieldDefaults[ nameField ].replace( /\\\\/g, '\\\\\\\\' ),\n\t\t\tconfig.theme[ nameField ],\n\t\t\t{\n\t\t\t\tlogs: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\tsearchValue: 'regex',\n\t\t\t}\n\t\t);\n\t} );\n\n\t// Return a single stream containing all the\n\t// string replacement tasks\n\treturn pipeline.obj( stringReplacementTasks );\n}\n\nexport function logError( errorTitle = 'gulp' ) {\n\treturn gulpPlugins.plumber( {\n\t\terrorHandler: gulpPlugins.notify.onError( {\n\t\t\ttitle: errorTitle,\n\t\t\tmessage: '<%= error.message %>',\n\t\t} ),\n\t} );\n}\n\nexport function createProdDir() {\n\tlog( colors.green( `Creating the production theme directory ${ prodThemePath }` ) );\n\t// Check if the prod theme directory exists\n\tif ( fs.existsSync( prodThemePath ) ) {\n\t\t// and remove it\n\t\trimraf.sync( prodThemePath );\n\t}\n\n\t// Create the prod theme directory\n\tmkdirp( prodThemePath );\n}\n\nexport function gulpRelativeDest( file ) {\n\tconst relativeProdFilePath = file.base.replace( file.cwd, prodThemePath );\n\treturn relativeProdFilePath;\n}\n\nexport function backslashToForwardSlash( path ) {\n\tconst replaceFn = ( ( p ) => p.replace( /\\\\/g, '/' ) );\n\tif ( Array.isArray( path ) ) {\n\t\tconst paths = [];\n\t\tpath.forEach( ( p ) => paths.push( replaceFn( p ) ) );\n\t\treturn paths;\n\t}\n\treturn replaceFn( path );\n}\n\n/**\n * Determine if a config value is defined\n * @param {string} configValueLocation a config value path to search for, e.g. 'config.theme.slug'\n * @return {boolean} whethere the config value is defined\n */\nexport function configValueDefined( configValueLocation ) {\n\t// We won't find anything if the location to search is empty\n\tif ( 0 === configValueLocation.length ) {\n\t\treturn false;\n\t}\n\n\t// Get a copy of the config\n\tlet config = getThemeConfig();\n\n\t// Turn the value location given into an array\n\tconst configValueLocationArray = configValueLocation.split( '.' );\n\n\t// Remove config from the array if present\n\tif ( 'config' === configValueLocationArray[ 0 ] ) {\n\t\tconfigValueLocationArray.shift();\n\t}\n\n\t// Loop through the config value paths passed\n\tfor ( const currentValueLocation of configValueLocationArray ) {\n\t\t// Check if there is a match in the current object level\n\t\tif ( ! Object.prototype.hasOwnProperty.call( config, currentValueLocation ) ) {\n\t\t\t// Return false if no match\n\t\t\treturn false;\n\t\t}\n\n\t\t// Move the config object to the next level\n\t\tconfig = config[ currentValueLocation ];\n\t}\n\n\t// If we've made it this far there is a match for the given config value path\n\treturn true;\n}\n\n/**\n * Append a base file path to a list of files\n * @param {string|Array} filePaths the file or files to append the base path to\n * @param {string} basePath the base path to append\n * @return {string|Array} file paths with base path appended\n */\nexport function appendBaseToFilePathArray( filePaths, basePath ) {\n\tif ( ! Array.isArray( filePaths ) ) {\n\t\treturn `${ basePath }/${ filePaths }`;\n\t}\n\n\tconst output = [];\n\n\t// Loop through all file paths\n\tfor ( const filePath of filePaths ) {\n\t\t// And push them into output with the base added\n\t\toutput.push( `${ basePath }/${ filePath }` );\n\t}\n\n\treturn output;\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566485032000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/config\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"filename\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/config/themeConfig.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/config",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/config/themeConfig.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/config/themeConfig.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/config/themeConfig.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/config",
        "sourceFileName": "themeConfig.js"
      }
    },
    "ast": null,
    "code": "'use strict'; // External dependencies\n\nvar fs = require('fs');\n\nvar merge = require('deepmerge'); // Default config file\n\n\nvar defaultConfigPath = __dirname + '/config.default.json';\nvar hasDefault = fs.existsSync(defaultConfigPath);\n\nif (!hasDefault) {\n  console.error(\"No default configuration detected. Please create the file \".concat(defaultConfigPath));\n  process.exit(1);\n} // Set config to the default config\n\n\nvar defaultConfig = require(defaultConfigPath);\n\nvar config = defaultConfig; // Load custom config next\n\nvar custom = __dirname + '/config.json';\nvar hasCustom = fs.existsSync(custom);\n\nif (hasCustom) {\n  config = merge(config, require(custom));\n} // Then append local config\n\n\nvar local = __dirname + '/config.local.json';\nvar hasLocal = fs.existsSync(local);\n\nif (hasLocal) {\n  config = merge(config, require(local));\n} // Export the config\n\n\nmodule.exports = config;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRoZW1lQ29uZmlnLmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsIm1lcmdlIiwiZGVmYXVsdENvbmZpZ1BhdGgiLCJfX2Rpcm5hbWUiLCJoYXNEZWZhdWx0IiwiZXhpc3RzU3luYyIsImNvbnNvbGUiLCJlcnJvciIsInByb2Nlc3MiLCJleGl0IiwiZGVmYXVsdENvbmZpZyIsImNvbmZpZyIsImN1c3RvbSIsImhhc0N1c3RvbSIsImxvY2FsIiwiaGFzTG9jYWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxhLENBQ0E7O0FBQ0EsSUFBTUEsRUFBRSxHQUFHQyxPQUFPLENBQUUsSUFBRixDQUFsQjs7QUFDQSxJQUFNQyxLQUFLLEdBQUdELE9BQU8sQ0FBRSxXQUFGLENBQXJCLEMsQ0FFQTs7O0FBQ0EsSUFBTUUsaUJBQWlCLEdBQUdDLFNBQVMsR0FBRyxzQkFBdEM7QUFDQSxJQUFNQyxVQUFVLEdBQUdMLEVBQUUsQ0FBQ00sVUFBSCxDQUFlSCxpQkFBZixDQUFuQjs7QUFDQSxJQUFJLENBQUVFLFVBQU4sRUFBbUI7QUFDbEJFLEVBQUFBLE9BQU8sQ0FBQ0MsS0FBUixxRUFBMkVMLGlCQUEzRTtBQUNBTSxFQUFBQSxPQUFPLENBQUNDLElBQVIsQ0FBYSxDQUFiO0FBQ0EsQyxDQUVEOzs7QUFDQSxJQUFNQyxhQUFhLEdBQUdWLE9BQU8sQ0FBRUUsaUJBQUYsQ0FBN0I7O0FBQ0EsSUFBSVMsTUFBTSxHQUFHRCxhQUFiLEMsQ0FHQTs7QUFDQSxJQUFNRSxNQUFNLEdBQUdULFNBQVMsR0FBRyxjQUEzQjtBQUNBLElBQU1VLFNBQVMsR0FBR2QsRUFBRSxDQUFDTSxVQUFILENBQWVPLE1BQWYsQ0FBbEI7O0FBQ0EsSUFBS0MsU0FBTCxFQUFpQjtBQUNoQkYsRUFBQUEsTUFBTSxHQUFHVixLQUFLLENBQUNVLE1BQUQsRUFBUVgsT0FBTyxDQUFFWSxNQUFGLENBQWYsQ0FBZDtBQUNBLEMsQ0FFRDs7O0FBQ0EsSUFBTUUsS0FBSyxHQUFHWCxTQUFTLEdBQUcsb0JBQTFCO0FBQ0EsSUFBTVksUUFBUSxHQUFHaEIsRUFBRSxDQUFDTSxVQUFILENBQWVTLEtBQWYsQ0FBakI7O0FBQ0EsSUFBS0MsUUFBTCxFQUFnQjtBQUNmSixFQUFBQSxNQUFNLEdBQUdWLEtBQUssQ0FBQ1UsTUFBRCxFQUFRWCxPQUFPLENBQUVjLEtBQUYsQ0FBZixDQUFkO0FBQ0EsQyxDQUVEOzs7QUFDQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCTixNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYXVzdGludHVkZS9Eb2N1bWVudHMvUm9hZCBhbmQgVHJhY2sgU3BlY2lhbGlzdHMvd3AtY29udGVudC90aGVtZXMvd3ByaWctcm9hZGFuZHRyYWNrc3BlY2lhbGlzdHMvY29uZmlnIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuLy8gRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG5jb25zdCBmcyA9IHJlcXVpcmUoICdmcycgKTtcbmNvbnN0IG1lcmdlID0gcmVxdWlyZSggJ2RlZXBtZXJnZScgKTtcblxuLy8gRGVmYXVsdCBjb25maWcgZmlsZVxuY29uc3QgZGVmYXVsdENvbmZpZ1BhdGggPSBfX2Rpcm5hbWUgKyAnL2NvbmZpZy5kZWZhdWx0Lmpzb24nO1xuY29uc3QgaGFzRGVmYXVsdCA9IGZzLmV4aXN0c1N5bmMoIGRlZmF1bHRDb25maWdQYXRoICk7XG5pZiggISBoYXNEZWZhdWx0ICkge1xuXHRjb25zb2xlLmVycm9yKGBObyBkZWZhdWx0IGNvbmZpZ3VyYXRpb24gZGV0ZWN0ZWQuIFBsZWFzZSBjcmVhdGUgdGhlIGZpbGUgJHtkZWZhdWx0Q29uZmlnUGF0aH1gKTtcblx0cHJvY2Vzcy5leGl0KDEpO1xufVxuXG4vLyBTZXQgY29uZmlnIHRvIHRoZSBkZWZhdWx0IGNvbmZpZ1xuY29uc3QgZGVmYXVsdENvbmZpZyA9IHJlcXVpcmUoIGRlZmF1bHRDb25maWdQYXRoICk7XG5sZXQgY29uZmlnID0gZGVmYXVsdENvbmZpZztcblxuXG4vLyBMb2FkIGN1c3RvbSBjb25maWcgbmV4dFxuY29uc3QgY3VzdG9tID0gX19kaXJuYW1lICsgJy9jb25maWcuanNvbic7XG5jb25zdCBoYXNDdXN0b20gPSBmcy5leGlzdHNTeW5jKCBjdXN0b20gKTtcbmlmICggaGFzQ3VzdG9tICkge1xuXHRjb25maWcgPSBtZXJnZShjb25maWcscmVxdWlyZSggY3VzdG9tICkpO1xufVxuXG4vLyBUaGVuIGFwcGVuZCBsb2NhbCBjb25maWdcbmNvbnN0IGxvY2FsID0gX19kaXJuYW1lICsgJy9jb25maWcubG9jYWwuanNvbic7XG5jb25zdCBoYXNMb2NhbCA9IGZzLmV4aXN0c1N5bmMoIGxvY2FsICk7XG5pZiAoIGhhc0xvY2FsICkge1xuXHRjb25maWcgPSBtZXJnZShjb25maWcscmVxdWlyZSggbG9jYWwgKSk7XG59XG5cbi8vIEV4cG9ydCB0aGUgY29uZmlnXG5tb2R1bGUuZXhwb3J0cyA9IGNvbmZpZzsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "themeConfig.js"
      ],
      "names": [
        "fs",
        "require",
        "merge",
        "defaultConfigPath",
        "__dirname",
        "hasDefault",
        "existsSync",
        "console",
        "error",
        "process",
        "exit",
        "defaultConfig",
        "config",
        "custom",
        "hasCustom",
        "local",
        "hasLocal",
        "module",
        "exports"
      ],
      "mappings": "AAAA,a,CACA;;AACA,IAAMA,EAAE,GAAGC,OAAO,CAAE,IAAF,CAAlB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAE,WAAF,CAArB,C,CAEA;;;AACA,IAAME,iBAAiB,GAAGC,SAAS,GAAG,sBAAtC;AACA,IAAMC,UAAU,GAAGL,EAAE,CAACM,UAAH,CAAeH,iBAAf,CAAnB;;AACA,IAAI,CAAEE,UAAN,EAAmB;AAClBE,EAAAA,OAAO,CAACC,KAAR,qEAA2EL,iBAA3E;AACAM,EAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACA,C,CAED;;;AACA,IAAMC,aAAa,GAAGV,OAAO,CAAEE,iBAAF,CAA7B;;AACA,IAAIS,MAAM,GAAGD,aAAb,C,CAGA;;AACA,IAAME,MAAM,GAAGT,SAAS,GAAG,cAA3B;AACA,IAAMU,SAAS,GAAGd,EAAE,CAACM,UAAH,CAAeO,MAAf,CAAlB;;AACA,IAAKC,SAAL,EAAiB;AAChBF,EAAAA,MAAM,GAAGV,KAAK,CAACU,MAAD,EAAQX,OAAO,CAAEY,MAAF,CAAf,CAAd;AACA,C,CAED;;;AACA,IAAME,KAAK,GAAGX,SAAS,GAAG,oBAA1B;AACA,IAAMY,QAAQ,GAAGhB,EAAE,CAACM,UAAH,CAAeS,KAAf,CAAjB;;AACA,IAAKC,QAAL,EAAgB;AACfJ,EAAAA,MAAM,GAAGV,KAAK,CAACU,MAAD,EAAQX,OAAO,CAAEc,KAAF,CAAf,CAAd;AACA,C,CAED;;;AACAE,MAAM,CAACC,OAAP,GAAiBN,MAAjB",
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/config",
      "sourcesContent": [
        "'use strict';\n// External dependencies\nconst fs = require( 'fs' );\nconst merge = require( 'deepmerge' );\n\n// Default config file\nconst defaultConfigPath = __dirname + '/config.default.json';\nconst hasDefault = fs.existsSync( defaultConfigPath );\nif( ! hasDefault ) {\n\tconsole.error(`No default configuration detected. Please create the file ${defaultConfigPath}`);\n\tprocess.exit(1);\n}\n\n// Set config to the default config\nconst defaultConfig = require( defaultConfigPath );\nlet config = defaultConfig;\n\n\n// Load custom config next\nconst custom = __dirname + '/config.json';\nconst hasCustom = fs.existsSync( custom );\nif ( hasCustom ) {\n\tconfig = merge(config,require( custom ));\n}\n\n// Then append local config\nconst local = __dirname + '/config.local.json';\nconst hasLocal = fs.existsSync( local );\nif ( hasLocal ) {\n\tconfig = merge(config,require( local ));\n}\n\n// Export the config\nmodule.exports = config;"
      ]
    },
    "sourceType": "script",
    "mtime": 1566485032000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"filename\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/images.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/images.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/images.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/images.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
        "sourceFileName": "images.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = images;\n\nvar _gulp = require(\"gulp\");\n\nvar _pump = _interopRequireDefault(require(\"pump\"));\n\nvar _constants = require(\"./constants\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\n\n/**\n * Optimize images.\n * @param {function} done function to call when async processes finish\n * @return {Stream} single stream\n */\nfunction images(done) {\n  return (0, _pump[\"default\"])([(0, _gulp.src)(_constants.paths.images.src), _constants.gulpPlugins.newer(_constants.paths.images.dest), _constants.gulpPlugins.imagemin(), (0, _gulp.dest)(_constants.paths.images.dest)], done);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltYWdlcy5qcyJdLCJuYW1lcyI6WyJpbWFnZXMiLCJkb25lIiwicGF0aHMiLCJzcmMiLCJndWxwUGx1Z2lucyIsIm5ld2VyIiwiZGVzdCIsImltYWdlbWluIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBRUE7Ozs7Ozs7OztBQUdBOztBQUNBOztBQUtBOzs7O0FBSEE7Ozs7QUFLQTs7Ozs7QUFLZSxTQUFTQSxNQUFULENBQWlCQyxJQUFqQixFQUF3QjtBQUN0QyxTQUFPLHNCQUFNLENBQ1osZUFBS0MsaUJBQU1GLE1BQU4sQ0FBYUcsR0FBbEIsQ0FEWSxFQUVaQyx1QkFBWUMsS0FBWixDQUFtQkgsaUJBQU1GLE1BQU4sQ0FBYU0sSUFBaEMsQ0FGWSxFQUdaRix1QkFBWUcsUUFBWixFQUhZLEVBSVosZ0JBQU1MLGlCQUFNRixNQUFOLENBQWFNLElBQW5CLENBSlksQ0FBTixFQUtKTCxJQUxJLENBQVA7QUFNQSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYXVzdGludHVkZS9Eb2N1bWVudHMvUm9hZCBhbmQgVHJhY2sgU3BlY2lhbGlzdHMvd3AtY29udGVudC90aGVtZXMvd3ByaWctcm9hZGFuZHRyYWNrc3BlY2lhbGlzdHMvZ3VscCIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1lbnYgZXM2ICovXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IHNyYywgZGVzdCB9IGZyb20gJ2d1bHAnO1xuaW1wb3J0IHB1bXAgZnJvbSAncHVtcCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IHBhdGhzLCBndWxwUGx1Z2lucyB9IGZyb20gJy4vY29uc3RhbnRzJztcblxuLyoqXG4gKiBPcHRpbWl6ZSBpbWFnZXMuXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBkb25lIGZ1bmN0aW9uIHRvIGNhbGwgd2hlbiBhc3luYyBwcm9jZXNzZXMgZmluaXNoXG4gKiBAcmV0dXJuIHtTdHJlYW19IHNpbmdsZSBzdHJlYW1cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaW1hZ2VzKCBkb25lICkge1xuXHRyZXR1cm4gcHVtcCggW1xuXHRcdHNyYyggcGF0aHMuaW1hZ2VzLnNyYyApLFxuXHRcdGd1bHBQbHVnaW5zLm5ld2VyKCBwYXRocy5pbWFnZXMuZGVzdCApLFxuXHRcdGd1bHBQbHVnaW5zLmltYWdlbWluKCksXG5cdFx0ZGVzdCggcGF0aHMuaW1hZ2VzLmRlc3QgKSxcblx0XSwgZG9uZSApO1xufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "images.js"
      ],
      "names": [
        "images",
        "done",
        "paths",
        "src",
        "gulpPlugins",
        "newer",
        "dest",
        "imagemin"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;AAGA;;AACA;;AAKA;;;;AAHA;;;;AAKA;;;;;AAKe,SAASA,MAAT,CAAiBC,IAAjB,EAAwB;AACtC,SAAO,sBAAM,CACZ,eAAKC,iBAAMF,MAAN,CAAaG,GAAlB,CADY,EAEZC,uBAAYC,KAAZ,CAAmBH,iBAAMF,MAAN,CAAaM,IAAhC,CAFY,EAGZF,uBAAYG,QAAZ,EAHY,EAIZ,gBAAML,iBAAMF,MAAN,CAAaM,IAAnB,CAJY,CAAN,EAKJL,IALI,CAAP;AAMA",
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport { src, dest } from 'gulp';\nimport pump from 'pump';\n\n/**\n * Internal dependencies\n */\nimport { paths, gulpPlugins } from './constants';\n\n/**\n * Optimize images.\n * @param {function} done function to call when async processes finish\n * @return {Stream} single stream\n */\nexport default function images( done ) {\n\treturn pump( [\n\t\tsrc( paths.images.src ),\n\t\tgulpPlugins.newer( paths.images.dest ),\n\t\tgulpPlugins.imagemin(),\n\t\tdest( paths.images.dest ),\n\t], done );\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566485032000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"filename\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/php.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/php.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/php.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/php.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
        "sourceFileName": "php.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.phpBeforeReplacementStream = phpBeforeReplacementStream;\nexports[\"default\"] = php;\n\nvar _pump = _interopRequireDefault(require(\"pump\"));\n\nvar _gulp = require(\"gulp\");\n\nvar _mississippi = require(\"mississippi\");\n\nvar _constants = require(\"./constants\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\nfunction phpBeforeReplacementStream() {\n  var config = (0, _utils.getThemeConfig)(); // Return a single stream containing all the\n  // before replacement functionality\n\n  return _mississippi.pipeline.obj([// Only code sniff PHP files if the debug setting is true\n  _constants.gulpPlugins[\"if\"](config.dev.debug.phpcs, _constants.gulpPlugins.phpcs(_constants.PHPCSOptions)), // Log all problems that were found.\n  _constants.gulpPlugins.phpcs.reporter('log')]);\n}\n/**\n * PHP via PHP Code Sniffer.\n * @param {function} done function to call when async processes finish\n * @return {Stream} single stream\n */\n\n\nfunction php(done) {\n  if (_constants.isProd) {\n    // Only do string replacements and save PHP files when building for production\n    return (0, _pump[\"default\"])([(0, _gulp.src)(_constants.paths.php.src), phpBeforeReplacementStream(), (0, _utils.getStringReplacementTasks)(), (0, _gulp.dest)(_constants.paths.php.dest)], done);\n  } // Only run code sniffing in dev, don't save PHP files\n\n\n  return (0, _pump[\"default\"])([(0, _gulp.src)(_constants.paths.php.src), phpBeforeReplacementStream()], done);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBocC5qcyJdLCJuYW1lcyI6WyJwaHBCZWZvcmVSZXBsYWNlbWVudFN0cmVhbSIsImNvbmZpZyIsInBpcGVsaW5lIiwib2JqIiwiZ3VscFBsdWdpbnMiLCJkZXYiLCJkZWJ1ZyIsInBocGNzIiwiUEhQQ1NPcHRpb25zIiwicmVwb3J0ZXIiLCJwaHAiLCJkb25lIiwiaXNQcm9kIiwicGF0aHMiLCJzcmMiLCJkZXN0Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBRUE7Ozs7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFDQTs7QUFLQTs7QUFDQTs7OztBQUpBOzs7QUFNTyxTQUFTQSwwQkFBVCxHQUFzQztBQUM1QyxNQUFNQyxNQUFNLEdBQUcsNEJBQWYsQ0FENEMsQ0FHNUM7QUFDQTs7QUFDQSxTQUFPQyxzQkFBU0MsR0FBVCxDQUFjLENBQ3BCO0FBQ0FDLCtCQUNDSCxNQUFNLENBQUNJLEdBQVAsQ0FBV0MsS0FBWCxDQUFpQkMsS0FEbEIsRUFFQ0gsdUJBQVlHLEtBQVosQ0FBbUJDLHVCQUFuQixDQUZELENBRm9CLEVBTXBCO0FBQ0FKLHlCQUFZRyxLQUFaLENBQWtCRSxRQUFsQixDQUE0QixLQUE1QixDQVBvQixDQUFkLENBQVA7QUFTQTtBQUVEOzs7Ozs7O0FBS2UsU0FBU0MsR0FBVCxDQUFjQyxJQUFkLEVBQXFCO0FBQ25DLE1BQUtDLGlCQUFMLEVBQWM7QUFDYjtBQUNBLFdBQU8sc0JBQU0sQ0FDWixlQUFLQyxpQkFBTUgsR0FBTixDQUFVSSxHQUFmLENBRFksRUFFWmQsMEJBQTBCLEVBRmQsRUFHWix1Q0FIWSxFQUlaLGdCQUFNYSxpQkFBTUgsR0FBTixDQUFVSyxJQUFoQixDQUpZLENBQU4sRUFLSkosSUFMSSxDQUFQO0FBTUEsR0FUa0MsQ0FXbkM7OztBQUNBLFNBQU8sc0JBQU0sQ0FDWixlQUFLRSxpQkFBTUgsR0FBTixDQUFVSSxHQUFmLENBRFksRUFFWmQsMEJBQTBCLEVBRmQsQ0FBTixFQUdKVyxJQUhJLENBQVA7QUFJQSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYXVzdGludHVkZS9Eb2N1bWVudHMvUm9hZCBhbmQgVHJhY2sgU3BlY2lhbGlzdHMvd3AtY29udGVudC90aGVtZXMvd3ByaWctcm9hZGFuZHRyYWNrc3BlY2lhbGlzdHMvZ3VscCIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1lbnYgZXM2ICovXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBwdW1wIGZyb20gJ3B1bXAnO1xuaW1wb3J0IHsgc3JjLCBkZXN0IH0gZnJvbSAnZ3VscCc7XG5pbXBvcnQgeyBwaXBlbGluZSB9IGZyb20gJ21pc3Npc3NpcHBpJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgcGF0aHMsIFBIUENTT3B0aW9ucywgZ3VscFBsdWdpbnMsIGlzUHJvZCB9IGZyb20gJy4vY29uc3RhbnRzJztcbmltcG9ydCB7IGdldFN0cmluZ1JlcGxhY2VtZW50VGFza3MsIGdldFRoZW1lQ29uZmlnIH0gZnJvbSAnLi91dGlscyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBwaHBCZWZvcmVSZXBsYWNlbWVudFN0cmVhbSgpIHtcblx0Y29uc3QgY29uZmlnID0gZ2V0VGhlbWVDb25maWcoKTtcblxuXHQvLyBSZXR1cm4gYSBzaW5nbGUgc3RyZWFtIGNvbnRhaW5pbmcgYWxsIHRoZVxuXHQvLyBiZWZvcmUgcmVwbGFjZW1lbnQgZnVuY3Rpb25hbGl0eVxuXHRyZXR1cm4gcGlwZWxpbmUub2JqKCBbXG5cdFx0Ly8gT25seSBjb2RlIHNuaWZmIFBIUCBmaWxlcyBpZiB0aGUgZGVidWcgc2V0dGluZyBpcyB0cnVlXG5cdFx0Z3VscFBsdWdpbnMuaWYoXG5cdFx0XHRjb25maWcuZGV2LmRlYnVnLnBocGNzLFxuXHRcdFx0Z3VscFBsdWdpbnMucGhwY3MoIFBIUENTT3B0aW9ucyApXG5cdFx0KSxcblx0XHQvLyBMb2cgYWxsIHByb2JsZW1zIHRoYXQgd2VyZSBmb3VuZC5cblx0XHRndWxwUGx1Z2lucy5waHBjcy5yZXBvcnRlciggJ2xvZycgKSxcblx0XSApO1xufVxuXG4vKipcbiAqIFBIUCB2aWEgUEhQIENvZGUgU25pZmZlci5cbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGRvbmUgZnVuY3Rpb24gdG8gY2FsbCB3aGVuIGFzeW5jIHByb2Nlc3NlcyBmaW5pc2hcbiAqIEByZXR1cm4ge1N0cmVhbX0gc2luZ2xlIHN0cmVhbVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwaHAoIGRvbmUgKSB7XG5cdGlmICggaXNQcm9kICkge1xuXHRcdC8vIE9ubHkgZG8gc3RyaW5nIHJlcGxhY2VtZW50cyBhbmQgc2F2ZSBQSFAgZmlsZXMgd2hlbiBidWlsZGluZyBmb3IgcHJvZHVjdGlvblxuXHRcdHJldHVybiBwdW1wKCBbXG5cdFx0XHRzcmMoIHBhdGhzLnBocC5zcmMgKSxcblx0XHRcdHBocEJlZm9yZVJlcGxhY2VtZW50U3RyZWFtKCksXG5cdFx0XHRnZXRTdHJpbmdSZXBsYWNlbWVudFRhc2tzKCksXG5cdFx0XHRkZXN0KCBwYXRocy5waHAuZGVzdCApLFxuXHRcdF0sIGRvbmUgKTtcblx0fVxuXG5cdC8vIE9ubHkgcnVuIGNvZGUgc25pZmZpbmcgaW4gZGV2LCBkb24ndCBzYXZlIFBIUCBmaWxlc1xuXHRyZXR1cm4gcHVtcCggW1xuXHRcdHNyYyggcGF0aHMucGhwLnNyYyApLFxuXHRcdHBocEJlZm9yZVJlcGxhY2VtZW50U3RyZWFtKCksXG5cdF0sIGRvbmUgKTtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "php.js"
      ],
      "names": [
        "phpBeforeReplacementStream",
        "config",
        "pipeline",
        "obj",
        "gulpPlugins",
        "dev",
        "debug",
        "phpcs",
        "PHPCSOptions",
        "reporter",
        "php",
        "done",
        "isProd",
        "paths",
        "src",
        "dest"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;;AAGA;;AACA;;AACA;;AAKA;;AACA;;;;AAJA;;;AAMO,SAASA,0BAAT,GAAsC;AAC5C,MAAMC,MAAM,GAAG,4BAAf,CAD4C,CAG5C;AACA;;AACA,SAAOC,sBAASC,GAAT,CAAc,CACpB;AACAC,+BACCH,MAAM,CAACI,GAAP,CAAWC,KAAX,CAAiBC,KADlB,EAECH,uBAAYG,KAAZ,CAAmBC,uBAAnB,CAFD,CAFoB,EAMpB;AACAJ,yBAAYG,KAAZ,CAAkBE,QAAlB,CAA4B,KAA5B,CAPoB,CAAd,CAAP;AASA;AAED;;;;;;;AAKe,SAASC,GAAT,CAAcC,IAAd,EAAqB;AACnC,MAAKC,iBAAL,EAAc;AACb;AACA,WAAO,sBAAM,CACZ,eAAKC,iBAAMH,GAAN,CAAUI,GAAf,CADY,EAEZd,0BAA0B,EAFd,EAGZ,uCAHY,EAIZ,gBAAMa,iBAAMH,GAAN,CAAUK,IAAhB,CAJY,CAAN,EAKJJ,IALI,CAAP;AAMA,GATkC,CAWnC;;;AACA,SAAO,sBAAM,CACZ,eAAKE,iBAAMH,GAAN,CAAUI,GAAf,CADY,EAEZd,0BAA0B,EAFd,CAAN,EAGJW,IAHI,CAAP;AAIA",
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport pump from 'pump';\nimport { src, dest } from 'gulp';\nimport { pipeline } from 'mississippi';\n\n/**\n * Internal dependencies\n */\nimport { paths, PHPCSOptions, gulpPlugins, isProd } from './constants';\nimport { getStringReplacementTasks, getThemeConfig } from './utils';\n\nexport function phpBeforeReplacementStream() {\n\tconst config = getThemeConfig();\n\n\t// Return a single stream containing all the\n\t// before replacement functionality\n\treturn pipeline.obj( [\n\t\t// Only code sniff PHP files if the debug setting is true\n\t\tgulpPlugins.if(\n\t\t\tconfig.dev.debug.phpcs,\n\t\t\tgulpPlugins.phpcs( PHPCSOptions )\n\t\t),\n\t\t// Log all problems that were found.\n\t\tgulpPlugins.phpcs.reporter( 'log' ),\n\t] );\n}\n\n/**\n * PHP via PHP Code Sniffer.\n * @param {function} done function to call when async processes finish\n * @return {Stream} single stream\n */\nexport default function php( done ) {\n\tif ( isProd ) {\n\t\t// Only do string replacements and save PHP files when building for production\n\t\treturn pump( [\n\t\t\tsrc( paths.php.src ),\n\t\t\tphpBeforeReplacementStream(),\n\t\t\tgetStringReplacementTasks(),\n\t\t\tdest( paths.php.dest ),\n\t\t], done );\n\t}\n\n\t// Only run code sniffing in dev, don't save PHP files\n\treturn pump( [\n\t\tsrc( paths.php.src ),\n\t\tphpBeforeReplacementStream(),\n\t], done );\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566485032000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"filename\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/browserSync.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/browserSync.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/browserSync.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/browserSync.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
        "sourceFileName": "browserSync.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serve = serve;\nexports.reload = reload;\nexports.server = void 0;\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _fancyLog = _interopRequireDefault(require(\"fancy-log\"));\n\nvar _ansiColors = _interopRequireDefault(require(\"ansi-colors\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _constants = require(\"./constants\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\n\n/**\n * Conditionally set up BrowserSync.\n * Only run BrowserSync if config.browserSync.live = true.\n */\n// Create a BrowserSync instance:\nvar server = _browserSync[\"default\"].create(); // Initialize the BrowserSync server conditionally:\n\n\nexports.server = server;\n\nfunction serve(done) {\n  var config = (0, _utils.getThemeConfig)(); // bail early if not serving via BrowserSync\n\n  if (!config.dev.browserSync.live) {\n    done();\n  }\n\n  var serverConfig = {\n    proxy: config.dev.browserSync.proxyURL,\n    port: config.dev.browserSync.bypassPort,\n    liveReload: true,\n    https: false\n  }; // Only setup HTTPS certificates if HTTPS is enabled\n\n  if (config.dev.browserSync.https) {\n    // Use a custom path key/cert if defined, otherwise use the default path\n    var certPath = Object.prototype.hasOwnProperty.call(config.dev.browserSync, 'certPath') ? config.dev.browserSync.certPath : _constants.paths.browserSync.cert;\n    var keyPath = Object.prototype.hasOwnProperty.call(config.dev.browserSync, 'keyPath') ? config.dev.browserSync.keyPath : _constants.paths.browserSync.key; // Ensure the key/cert files exist\n\n    var certFound = _fs[\"default\"].existsSync(certPath);\n\n    var keyFound = _fs[\"default\"].existsSync(keyPath); // Let the user know if we found a cert\n\n\n    if (certFound) {\n      (0, _fancyLog[\"default\"])(_ansiColors[\"default\"].yellow(\"Using the SSL certificate \".concat(_ansiColors[\"default\"].bold(certPath))));\n    } else {\n      (0, _fancyLog[\"default\"])(_ansiColors[\"default\"].yellow(\"No SSL certificate found, HTTPS will \".concat(_ansiColors[\"default\"].bold('not'), \" be enabled\")));\n    } // Let the user know if we found a key\n\n\n    if (keyFound) {\n      (0, _fancyLog[\"default\"])(_ansiColors[\"default\"].yellow(\"Using the SSL key \".concat(_ansiColors[\"default\"].bold(keyPath))));\n    } else {\n      (0, _fancyLog[\"default\"])(_ansiColors[\"default\"].yellow(\"No SSL key found, HTTPS will \".concat(_ansiColors[\"default\"].bold('not'), \" be enabled\")));\n    } // Only enable HTTPS if there is a cert and a key\n\n\n    if (certFound && keyFound) {\n      (0, _fancyLog[\"default\"])(_ansiColors[\"default\"].yellow(\"HTTPS is \".concat(_ansiColors[\"default\"].bold('on'))));\n      serverConfig.https = {\n        key: keyPath,\n        cert: certPath\n      };\n    }\n  } // Start the BrowserSync server\n\n\n  server.init(serverConfig);\n  done();\n} // Reload the live site:\n\n\nfunction reload(done) {\n  var config = (0, _utils.getThemeConfig)();\n\n  if (config.dev.browserSync.live) {\n    if (server.paused) {\n      server.resume();\n    }\n\n    server.reload();\n  } else {\n    server.pause();\n  }\n\n  done();\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJyb3dzZXJTeW5jLmpzIl0sIm5hbWVzIjpbInNlcnZlciIsImJyb3dzZXJTeW5jIiwiY3JlYXRlIiwic2VydmUiLCJkb25lIiwiY29uZmlnIiwiZGV2IiwibGl2ZSIsInNlcnZlckNvbmZpZyIsInByb3h5IiwicHJveHlVUkwiLCJwb3J0IiwiYnlwYXNzUG9ydCIsImxpdmVSZWxvYWQiLCJodHRwcyIsImNlcnRQYXRoIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwicGF0aHMiLCJjZXJ0Iiwia2V5UGF0aCIsImtleSIsImNlcnRGb3VuZCIsImZzIiwiZXhpc3RzU3luYyIsImtleUZvdW5kIiwiY29sb3JzIiwieWVsbG93IiwiYm9sZCIsImluaXQiLCJyZWxvYWQiLCJwYXVzZWQiLCJyZXN1bWUiLCJwYXVzZSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUVBOzs7Ozs7Ozs7OztBQUdBOztBQUNBOztBQUNBOztBQUNBOztBQUtBOztBQUNBOzs7O0FBSkE7Ozs7QUFNQTs7OztBQUtBO0FBQ08sSUFBTUEsTUFBTSxHQUFHQyx3QkFBWUMsTUFBWixFQUFmLEMsQ0FFUDs7Ozs7QUFDTyxTQUFTQyxLQUFULENBQWdCQyxJQUFoQixFQUF1QjtBQUM3QixNQUFNQyxNQUFNLEdBQUcsNEJBQWYsQ0FENkIsQ0FHN0I7O0FBQ0EsTUFBSyxDQUFFQSxNQUFNLENBQUNDLEdBQVAsQ0FBV0wsV0FBWCxDQUF1Qk0sSUFBOUIsRUFBcUM7QUFDcENILElBQUFBLElBQUk7QUFDSjs7QUFFRCxNQUFNSSxZQUFZLEdBQUc7QUFDcEJDLElBQUFBLEtBQUssRUFBRUosTUFBTSxDQUFDQyxHQUFQLENBQVdMLFdBQVgsQ0FBdUJTLFFBRFY7QUFFcEJDLElBQUFBLElBQUksRUFBRU4sTUFBTSxDQUFDQyxHQUFQLENBQVdMLFdBQVgsQ0FBdUJXLFVBRlQ7QUFHcEJDLElBQUFBLFVBQVUsRUFBRSxJQUhRO0FBSXBCQyxJQUFBQSxLQUFLLEVBQUU7QUFKYSxHQUFyQixDQVI2QixDQWU3Qjs7QUFDQSxNQUFLVCxNQUFNLENBQUNDLEdBQVAsQ0FBV0wsV0FBWCxDQUF1QmEsS0FBNUIsRUFBb0M7QUFDbkM7QUFDQSxRQUFNQyxRQUFRLEdBQUdDLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkMsY0FBakIsQ0FBZ0NDLElBQWhDLENBQXNDZCxNQUFNLENBQUNDLEdBQVAsQ0FBV0wsV0FBakQsRUFBOEQsVUFBOUQsSUFBNkVJLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXTCxXQUFYLENBQXVCYyxRQUFwRyxHQUErR0ssaUJBQU1uQixXQUFOLENBQWtCb0IsSUFBbEo7QUFDQSxRQUFNQyxPQUFPLEdBQUdOLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkMsY0FBakIsQ0FBZ0NDLElBQWhDLENBQXNDZCxNQUFNLENBQUNDLEdBQVAsQ0FBV0wsV0FBakQsRUFBOEQsU0FBOUQsSUFBNEVJLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXTCxXQUFYLENBQXVCcUIsT0FBbkcsR0FBNkdGLGlCQUFNbkIsV0FBTixDQUFrQnNCLEdBQS9JLENBSG1DLENBS25DOztBQUNBLFFBQU1DLFNBQVMsR0FBR0MsZUFBR0MsVUFBSCxDQUFlWCxRQUFmLENBQWxCOztBQUNBLFFBQU1ZLFFBQVEsR0FBR0YsZUFBR0MsVUFBSCxDQUFlSixPQUFmLENBQWpCLENBUG1DLENBU25DOzs7QUFDQSxRQUFLRSxTQUFMLEVBQWlCO0FBQ2hCLGdDQUFLSSx1QkFBT0MsTUFBUCxxQ0FBNkNELHVCQUFPRSxJQUFQLENBQWFmLFFBQWIsQ0FBN0MsRUFBTDtBQUNBLEtBRkQsTUFFTztBQUNOLGdDQUFLYSx1QkFBT0MsTUFBUCxnREFBd0RELHVCQUFPRSxJQUFQLENBQWEsS0FBYixDQUF4RCxpQkFBTDtBQUNBLEtBZGtDLENBZ0JuQzs7O0FBQ0EsUUFBS0gsUUFBTCxFQUFnQjtBQUNmLGdDQUFLQyx1QkFBT0MsTUFBUCw2QkFBcUNELHVCQUFPRSxJQUFQLENBQWFSLE9BQWIsQ0FBckMsRUFBTDtBQUNBLEtBRkQsTUFFTztBQUNOLGdDQUFLTSx1QkFBT0MsTUFBUCx3Q0FBZ0RELHVCQUFPRSxJQUFQLENBQWEsS0FBYixDQUFoRCxpQkFBTDtBQUNBLEtBckJrQyxDQXVCbkM7OztBQUNBLFFBQUtOLFNBQVMsSUFBSUcsUUFBbEIsRUFBNkI7QUFDNUIsZ0NBQUtDLHVCQUFPQyxNQUFQLG9CQUE0QkQsdUJBQU9FLElBQVAsQ0FBYSxJQUFiLENBQTVCLEVBQUw7QUFDQXRCLE1BQUFBLFlBQVksQ0FBQ00sS0FBYixHQUFxQjtBQUNwQlMsUUFBQUEsR0FBRyxFQUFFRCxPQURlO0FBRXBCRCxRQUFBQSxJQUFJLEVBQUVOO0FBRmMsT0FBckI7QUFJQTtBQUNELEdBL0M0QixDQWlEN0I7OztBQUNBZixFQUFBQSxNQUFNLENBQUMrQixJQUFQLENBQWF2QixZQUFiO0FBRUFKLEVBQUFBLElBQUk7QUFDSixDLENBRUQ7OztBQUNPLFNBQVM0QixNQUFULENBQWlCNUIsSUFBakIsRUFBd0I7QUFDOUIsTUFBTUMsTUFBTSxHQUFHLDRCQUFmOztBQUVBLE1BQUtBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXTCxXQUFYLENBQXVCTSxJQUE1QixFQUFtQztBQUNsQyxRQUFLUCxNQUFNLENBQUNpQyxNQUFaLEVBQXFCO0FBQ3BCakMsTUFBQUEsTUFBTSxDQUFDa0MsTUFBUDtBQUNBOztBQUNEbEMsSUFBQUEsTUFBTSxDQUFDZ0MsTUFBUDtBQUNBLEdBTEQsTUFLTztBQUNOaEMsSUFBQUEsTUFBTSxDQUFDbUMsS0FBUDtBQUNBOztBQUVEL0IsRUFBQUEsSUFBSTtBQUNKIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9hdXN0aW50dWRlL0RvY3VtZW50cy9Sb2FkIGFuZCBUcmFjayBTcGVjaWFsaXN0cy93cC1jb250ZW50L3RoZW1lcy93cHJpZy1yb2FkYW5kdHJhY2tzcGVjaWFsaXN0cy9ndWxwIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWVudiBlczYgKi9cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IGJyb3dzZXJTeW5jIGZyb20gJ2Jyb3dzZXItc3luYyc7XG5pbXBvcnQgbG9nIGZyb20gJ2ZhbmN5LWxvZyc7XG5pbXBvcnQgY29sb3JzIGZyb20gJ2Fuc2ktY29sb3JzJztcbmltcG9ydCBmcyBmcm9tICdmcyc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IHBhdGhzIH0gZnJvbSAnLi9jb25zdGFudHMnO1xuaW1wb3J0IHsgZ2V0VGhlbWVDb25maWcgfSBmcm9tICcuL3V0aWxzJztcblxuLyoqXG4gKiBDb25kaXRpb25hbGx5IHNldCB1cCBCcm93c2VyU3luYy5cbiAqIE9ubHkgcnVuIEJyb3dzZXJTeW5jIGlmIGNvbmZpZy5icm93c2VyU3luYy5saXZlID0gdHJ1ZS5cbiAqL1xuXG4vLyBDcmVhdGUgYSBCcm93c2VyU3luYyBpbnN0YW5jZTpcbmV4cG9ydCBjb25zdCBzZXJ2ZXIgPSBicm93c2VyU3luYy5jcmVhdGUoKTtcblxuLy8gSW5pdGlhbGl6ZSB0aGUgQnJvd3NlclN5bmMgc2VydmVyIGNvbmRpdGlvbmFsbHk6XG5leHBvcnQgZnVuY3Rpb24gc2VydmUoIGRvbmUgKSB7XG5cdGNvbnN0IGNvbmZpZyA9IGdldFRoZW1lQ29uZmlnKCk7XG5cblx0Ly8gYmFpbCBlYXJseSBpZiBub3Qgc2VydmluZyB2aWEgQnJvd3NlclN5bmNcblx0aWYgKCAhIGNvbmZpZy5kZXYuYnJvd3NlclN5bmMubGl2ZSApIHtcblx0XHRkb25lKCk7XG5cdH1cblxuXHRjb25zdCBzZXJ2ZXJDb25maWcgPSB7XG5cdFx0cHJveHk6IGNvbmZpZy5kZXYuYnJvd3NlclN5bmMucHJveHlVUkwsXG5cdFx0cG9ydDogY29uZmlnLmRldi5icm93c2VyU3luYy5ieXBhc3NQb3J0LFxuXHRcdGxpdmVSZWxvYWQ6IHRydWUsXG5cdFx0aHR0cHM6IGZhbHNlLFxuXHR9O1xuXG5cdC8vIE9ubHkgc2V0dXAgSFRUUFMgY2VydGlmaWNhdGVzIGlmIEhUVFBTIGlzIGVuYWJsZWRcblx0aWYgKCBjb25maWcuZGV2LmJyb3dzZXJTeW5jLmh0dHBzICkge1xuXHRcdC8vIFVzZSBhIGN1c3RvbSBwYXRoIGtleS9jZXJ0IGlmIGRlZmluZWQsIG90aGVyd2lzZSB1c2UgdGhlIGRlZmF1bHQgcGF0aFxuXHRcdGNvbnN0IGNlcnRQYXRoID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKCBjb25maWcuZGV2LmJyb3dzZXJTeW5jLCAnY2VydFBhdGgnICkgPyBjb25maWcuZGV2LmJyb3dzZXJTeW5jLmNlcnRQYXRoIDogcGF0aHMuYnJvd3NlclN5bmMuY2VydDtcblx0XHRjb25zdCBrZXlQYXRoID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKCBjb25maWcuZGV2LmJyb3dzZXJTeW5jLCAna2V5UGF0aCcgKSA/IGNvbmZpZy5kZXYuYnJvd3NlclN5bmMua2V5UGF0aCA6IHBhdGhzLmJyb3dzZXJTeW5jLmtleTtcblxuXHRcdC8vIEVuc3VyZSB0aGUga2V5L2NlcnQgZmlsZXMgZXhpc3Rcblx0XHRjb25zdCBjZXJ0Rm91bmQgPSBmcy5leGlzdHNTeW5jKCBjZXJ0UGF0aCApO1xuXHRcdGNvbnN0IGtleUZvdW5kID0gZnMuZXhpc3RzU3luYygga2V5UGF0aCApO1xuXG5cdFx0Ly8gTGV0IHRoZSB1c2VyIGtub3cgaWYgd2UgZm91bmQgYSBjZXJ0XG5cdFx0aWYgKCBjZXJ0Rm91bmQgKSB7XG5cdFx0XHRsb2coIGNvbG9ycy55ZWxsb3coIGBVc2luZyB0aGUgU1NMIGNlcnRpZmljYXRlICR7IGNvbG9ycy5ib2xkKCBjZXJ0UGF0aCApIH1gICkgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0bG9nKCBjb2xvcnMueWVsbG93KCBgTm8gU1NMIGNlcnRpZmljYXRlIGZvdW5kLCBIVFRQUyB3aWxsICR7IGNvbG9ycy5ib2xkKCAnbm90JyApIH0gYmUgZW5hYmxlZGAgKSApO1xuXHRcdH1cblxuXHRcdC8vIExldCB0aGUgdXNlciBrbm93IGlmIHdlIGZvdW5kIGEga2V5XG5cdFx0aWYgKCBrZXlGb3VuZCApIHtcblx0XHRcdGxvZyggY29sb3JzLnllbGxvdyggYFVzaW5nIHRoZSBTU0wga2V5ICR7IGNvbG9ycy5ib2xkKCBrZXlQYXRoICkgfWAgKSApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRsb2coIGNvbG9ycy55ZWxsb3coIGBObyBTU0wga2V5IGZvdW5kLCBIVFRQUyB3aWxsICR7IGNvbG9ycy5ib2xkKCAnbm90JyApIH0gYmUgZW5hYmxlZGAgKSApO1xuXHRcdH1cblxuXHRcdC8vIE9ubHkgZW5hYmxlIEhUVFBTIGlmIHRoZXJlIGlzIGEgY2VydCBhbmQgYSBrZXlcblx0XHRpZiAoIGNlcnRGb3VuZCAmJiBrZXlGb3VuZCApIHtcblx0XHRcdGxvZyggY29sb3JzLnllbGxvdyggYEhUVFBTIGlzICR7IGNvbG9ycy5ib2xkKCAnb24nICkgfWAgKSApO1xuXHRcdFx0c2VydmVyQ29uZmlnLmh0dHBzID0ge1xuXHRcdFx0XHRrZXk6IGtleVBhdGgsXG5cdFx0XHRcdGNlcnQ6IGNlcnRQYXRoLFxuXHRcdFx0fTtcblx0XHR9XG5cdH1cblxuXHQvLyBTdGFydCB0aGUgQnJvd3NlclN5bmMgc2VydmVyXG5cdHNlcnZlci5pbml0KCBzZXJ2ZXJDb25maWcgKTtcblxuXHRkb25lKCk7XG59XG5cbi8vIFJlbG9hZCB0aGUgbGl2ZSBzaXRlOlxuZXhwb3J0IGZ1bmN0aW9uIHJlbG9hZCggZG9uZSApIHtcblx0Y29uc3QgY29uZmlnID0gZ2V0VGhlbWVDb25maWcoKTtcblxuXHRpZiAoIGNvbmZpZy5kZXYuYnJvd3NlclN5bmMubGl2ZSApIHtcblx0XHRpZiAoIHNlcnZlci5wYXVzZWQgKSB7XG5cdFx0XHRzZXJ2ZXIucmVzdW1lKCk7XG5cdFx0fVxuXHRcdHNlcnZlci5yZWxvYWQoKTtcblx0fSBlbHNlIHtcblx0XHRzZXJ2ZXIucGF1c2UoKTtcblx0fVxuXG5cdGRvbmUoKTtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "browserSync.js"
      ],
      "names": [
        "server",
        "browserSync",
        "create",
        "serve",
        "done",
        "config",
        "dev",
        "live",
        "serverConfig",
        "proxy",
        "proxyURL",
        "port",
        "bypassPort",
        "liveReload",
        "https",
        "certPath",
        "Object",
        "prototype",
        "hasOwnProperty",
        "call",
        "paths",
        "cert",
        "keyPath",
        "key",
        "certFound",
        "fs",
        "existsSync",
        "keyFound",
        "colors",
        "yellow",
        "bold",
        "init",
        "reload",
        "paused",
        "resume",
        "pause"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;;;AAGA;;AACA;;AACA;;AACA;;AAKA;;AACA;;;;AAJA;;;;AAMA;;;;AAKA;AACO,IAAMA,MAAM,GAAGC,wBAAYC,MAAZ,EAAf,C,CAEP;;;;;AACO,SAASC,KAAT,CAAgBC,IAAhB,EAAuB;AAC7B,MAAMC,MAAM,GAAG,4BAAf,CAD6B,CAG7B;;AACA,MAAK,CAAEA,MAAM,CAACC,GAAP,CAAWL,WAAX,CAAuBM,IAA9B,EAAqC;AACpCH,IAAAA,IAAI;AACJ;;AAED,MAAMI,YAAY,GAAG;AACpBC,IAAAA,KAAK,EAAEJ,MAAM,CAACC,GAAP,CAAWL,WAAX,CAAuBS,QADV;AAEpBC,IAAAA,IAAI,EAAEN,MAAM,CAACC,GAAP,CAAWL,WAAX,CAAuBW,UAFT;AAGpBC,IAAAA,UAAU,EAAE,IAHQ;AAIpBC,IAAAA,KAAK,EAAE;AAJa,GAArB,CAR6B,CAe7B;;AACA,MAAKT,MAAM,CAACC,GAAP,CAAWL,WAAX,CAAuBa,KAA5B,EAAoC;AACnC;AACA,QAAMC,QAAQ,GAAGC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAsCd,MAAM,CAACC,GAAP,CAAWL,WAAjD,EAA8D,UAA9D,IAA6EI,MAAM,CAACC,GAAP,CAAWL,WAAX,CAAuBc,QAApG,GAA+GK,iBAAMnB,WAAN,CAAkBoB,IAAlJ;AACA,QAAMC,OAAO,GAAGN,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAsCd,MAAM,CAACC,GAAP,CAAWL,WAAjD,EAA8D,SAA9D,IAA4EI,MAAM,CAACC,GAAP,CAAWL,WAAX,CAAuBqB,OAAnG,GAA6GF,iBAAMnB,WAAN,CAAkBsB,GAA/I,CAHmC,CAKnC;;AACA,QAAMC,SAAS,GAAGC,eAAGC,UAAH,CAAeX,QAAf,CAAlB;;AACA,QAAMY,QAAQ,GAAGF,eAAGC,UAAH,CAAeJ,OAAf,CAAjB,CAPmC,CASnC;;;AACA,QAAKE,SAAL,EAAiB;AAChB,gCAAKI,uBAAOC,MAAP,qCAA6CD,uBAAOE,IAAP,CAAaf,QAAb,CAA7C,EAAL;AACA,KAFD,MAEO;AACN,gCAAKa,uBAAOC,MAAP,gDAAwDD,uBAAOE,IAAP,CAAa,KAAb,CAAxD,iBAAL;AACA,KAdkC,CAgBnC;;;AACA,QAAKH,QAAL,EAAgB;AACf,gCAAKC,uBAAOC,MAAP,6BAAqCD,uBAAOE,IAAP,CAAaR,OAAb,CAArC,EAAL;AACA,KAFD,MAEO;AACN,gCAAKM,uBAAOC,MAAP,wCAAgDD,uBAAOE,IAAP,CAAa,KAAb,CAAhD,iBAAL;AACA,KArBkC,CAuBnC;;;AACA,QAAKN,SAAS,IAAIG,QAAlB,EAA6B;AAC5B,gCAAKC,uBAAOC,MAAP,oBAA4BD,uBAAOE,IAAP,CAAa,IAAb,CAA5B,EAAL;AACAtB,MAAAA,YAAY,CAACM,KAAb,GAAqB;AACpBS,QAAAA,GAAG,EAAED,OADe;AAEpBD,QAAAA,IAAI,EAAEN;AAFc,OAArB;AAIA;AACD,GA/C4B,CAiD7B;;;AACAf,EAAAA,MAAM,CAAC+B,IAAP,CAAavB,YAAb;AAEAJ,EAAAA,IAAI;AACJ,C,CAED;;;AACO,SAAS4B,MAAT,CAAiB5B,IAAjB,EAAwB;AAC9B,MAAMC,MAAM,GAAG,4BAAf;;AAEA,MAAKA,MAAM,CAACC,GAAP,CAAWL,WAAX,CAAuBM,IAA5B,EAAmC;AAClC,QAAKP,MAAM,CAACiC,MAAZ,EAAqB;AACpBjC,MAAAA,MAAM,CAACkC,MAAP;AACA;;AACDlC,IAAAA,MAAM,CAACgC,MAAP;AACA,GALD,MAKO;AACNhC,IAAAA,MAAM,CAACmC,KAAP;AACA;;AAED/B,EAAAA,IAAI;AACJ",
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport browserSync from 'browser-sync';\nimport log from 'fancy-log';\nimport colors from 'ansi-colors';\nimport fs from 'fs';\n\n/**\n * Internal dependencies\n */\nimport { paths } from './constants';\nimport { getThemeConfig } from './utils';\n\n/**\n * Conditionally set up BrowserSync.\n * Only run BrowserSync if config.browserSync.live = true.\n */\n\n// Create a BrowserSync instance:\nexport const server = browserSync.create();\n\n// Initialize the BrowserSync server conditionally:\nexport function serve( done ) {\n\tconst config = getThemeConfig();\n\n\t// bail early if not serving via BrowserSync\n\tif ( ! config.dev.browserSync.live ) {\n\t\tdone();\n\t}\n\n\tconst serverConfig = {\n\t\tproxy: config.dev.browserSync.proxyURL,\n\t\tport: config.dev.browserSync.bypassPort,\n\t\tliveReload: true,\n\t\thttps: false,\n\t};\n\n\t// Only setup HTTPS certificates if HTTPS is enabled\n\tif ( config.dev.browserSync.https ) {\n\t\t// Use a custom path key/cert if defined, otherwise use the default path\n\t\tconst certPath = Object.prototype.hasOwnProperty.call( config.dev.browserSync, 'certPath' ) ? config.dev.browserSync.certPath : paths.browserSync.cert;\n\t\tconst keyPath = Object.prototype.hasOwnProperty.call( config.dev.browserSync, 'keyPath' ) ? config.dev.browserSync.keyPath : paths.browserSync.key;\n\n\t\t// Ensure the key/cert files exist\n\t\tconst certFound = fs.existsSync( certPath );\n\t\tconst keyFound = fs.existsSync( keyPath );\n\n\t\t// Let the user know if we found a cert\n\t\tif ( certFound ) {\n\t\t\tlog( colors.yellow( `Using the SSL certificate ${ colors.bold( certPath ) }` ) );\n\t\t} else {\n\t\t\tlog( colors.yellow( `No SSL certificate found, HTTPS will ${ colors.bold( 'not' ) } be enabled` ) );\n\t\t}\n\n\t\t// Let the user know if we found a key\n\t\tif ( keyFound ) {\n\t\t\tlog( colors.yellow( `Using the SSL key ${ colors.bold( keyPath ) }` ) );\n\t\t} else {\n\t\t\tlog( colors.yellow( `No SSL key found, HTTPS will ${ colors.bold( 'not' ) } be enabled` ) );\n\t\t}\n\n\t\t// Only enable HTTPS if there is a cert and a key\n\t\tif ( certFound && keyFound ) {\n\t\t\tlog( colors.yellow( `HTTPS is ${ colors.bold( 'on' ) }` ) );\n\t\t\tserverConfig.https = {\n\t\t\t\tkey: keyPath,\n\t\t\t\tcert: certPath,\n\t\t\t};\n\t\t}\n\t}\n\n\t// Start the BrowserSync server\n\tserver.init( serverConfig );\n\n\tdone();\n}\n\n// Reload the live site:\nexport function reload( done ) {\n\tconst config = getThemeConfig();\n\n\tif ( config.dev.browserSync.live ) {\n\t\tif ( server.paused ) {\n\t\t\tserver.resume();\n\t\t}\n\t\tserver.reload();\n\t} else {\n\t\tserver.pause();\n\t}\n\n\tdone();\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566485032000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"filename\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/scripts.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/scripts.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/scripts.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/scripts.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
        "sourceFileName": "scripts.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict'; // External dependencies\n\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.scriptsBeforeReplacementStream = scriptsBeforeReplacementStream;\nexports.scriptsAfterReplacementStream = scriptsAfterReplacementStream;\nexports[\"default\"] = scripts;\n\nvar _gulp = require(\"gulp\");\n\nvar _pump = _interopRequireDefault(require(\"pump\"));\n\nvar _mississippi = require(\"mississippi\");\n\nvar _constants = require(\"./constants\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\nfunction scriptsBeforeReplacementStream() {\n  // Return a single stream containing all the\n  // before replacement functionality\n  return _mississippi.pipeline.obj([(0, _utils.logError)('JavaScript'), _constants.gulpPlugins.newer({\n    dest: _constants.paths.scripts.dest,\n    extra: [_constants.paths.config.themeConfig]\n  }), _constants.gulpPlugins.eslint(), _constants.gulpPlugins.eslint.format()]);\n}\n\nfunction scriptsAfterReplacementStream() {\n  var config = (0, _utils.getThemeConfig)(); // Return a single stream containing all the\n  // after replacement functionality\n\n  return _mississippi.pipeline.obj([_constants.gulpPlugins.babel({\n    presets: ['@babel/preset-env']\n  }), _constants.gulpPlugins[\"if\"](!config.dev.debug.scripts, _constants.gulpPlugins.uglify()), _constants.gulpPlugins.rename({\n    suffix: '.min'\n  })]);\n}\n/**\n * JavaScript via Babel, ESlint, and uglify.\n * @param {function} done function to call when async processes finish\n * @return {Stream} single stream\n */\n\n\nfunction scripts(done) {\n  return (0, _pump[\"default\"])([(0, _gulp.src)(_constants.paths.scripts.src, {\n    sourcemaps: !_constants.isProd\n  }), scriptsBeforeReplacementStream(), // Only do string replacements when building for production\n  _constants.gulpPlugins[\"if\"](_constants.isProd, (0, _utils.getStringReplacementTasks)()), scriptsAfterReplacementStream(), (0, _gulp.dest)(_constants.paths.scripts.dest, {\n    sourcemaps: !_constants.isProd\n  })], done);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwibmFtZXMiOlsic2NyaXB0c0JlZm9yZVJlcGxhY2VtZW50U3RyZWFtIiwicGlwZWxpbmUiLCJvYmoiLCJndWxwUGx1Z2lucyIsIm5ld2VyIiwiZGVzdCIsInBhdGhzIiwic2NyaXB0cyIsImV4dHJhIiwiY29uZmlnIiwidGhlbWVDb25maWciLCJlc2xpbnQiLCJmb3JtYXQiLCJzY3JpcHRzQWZ0ZXJSZXBsYWNlbWVudFN0cmVhbSIsImJhYmVsIiwicHJlc2V0cyIsImRldiIsImRlYnVnIiwidWdsaWZ5IiwicmVuYW1lIiwic3VmZml4IiwiZG9uZSIsInNyYyIsInNvdXJjZW1hcHMiLCJpc1Byb2QiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsYSxDQUVBOztBQUNBOzs7Ozs7Ozs7OztBQUdBOztBQUNBOztBQUNBOztBQUtBOztBQUNBOzs7O0FBSkE7OztBQU1PLFNBQVNBLDhCQUFULEdBQTBDO0FBQ2hEO0FBQ0E7QUFDQSxTQUFPQyxzQkFBU0MsR0FBVCxDQUFjLENBQ3BCLHFCQUFVLFlBQVYsQ0FEb0IsRUFFcEJDLHVCQUFZQyxLQUFaLENBQW1CO0FBQ2xCQyxJQUFBQSxJQUFJLEVBQUVDLGlCQUFNQyxPQUFOLENBQWNGLElBREY7QUFFbEJHLElBQUFBLEtBQUssRUFBRSxDQUFFRixpQkFBTUcsTUFBTixDQUFhQyxXQUFmO0FBRlcsR0FBbkIsQ0FGb0IsRUFNcEJQLHVCQUFZUSxNQUFaLEVBTm9CLEVBT3BCUix1QkFBWVEsTUFBWixDQUFtQkMsTUFBbkIsRUFQb0IsQ0FBZCxDQUFQO0FBU0E7O0FBRU0sU0FBU0MsNkJBQVQsR0FBeUM7QUFDL0MsTUFBTUosTUFBTSxHQUFHLDRCQUFmLENBRCtDLENBRy9DO0FBQ0E7O0FBQ0EsU0FBT1Isc0JBQVNDLEdBQVQsQ0FBYyxDQUNwQkMsdUJBQVlXLEtBQVosQ0FBbUI7QUFDbEJDLElBQUFBLE9BQU8sRUFBRSxDQUNSLG1CQURRO0FBRFMsR0FBbkIsQ0FEb0IsRUFNcEJaLDZCQUNDLENBQUVNLE1BQU0sQ0FBQ08sR0FBUCxDQUFXQyxLQUFYLENBQWlCVixPQURwQixFQUVDSix1QkFBWWUsTUFBWixFQUZELENBTm9CLEVBVXBCZix1QkFBWWdCLE1BQVosQ0FBb0I7QUFDbkJDLElBQUFBLE1BQU0sRUFBRTtBQURXLEdBQXBCLENBVm9CLENBQWQsQ0FBUDtBQWNBO0FBRUQ7Ozs7Ozs7QUFLZSxTQUFTYixPQUFULENBQWtCYyxJQUFsQixFQUF5QjtBQUN2QyxTQUFPLHNCQUFNLENBQ1osZUFBS2YsaUJBQU1DLE9BQU4sQ0FBY2UsR0FBbkIsRUFBd0I7QUFBRUMsSUFBQUEsVUFBVSxFQUFFLENBQUVDO0FBQWhCLEdBQXhCLENBRFksRUFFWnhCLDhCQUE4QixFQUZsQixFQUdaO0FBQ0FHLCtCQUNDcUIsaUJBREQsRUFFQyx1Q0FGRCxDQUpZLEVBUVpYLDZCQUE2QixFQVJqQixFQVNaLGdCQUFNUCxpQkFBTUMsT0FBTixDQUFjRixJQUFwQixFQUEwQjtBQUFFa0IsSUFBQUEsVUFBVSxFQUFFLENBQUVDO0FBQWhCLEdBQTFCLENBVFksQ0FBTixFQVVKSCxJQVZJLENBQVA7QUFXQSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYXVzdGludHVkZS9Eb2N1bWVudHMvUm9hZCBhbmQgVHJhY2sgU3BlY2lhbGlzdHMvd3AtY29udGVudC90aGVtZXMvd3ByaWctcm9hZGFuZHRyYWNrc3BlY2lhbGlzdHMvZ3VscCIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1lbnYgZXM2ICovXG4ndXNlIHN0cmljdCc7XG5cbi8vIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgc3JjLCBkZXN0IH0gZnJvbSAnZ3VscCc7XG5pbXBvcnQgcHVtcCBmcm9tICdwdW1wJztcbmltcG9ydCB7IHBpcGVsaW5lIH0gZnJvbSAnbWlzc2lzc2lwcGknO1xuXG4vKipcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBwYXRocywgZ3VscFBsdWdpbnMsIGlzUHJvZCB9IGZyb20gJy4vY29uc3RhbnRzJztcbmltcG9ydCB7IGdldFRoZW1lQ29uZmlnLCBnZXRTdHJpbmdSZXBsYWNlbWVudFRhc2tzLCBsb2dFcnJvciB9IGZyb20gJy4vdXRpbHMnO1xuXG5leHBvcnQgZnVuY3Rpb24gc2NyaXB0c0JlZm9yZVJlcGxhY2VtZW50U3RyZWFtKCkge1xuXHQvLyBSZXR1cm4gYSBzaW5nbGUgc3RyZWFtIGNvbnRhaW5pbmcgYWxsIHRoZVxuXHQvLyBiZWZvcmUgcmVwbGFjZW1lbnQgZnVuY3Rpb25hbGl0eVxuXHRyZXR1cm4gcGlwZWxpbmUub2JqKCBbXG5cdFx0bG9nRXJyb3IoICdKYXZhU2NyaXB0JyApLFxuXHRcdGd1bHBQbHVnaW5zLm5ld2VyKCB7XG5cdFx0XHRkZXN0OiBwYXRocy5zY3JpcHRzLmRlc3QsXG5cdFx0XHRleHRyYTogWyBwYXRocy5jb25maWcudGhlbWVDb25maWcgXSxcblx0XHR9ICksXG5cdFx0Z3VscFBsdWdpbnMuZXNsaW50KCksXG5cdFx0Z3VscFBsdWdpbnMuZXNsaW50LmZvcm1hdCgpLFxuXHRdICk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzY3JpcHRzQWZ0ZXJSZXBsYWNlbWVudFN0cmVhbSgpIHtcblx0Y29uc3QgY29uZmlnID0gZ2V0VGhlbWVDb25maWcoKTtcblxuXHQvLyBSZXR1cm4gYSBzaW5nbGUgc3RyZWFtIGNvbnRhaW5pbmcgYWxsIHRoZVxuXHQvLyBhZnRlciByZXBsYWNlbWVudCBmdW5jdGlvbmFsaXR5XG5cdHJldHVybiBwaXBlbGluZS5vYmooIFtcblx0XHRndWxwUGx1Z2lucy5iYWJlbCgge1xuXHRcdFx0cHJlc2V0czogW1xuXHRcdFx0XHQnQGJhYmVsL3ByZXNldC1lbnYnLFxuXHRcdFx0XSxcblx0XHR9ICksXG5cdFx0Z3VscFBsdWdpbnMuaWYoXG5cdFx0XHQhIGNvbmZpZy5kZXYuZGVidWcuc2NyaXB0cyxcblx0XHRcdGd1bHBQbHVnaW5zLnVnbGlmeSgpXG5cdFx0KSxcblx0XHRndWxwUGx1Z2lucy5yZW5hbWUoIHtcblx0XHRcdHN1ZmZpeDogJy5taW4nLFxuXHRcdH0gKSxcblx0XSApO1xufVxuXG4vKipcbiAqIEphdmFTY3JpcHQgdmlhIEJhYmVsLCBFU2xpbnQsIGFuZCB1Z2xpZnkuXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBkb25lIGZ1bmN0aW9uIHRvIGNhbGwgd2hlbiBhc3luYyBwcm9jZXNzZXMgZmluaXNoXG4gKiBAcmV0dXJuIHtTdHJlYW19IHNpbmdsZSBzdHJlYW1cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2NyaXB0cyggZG9uZSApIHtcblx0cmV0dXJuIHB1bXAoIFtcblx0XHRzcmMoIHBhdGhzLnNjcmlwdHMuc3JjLCB7IHNvdXJjZW1hcHM6ICEgaXNQcm9kIH0gKSxcblx0XHRzY3JpcHRzQmVmb3JlUmVwbGFjZW1lbnRTdHJlYW0oKSxcblx0XHQvLyBPbmx5IGRvIHN0cmluZyByZXBsYWNlbWVudHMgd2hlbiBidWlsZGluZyBmb3IgcHJvZHVjdGlvblxuXHRcdGd1bHBQbHVnaW5zLmlmKFxuXHRcdFx0aXNQcm9kLFxuXHRcdFx0Z2V0U3RyaW5nUmVwbGFjZW1lbnRUYXNrcygpXG5cdFx0KSxcblx0XHRzY3JpcHRzQWZ0ZXJSZXBsYWNlbWVudFN0cmVhbSgpLFxuXHRcdGRlc3QoIHBhdGhzLnNjcmlwdHMuZGVzdCwgeyBzb3VyY2VtYXBzOiAhIGlzUHJvZCB9ICksXG5cdF0sIGRvbmUgKTtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "scripts.js"
      ],
      "names": [
        "scriptsBeforeReplacementStream",
        "pipeline",
        "obj",
        "gulpPlugins",
        "newer",
        "dest",
        "paths",
        "scripts",
        "extra",
        "config",
        "themeConfig",
        "eslint",
        "format",
        "scriptsAfterReplacementStream",
        "babel",
        "presets",
        "dev",
        "debug",
        "uglify",
        "rename",
        "suffix",
        "done",
        "src",
        "sourcemaps",
        "isProd"
      ],
      "mappings": "AAAA;AACA,a,CAEA;;AACA;;;;;;;;;;;AAGA;;AACA;;AACA;;AAKA;;AACA;;;;AAJA;;;AAMO,SAASA,8BAAT,GAA0C;AAChD;AACA;AACA,SAAOC,sBAASC,GAAT,CAAc,CACpB,qBAAU,YAAV,CADoB,EAEpBC,uBAAYC,KAAZ,CAAmB;AAClBC,IAAAA,IAAI,EAAEC,iBAAMC,OAAN,CAAcF,IADF;AAElBG,IAAAA,KAAK,EAAE,CAAEF,iBAAMG,MAAN,CAAaC,WAAf;AAFW,GAAnB,CAFoB,EAMpBP,uBAAYQ,MAAZ,EANoB,EAOpBR,uBAAYQ,MAAZ,CAAmBC,MAAnB,EAPoB,CAAd,CAAP;AASA;;AAEM,SAASC,6BAAT,GAAyC;AAC/C,MAAMJ,MAAM,GAAG,4BAAf,CAD+C,CAG/C;AACA;;AACA,SAAOR,sBAASC,GAAT,CAAc,CACpBC,uBAAYW,KAAZ,CAAmB;AAClBC,IAAAA,OAAO,EAAE,CACR,mBADQ;AADS,GAAnB,CADoB,EAMpBZ,6BACC,CAAEM,MAAM,CAACO,GAAP,CAAWC,KAAX,CAAiBV,OADpB,EAECJ,uBAAYe,MAAZ,EAFD,CANoB,EAUpBf,uBAAYgB,MAAZ,CAAoB;AACnBC,IAAAA,MAAM,EAAE;AADW,GAApB,CAVoB,CAAd,CAAP;AAcA;AAED;;;;;;;AAKe,SAASb,OAAT,CAAkBc,IAAlB,EAAyB;AACvC,SAAO,sBAAM,CACZ,eAAKf,iBAAMC,OAAN,CAAce,GAAnB,EAAwB;AAAEC,IAAAA,UAAU,EAAE,CAAEC;AAAhB,GAAxB,CADY,EAEZxB,8BAA8B,EAFlB,EAGZ;AACAG,+BACCqB,iBADD,EAEC,uCAFD,CAJY,EAQZX,6BAA6B,EARjB,EASZ,gBAAMP,iBAAMC,OAAN,CAAcF,IAApB,EAA0B;AAAEkB,IAAAA,UAAU,EAAE,CAAEC;AAAhB,GAA1B,CATY,CAAN,EAUJH,IAVI,CAAP;AAWA",
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n// External dependencies\n/**\n * External dependencies\n */\nimport { src, dest } from 'gulp';\nimport pump from 'pump';\nimport { pipeline } from 'mississippi';\n\n/**\n * Internal dependencies\n */\nimport { paths, gulpPlugins, isProd } from './constants';\nimport { getThemeConfig, getStringReplacementTasks, logError } from './utils';\n\nexport function scriptsBeforeReplacementStream() {\n\t// Return a single stream containing all the\n\t// before replacement functionality\n\treturn pipeline.obj( [\n\t\tlogError( 'JavaScript' ),\n\t\tgulpPlugins.newer( {\n\t\t\tdest: paths.scripts.dest,\n\t\t\textra: [ paths.config.themeConfig ],\n\t\t} ),\n\t\tgulpPlugins.eslint(),\n\t\tgulpPlugins.eslint.format(),\n\t] );\n}\n\nexport function scriptsAfterReplacementStream() {\n\tconst config = getThemeConfig();\n\n\t// Return a single stream containing all the\n\t// after replacement functionality\n\treturn pipeline.obj( [\n\t\tgulpPlugins.babel( {\n\t\t\tpresets: [\n\t\t\t\t'@babel/preset-env',\n\t\t\t],\n\t\t} ),\n\t\tgulpPlugins.if(\n\t\t\t! config.dev.debug.scripts,\n\t\t\tgulpPlugins.uglify()\n\t\t),\n\t\tgulpPlugins.rename( {\n\t\t\tsuffix: '.min',\n\t\t} ),\n\t] );\n}\n\n/**\n * JavaScript via Babel, ESlint, and uglify.\n * @param {function} done function to call when async processes finish\n * @return {Stream} single stream\n */\nexport default function scripts( done ) {\n\treturn pump( [\n\t\tsrc( paths.scripts.src, { sourcemaps: ! isProd } ),\n\t\tscriptsBeforeReplacementStream(),\n\t\t// Only do string replacements when building for production\n\t\tgulpPlugins.if(\n\t\t\tisProd,\n\t\t\tgetStringReplacementTasks()\n\t\t),\n\t\tscriptsAfterReplacementStream(),\n\t\tdest( paths.scripts.dest, { sourcemaps: ! isProd } ),\n\t], done );\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566485032000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"filename\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/styles.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/styles.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/styles.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/styles.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
        "sourceFileName": "styles.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stylesBeforeReplacementStream = stylesBeforeReplacementStream;\nexports.stylesAfterReplacementStream = stylesAfterReplacementStream;\nexports[\"default\"] = styles;\n\nvar _gulp = require(\"gulp\");\n\nvar _postcssPresetEnv = _interopRequireDefault(require(\"postcss-preset-env\"));\n\nvar _postcssImport = _interopRequireDefault(require(\"postcss-import\"));\n\nvar _pump = _interopRequireDefault(require(\"pump\"));\n\nvar _cssnano = _interopRequireDefault(require(\"cssnano\"));\n\nvar _stylelint = _interopRequireDefault(require(\"stylelint\"));\n\nvar _postcssReporter = _interopRequireDefault(require(\"postcss-reporter\"));\n\nvar _postcssCalc = _interopRequireDefault(require(\"postcss-calc\"));\n\nvar _mississippi = require(\"mississippi\");\n\nvar _constants = require(\"./constants\");\n\nvar _utils = require(\"./utils\");\n\nvar _browserSync = require(\"./browserSync\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\nfunction stylesBeforeReplacementStream() {\n  // Return a single stream containing all the\n  // before replacement functionality\n  return _mississippi.pipeline.obj([(0, _utils.logError)('CSS'), _constants.gulpPlugins.newer({\n    dest: _constants.paths.styles.dest,\n    extra: [_constants.paths.config.themeConfig]\n  }), _constants.gulpPlugins.phpcs({\n    bin: \"\".concat(_constants.rootPath, \"/vendor/bin/phpcs\"),\n    standard: 'WordPress',\n    warningSeverity: 0\n  }), // Log all problems that were found.\n  _constants.gulpPlugins.phpcs.reporter('log')]);\n}\n\nfunction stylesAfterReplacementStream() {\n  var config = (0, _utils.getThemeConfig)();\n  var postcssPlugins = [(0, _stylelint[\"default\"])(), (0, _postcssPresetEnv[\"default\"])({\n    importFrom: (0, _utils.configValueDefined)('config.dev.styles.importFrom') ? (0, _utils.appendBaseToFilePathArray)(config.dev.styles.importFrom, _constants.paths.styles.srcDir) : [],\n    stage: (0, _utils.configValueDefined)('config.dev.styles.stage') ? config.dev.styles.stage : 3,\n    autoprefixer: (0, _utils.configValueDefined)('config.dev.styles.autoprefixer') ? config.dev.styles.autoprefixer : {},\n    features: (0, _utils.configValueDefined)('config.dev.styles.features') ? config.dev.styles.features : {\n      'custom-media-queries': {\n        preserve: false\n      },\n      'custom-properties': {\n        preserve: true\n      },\n      'nesting-rules': true\n    }\n  }), (0, _postcssCalc[\"default\"])({\n    preserve: false\n  }), (0, _cssnano[\"default\"])()]; // Skip minifying files if we aren't building for\n  // production and debug is enabled\n\n  if (config.dev.debug.styles && !_constants.isProd) {\n    postcssPlugins.pop();\n  } // Report messages from other postcss plugins\n\n\n  postcssPlugins.push((0, _postcssReporter[\"default\"])({\n    clearReportedMessages: true\n  })); // Return a single stream containing all the\n  // after replacement functionality\n\n  return _mississippi.pipeline.obj([_constants.gulpPlugins.postcss([(0, _postcssImport[\"default\"])({\n    path: [_constants.paths.styles.srcDir],\n    plugins: [(0, _stylelint[\"default\"])()]\n  })]), _constants.gulpPlugins.postcss(postcssPlugins), _constants.gulpPlugins[\"if\"](config.dev.debug.styles, _constants.gulpPlugins.tabify(2, true)), _constants.gulpPlugins.rename({\n    suffix: '.min'\n  }), _browserSync.server.stream({\n    match: '**/*.css'\n  })]);\n}\n/**\n* CSS via PostCSS + CSSNext (includes Autoprefixer by default).\n* @param {function} done function to call when async processes finish\n* @return {Stream} single stream\n*/\n\n\nfunction styles(done) {\n  return (0, _pump[\"default\"])([(0, _gulp.src)(_constants.paths.styles.src, {\n    sourcemaps: !_constants.isProd\n  }), stylesBeforeReplacementStream(), // Only do string replacements when building for production\n  _constants.gulpPlugins[\"if\"](_constants.isProd, (0, _utils.getStringReplacementTasks)()), stylesAfterReplacementStream(), (0, _gulp.dest)(_constants.paths.styles.dest, {\n    sourcemaps: !_constants.isProd\n  })], done);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "styles.js"
      ],
      "names": [
        "stylesBeforeReplacementStream",
        "pipeline",
        "obj",
        "gulpPlugins",
        "newer",
        "dest",
        "paths",
        "styles",
        "extra",
        "config",
        "themeConfig",
        "phpcs",
        "bin",
        "rootPath",
        "standard",
        "warningSeverity",
        "reporter",
        "stylesAfterReplacementStream",
        "postcssPlugins",
        "importFrom",
        "dev",
        "srcDir",
        "stage",
        "autoprefixer",
        "features",
        "preserve",
        "debug",
        "isProd",
        "pop",
        "push",
        "clearReportedMessages",
        "postcss",
        "path",
        "plugins",
        "tabify",
        "rename",
        "suffix",
        "server",
        "stream",
        "match",
        "done",
        "src",
        "sourcemaps"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAKA;;AACA;;AAOA;;;;AAXA;;;AAaO,SAASA,6BAAT,GAAyC;AAC/C;AACA;AACA,SAAOC,sBAASC,GAAT,CAAc,CACpB,qBAAU,KAAV,CADoB,EAEpBC,uBAAYC,KAAZ,CAAmB;AAClBC,IAAAA,IAAI,EAAEC,iBAAMC,MAAN,CAAaF,IADD;AAElBG,IAAAA,KAAK,EAAE,CAAEF,iBAAMG,MAAN,CAAaC,WAAf;AAFW,GAAnB,CAFoB,EAMpBP,uBAAYQ,KAAZ,CAAmB;AAClBC,IAAAA,GAAG,YAAMC,mBAAN,sBADe;AAElBC,IAAAA,QAAQ,EAAE,WAFQ;AAGlBC,IAAAA,eAAe,EAAE;AAHC,GAAnB,CANoB,EAWpB;AACAZ,yBAAYQ,KAAZ,CAAkBK,QAAlB,CAA4B,KAA5B,CAZoB,CAAd,CAAP;AAcA;;AAEM,SAASC,4BAAT,GAAwC;AAC9C,MAAMR,MAAM,GAAG,4BAAf;AAEA,MAAMS,cAAc,GAAG,CACtB,4BADsB,EAEtB,kCAAkB;AACjBC,IAAAA,UAAU,EACT,+BAAoB,8BAApB,IACC,sCAA2BV,MAAM,CAACW,GAAP,CAAWb,MAAX,CAAkBY,UAA7C,EAAyDb,iBAAMC,MAAN,CAAac,MAAtE,CADD,GAEC,EAJe;AAMjBC,IAAAA,KAAK,EACJ,+BAAoB,yBAApB,IACCb,MAAM,CAACW,GAAP,CAAWb,MAAX,CAAkBe,KADnB,GAEC,CATe;AAWjBC,IAAAA,YAAY,EACX,+BAAoB,gCAApB,IACCd,MAAM,CAACW,GAAP,CAAWb,MAAX,CAAkBgB,YADnB,GAEC,EAde;AAgBjBC,IAAAA,QAAQ,EACP,+BAAoB,4BAApB,IACCf,MAAM,CAACW,GAAP,CAAWb,MAAX,CAAkBiB,QADnB,GAEC;AACC,8BAAwB;AACvBC,QAAAA,QAAQ,EAAE;AADa,OADzB;AAIC,2BAAqB;AACpBA,QAAAA,QAAQ,EAAE;AADU,OAJtB;AAOC,uBAAiB;AAPlB;AAnBe,GAAlB,CAFsB,EAgCtB,6BAAM;AACLA,IAAAA,QAAQ,EAAE;AADL,GAAN,CAhCsB,EAmCtB,0BAnCsB,CAAvB,CAH8C,CAyC9C;AACA;;AACA,MAAKhB,MAAM,CAACW,GAAP,CAAWM,KAAX,CAAiBnB,MAAjB,IAA2B,CAAEoB,iBAAlC,EAA2C;AAC1CT,IAAAA,cAAc,CAACU,GAAf;AACA,GA7C6C,CA+C9C;;;AACAV,EAAAA,cAAc,CAACW,IAAf,CACC,iCAAU;AAAEC,IAAAA,qBAAqB,EAAE;AAAzB,GAAV,CADD,EAhD8C,CAoD9C;AACA;;AACA,SAAO7B,sBAASC,GAAT,CAAc,CACpBC,uBAAY4B,OAAZ,CAAqB,CACpB,+BAAU;AACTC,IAAAA,IAAI,EAAE,CAAE1B,iBAAMC,MAAN,CAAac,MAAf,CADG;AAETY,IAAAA,OAAO,EAAE,CACR,4BADQ;AAFA,GAAV,CADoB,CAArB,CADoB,EASpB9B,uBAAY4B,OAAZ,CAAqBb,cAArB,CAToB,EAUpBf,6BACCM,MAAM,CAACW,GAAP,CAAWM,KAAX,CAAiBnB,MADlB,EAECJ,uBAAY+B,MAAZ,CAAoB,CAApB,EAAuB,IAAvB,CAFD,CAVoB,EAcpB/B,uBAAYgC,MAAZ,CAAoB;AACnBC,IAAAA,MAAM,EAAE;AADW,GAApB,CAdoB,EAiBpBC,oBAAOC,MAAP,CAAe;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAf,CAjBoB,CAAd,CAAP;AAmBA;AAED;;;;;;;AAKe,SAAShC,MAAT,CAAiBiC,IAAjB,EAAwB;AACtC,SAAO,sBAAM,CACZ,eAAKlC,iBAAMC,MAAN,CAAakC,GAAlB,EAAuB;AAAEC,IAAAA,UAAU,EAAE,CAAEf;AAAhB,GAAvB,CADY,EAEZ3B,6BAA6B,EAFjB,EAGZ;AACAG,+BACCwB,iBADD,EAEC,uCAFD,CAJY,EAQZV,4BAA4B,EARhB,EASZ,gBAAMX,iBAAMC,MAAN,CAAaF,IAAnB,EAAyB;AAAEqC,IAAAA,UAAU,EAAE,CAAEf;AAAhB,GAAzB,CATY,CAAN,EAUJa,IAVI,CAAP;AAWA",
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport { src, dest } from 'gulp';\nimport postcssPresetEnv from 'postcss-preset-env';\nimport AtImport from 'postcss-import';\nimport pump from 'pump';\nimport cssnano from 'cssnano';\nimport stylelint from 'stylelint';\nimport reporter from 'postcss-reporter';\nimport calc from 'postcss-calc';\nimport { pipeline } from 'mississippi';\n\n/**\n * Internal dependencies\n */\nimport { rootPath, paths, gulpPlugins, isProd } from './constants';\nimport {\n\tgetThemeConfig,\n\tgetStringReplacementTasks,\n\tlogError,\n\tconfigValueDefined,\n\tappendBaseToFilePathArray,\n} from './utils';\nimport { server } from './browserSync';\n\nexport function stylesBeforeReplacementStream() {\n\t// Return a single stream containing all the\n\t// before replacement functionality\n\treturn pipeline.obj( [\n\t\tlogError( 'CSS' ),\n\t\tgulpPlugins.newer( {\n\t\t\tdest: paths.styles.dest,\n\t\t\textra: [ paths.config.themeConfig ],\n\t\t} ),\n\t\tgulpPlugins.phpcs( {\n\t\t\tbin: `${ rootPath }/vendor/bin/phpcs`,\n\t\t\tstandard: 'WordPress',\n\t\t\twarningSeverity: 0,\n\t\t} ),\n\t\t// Log all problems that were found.\n\t\tgulpPlugins.phpcs.reporter( 'log' ),\n\t] );\n}\n\nexport function stylesAfterReplacementStream() {\n\tconst config = getThemeConfig();\n\n\tconst postcssPlugins = [\n\t\tstylelint(),\n\t\tpostcssPresetEnv( {\n\t\t\timportFrom: (\n\t\t\t\tconfigValueDefined( 'config.dev.styles.importFrom' ) ?\n\t\t\t\t\tappendBaseToFilePathArray( config.dev.styles.importFrom, paths.styles.srcDir ) :\n\t\t\t\t\t[]\n\t\t\t),\n\t\t\tstage: (\n\t\t\t\tconfigValueDefined( 'config.dev.styles.stage' ) ?\n\t\t\t\t\tconfig.dev.styles.stage :\n\t\t\t\t\t3\n\t\t\t),\n\t\t\tautoprefixer: (\n\t\t\t\tconfigValueDefined( 'config.dev.styles.autoprefixer' ) ?\n\t\t\t\t\tconfig.dev.styles.autoprefixer :\n\t\t\t\t\t{}\n\t\t\t),\n\t\t\tfeatures: (\n\t\t\t\tconfigValueDefined( 'config.dev.styles.features' ) ?\n\t\t\t\t\tconfig.dev.styles.features :\n\t\t\t\t\t{\n\t\t\t\t\t\t'custom-media-queries': {\n\t\t\t\t\t\t\tpreserve: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'custom-properties': {\n\t\t\t\t\t\t\tpreserve: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'nesting-rules': true,\n\t\t\t\t\t}\n\t\t\t),\n\t\t} ),\n\t\tcalc( {\n\t\t\tpreserve: false,\n\t\t} ),\n\t\tcssnano(),\n\t];\n\n\t// Skip minifying files if we aren't building for\n\t// production and debug is enabled\n\tif ( config.dev.debug.styles && ! isProd ) {\n\t\tpostcssPlugins.pop();\n\t}\n\n\t// Report messages from other postcss plugins\n\tpostcssPlugins.push(\n\t\treporter( { clearReportedMessages: true } )\n\t);\n\n\t// Return a single stream containing all the\n\t// after replacement functionality\n\treturn pipeline.obj( [\n\t\tgulpPlugins.postcss( [\n\t\t\tAtImport( {\n\t\t\t\tpath: [ paths.styles.srcDir ],\n\t\t\t\tplugins: [\n\t\t\t\t\tstylelint(),\n\t\t\t\t],\n\t\t\t} ),\n\t\t] ),\n\t\tgulpPlugins.postcss( postcssPlugins ),\n\t\tgulpPlugins.if(\n\t\t\tconfig.dev.debug.styles,\n\t\t\tgulpPlugins.tabify( 2, true )\n\t\t),\n\t\tgulpPlugins.rename( {\n\t\t\tsuffix: '.min',\n\t\t} ),\n\t\tserver.stream( { match: '**/*.css' } ),\n\t] );\n}\n\n/**\n* CSS via PostCSS + CSSNext (includes Autoprefixer by default).\n* @param {function} done function to call when async processes finish\n* @return {Stream} single stream\n*/\nexport default function styles( done ) {\n\treturn pump( [\n\t\tsrc( paths.styles.src, { sourcemaps: ! isProd } ),\n\t\tstylesBeforeReplacementStream(),\n\t\t// Only do string replacements when building for production\n\t\tgulpPlugins.if(\n\t\t\tisProd,\n\t\t\tgetStringReplacementTasks()\n\t\t),\n\t\tstylesAfterReplacementStream(),\n\t\tdest( paths.styles.dest, { sourcemaps: ! isProd } ),\n\t], done );\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566485032000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"filename\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/editorStyles.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/editorStyles.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/editorStyles.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/editorStyles.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
        "sourceFileName": "editorStyles.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.editorStylesBeforeReplacementStream = editorStylesBeforeReplacementStream;\nexports.editorStylesAfterReplacementStream = editorStylesAfterReplacementStream;\nexports[\"default\"] = editorStyles;\n\nvar _gulp = require(\"gulp\");\n\nvar _postcssPresetEnv = _interopRequireDefault(require(\"postcss-preset-env\"));\n\nvar _postcssImport = _interopRequireDefault(require(\"postcss-import\"));\n\nvar _pump = _interopRequireDefault(require(\"pump\"));\n\nvar _cssnano = _interopRequireDefault(require(\"cssnano\"));\n\nvar _stylelint = _interopRequireDefault(require(\"stylelint\"));\n\nvar _postcssReporter = _interopRequireDefault(require(\"postcss-reporter\"));\n\nvar _postcssCalc = _interopRequireDefault(require(\"postcss-calc\"));\n\nvar _mississippi = require(\"mississippi\");\n\nvar _constants = require(\"./constants\");\n\nvar _utils = require(\"./utils\");\n\nvar _browserSync = require(\"./browserSync\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\nfunction editorStylesBeforeReplacementStream() {\n  // Return a single stream containing all the\n  // before replacement functionality\n  return _mississippi.pipeline.obj([(0, _utils.logError)('Editor CSS'), _constants.gulpPlugins.newer({\n    dest: _constants.paths.styles.dest,\n    extra: [_constants.paths.config.themeConfig]\n  }), _constants.gulpPlugins.phpcs({\n    bin: \"\".concat(_constants.rootPath, \"/vendor/bin/phpcs\"),\n    standard: 'WordPress',\n    warningSeverity: 0\n  }), // Log all problems that were found.\n  _constants.gulpPlugins.phpcs.reporter('log')]);\n}\n\nfunction editorStylesAfterReplacementStream() {\n  var config = (0, _utils.getThemeConfig)();\n  var postcssPlugins = [(0, _stylelint[\"default\"])(), (0, _postcssPresetEnv[\"default\"])({\n    importFrom: (0, _utils.configValueDefined)('config.dev.styles.importFrom') ? (0, _utils.appendBaseToFilePathArray)(config.dev.styles.importFrom, _constants.paths.styles.srcDir) : [],\n    stage: (0, _utils.configValueDefined)('config.dev.styles.stage') ? config.dev.styles.stage : 3,\n    autoprefixer: (0, _utils.configValueDefined)('config.dev.styles.autoprefixer') ? config.dev.styles.autoprefixer : {},\n    preserve: false,\n    features: (0, _utils.configValueDefined)('config.dev.styles.features') ? config.dev.styles.features : {\n      'custom-media-queries': {\n        preserve: false\n      },\n      'custom-properties': {\n        // Preserve must always be false for the editor\n        preserve: false\n      },\n      'nesting-rules': true\n    }\n  }), (0, _postcssCalc[\"default\"])({\n    preserve: false\n  }), (0, _cssnano[\"default\"])()]; // Skip minifying files if we aren't building for\n  // production and debug is enabled\n\n  if (config.dev.debug.styles && !_constants.isProd) {\n    postcssPlugins.pop();\n  } // Report messages from other postcss plugins\n\n\n  postcssPlugins.push((0, _postcssReporter[\"default\"])({\n    clearReportedMessages: true\n  })); // Return a single stream containing all the\n  // after replacement functionality\n\n  return _mississippi.pipeline.obj([_constants.gulpPlugins.postcss([(0, _postcssImport[\"default\"])({\n    path: [_constants.paths.styles.srcDir],\n    plugins: [(0, _stylelint[\"default\"])()]\n  })]), _constants.gulpPlugins.postcss(postcssPlugins), _constants.gulpPlugins[\"if\"](config.dev.debug.styles, _constants.gulpPlugins.tabify(2, true)), _constants.gulpPlugins.rename({\n    suffix: '.min'\n  }), _browserSync.server.stream({\n    match: '**/*.css'\n  })]);\n}\n/**\n* CSS via PostCSS + CSSNext (includes Autoprefixer by default).\n* @param {function} done function to call when async processes finish\n* @return {Stream} single stream\n*/\n\n\nfunction editorStyles(done) {\n  return (0, _pump[\"default\"])([(0, _gulp.src)(_constants.paths.styles.editorSrc, {\n    sourcemaps: !_constants.isProd\n  }), editorStylesBeforeReplacementStream(), // Only do string replacements when building for production\n  _constants.gulpPlugins[\"if\"](_constants.isProd, (0, _utils.getStringReplacementTasks)()), editorStylesAfterReplacementStream(), (0, _gulp.dest)(_constants.paths.styles.editorDest, {\n    sourcemaps: !_constants.isProd\n  })], done);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "editorStyles.js"
      ],
      "names": [
        "editorStylesBeforeReplacementStream",
        "pipeline",
        "obj",
        "gulpPlugins",
        "newer",
        "dest",
        "paths",
        "styles",
        "extra",
        "config",
        "themeConfig",
        "phpcs",
        "bin",
        "rootPath",
        "standard",
        "warningSeverity",
        "reporter",
        "editorStylesAfterReplacementStream",
        "postcssPlugins",
        "importFrom",
        "dev",
        "srcDir",
        "stage",
        "autoprefixer",
        "preserve",
        "features",
        "debug",
        "isProd",
        "pop",
        "push",
        "clearReportedMessages",
        "postcss",
        "path",
        "plugins",
        "tabify",
        "rename",
        "suffix",
        "server",
        "stream",
        "match",
        "editorStyles",
        "done",
        "editorSrc",
        "sourcemaps",
        "editorDest"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAKA;;AACA;;AAOA;;;;AAXA;;;AAaO,SAASA,mCAAT,GAA+C;AACrD;AACA;AACA,SAAOC,sBAASC,GAAT,CAAc,CACpB,qBAAU,YAAV,CADoB,EAEpBC,uBAAYC,KAAZ,CAAmB;AAClBC,IAAAA,IAAI,EAAEC,iBAAMC,MAAN,CAAaF,IADD;AAElBG,IAAAA,KAAK,EAAE,CAAEF,iBAAMG,MAAN,CAAaC,WAAf;AAFW,GAAnB,CAFoB,EAMpBP,uBAAYQ,KAAZ,CAAmB;AAClBC,IAAAA,GAAG,YAAMC,mBAAN,sBADe;AAElBC,IAAAA,QAAQ,EAAE,WAFQ;AAGlBC,IAAAA,eAAe,EAAE;AAHC,GAAnB,CANoB,EAWpB;AACAZ,yBAAYQ,KAAZ,CAAkBK,QAAlB,CAA4B,KAA5B,CAZoB,CAAd,CAAP;AAcA;;AAEM,SAASC,kCAAT,GAA8C;AACpD,MAAMR,MAAM,GAAG,4BAAf;AAEA,MAAMS,cAAc,GAAG,CACtB,4BADsB,EAEtB,kCAAkB;AACjBC,IAAAA,UAAU,EACT,+BAAoB,8BAApB,IACC,sCAA2BV,MAAM,CAACW,GAAP,CAAWb,MAAX,CAAkBY,UAA7C,EAAyDb,iBAAMC,MAAN,CAAac,MAAtE,CADD,GAEC,EAJe;AAMjBC,IAAAA,KAAK,EACJ,+BAAoB,yBAApB,IACCb,MAAM,CAACW,GAAP,CAAWb,MAAX,CAAkBe,KADnB,GAEC,CATe;AAWjBC,IAAAA,YAAY,EACX,+BAAoB,gCAApB,IACCd,MAAM,CAACW,GAAP,CAAWb,MAAX,CAAkBgB,YADnB,GAEC,EAde;AAgBjBC,IAAAA,QAAQ,EAAE,KAhBO;AAiBjBC,IAAAA,QAAQ,EACP,+BAAoB,4BAApB,IACChB,MAAM,CAACW,GAAP,CAAWb,MAAX,CAAkBkB,QADnB,GAEC;AACC,8BAAwB;AACvBD,QAAAA,QAAQ,EAAE;AADa,OADzB;AAIC,2BAAqB;AACrB;AACCA,QAAAA,QAAQ,EAAE;AAFU,OAJtB;AAQC,uBAAiB;AARlB;AApBe,GAAlB,CAFsB,EAkCtB,6BAAM;AACLA,IAAAA,QAAQ,EAAE;AADL,GAAN,CAlCsB,EAqCtB,0BArCsB,CAAvB,CAHoD,CA2CpD;AACA;;AACA,MAAKf,MAAM,CAACW,GAAP,CAAWM,KAAX,CAAiBnB,MAAjB,IAA2B,CAAEoB,iBAAlC,EAA2C;AAC1CT,IAAAA,cAAc,CAACU,GAAf;AACA,GA/CmD,CAiDpD;;;AACAV,EAAAA,cAAc,CAACW,IAAf,CACC,iCAAU;AAAEC,IAAAA,qBAAqB,EAAE;AAAzB,GAAV,CADD,EAlDoD,CAsDpD;AACA;;AACA,SAAO7B,sBAASC,GAAT,CAAc,CACpBC,uBAAY4B,OAAZ,CAAqB,CACpB,+BAAU;AACTC,IAAAA,IAAI,EAAE,CAAE1B,iBAAMC,MAAN,CAAac,MAAf,CADG;AAETY,IAAAA,OAAO,EAAE,CACR,4BADQ;AAFA,GAAV,CADoB,CAArB,CADoB,EASpB9B,uBAAY4B,OAAZ,CAAqBb,cAArB,CAToB,EAUpBf,6BACCM,MAAM,CAACW,GAAP,CAAWM,KAAX,CAAiBnB,MADlB,EAECJ,uBAAY+B,MAAZ,CAAoB,CAApB,EAAuB,IAAvB,CAFD,CAVoB,EAcpB/B,uBAAYgC,MAAZ,CAAoB;AACnBC,IAAAA,MAAM,EAAE;AADW,GAApB,CAdoB,EAiBpBC,oBAAOC,MAAP,CAAe;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAf,CAjBoB,CAAd,CAAP;AAmBA;AAED;;;;;;;AAKe,SAASC,YAAT,CAAuBC,IAAvB,EAA8B;AAC5C,SAAO,sBAAM,CACZ,eAAKnC,iBAAMC,MAAN,CAAamC,SAAlB,EAA6B;AAAEC,IAAAA,UAAU,EAAE,CAAEhB;AAAhB,GAA7B,CADY,EAEZ3B,mCAAmC,EAFvB,EAGZ;AACAG,+BACCwB,iBADD,EAEC,uCAFD,CAJY,EAQZV,kCAAkC,EARtB,EASZ,gBAAMX,iBAAMC,MAAN,CAAaqC,UAAnB,EAA+B;AAAED,IAAAA,UAAU,EAAE,CAAEhB;AAAhB,GAA/B,CATY,CAAN,EAUJc,IAVI,CAAP;AAWA",
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport { src, dest } from 'gulp';\nimport postcssPresetEnv from 'postcss-preset-env';\nimport AtImport from 'postcss-import';\nimport pump from 'pump';\nimport cssnano from 'cssnano';\nimport stylelint from 'stylelint';\nimport reporter from 'postcss-reporter';\nimport calc from 'postcss-calc';\nimport { pipeline } from 'mississippi';\n\n/**\n * Internal dependencies\n */\nimport { rootPath, paths, gulpPlugins, isProd } from './constants';\nimport {\n\tgetThemeConfig,\n\tgetStringReplacementTasks,\n\tlogError,\n\tconfigValueDefined,\n\tappendBaseToFilePathArray,\n} from './utils';\nimport { server } from './browserSync';\n\nexport function editorStylesBeforeReplacementStream() {\n\t// Return a single stream containing all the\n\t// before replacement functionality\n\treturn pipeline.obj( [\n\t\tlogError( 'Editor CSS' ),\n\t\tgulpPlugins.newer( {\n\t\t\tdest: paths.styles.dest,\n\t\t\textra: [ paths.config.themeConfig ],\n\t\t} ),\n\t\tgulpPlugins.phpcs( {\n\t\t\tbin: `${ rootPath }/vendor/bin/phpcs`,\n\t\t\tstandard: 'WordPress',\n\t\t\twarningSeverity: 0,\n\t\t} ),\n\t\t// Log all problems that were found.\n\t\tgulpPlugins.phpcs.reporter( 'log' ),\n\t] );\n}\n\nexport function editorStylesAfterReplacementStream() {\n\tconst config = getThemeConfig();\n\n\tconst postcssPlugins = [\n\t\tstylelint(),\n\t\tpostcssPresetEnv( {\n\t\t\timportFrom: (\n\t\t\t\tconfigValueDefined( 'config.dev.styles.importFrom' ) ?\n\t\t\t\t\tappendBaseToFilePathArray( config.dev.styles.importFrom, paths.styles.srcDir ) :\n\t\t\t\t\t[]\n\t\t\t),\n\t\t\tstage: (\n\t\t\t\tconfigValueDefined( 'config.dev.styles.stage' ) ?\n\t\t\t\t\tconfig.dev.styles.stage :\n\t\t\t\t\t3\n\t\t\t),\n\t\t\tautoprefixer: (\n\t\t\t\tconfigValueDefined( 'config.dev.styles.autoprefixer' ) ?\n\t\t\t\t\tconfig.dev.styles.autoprefixer :\n\t\t\t\t\t{}\n\t\t\t),\n\t\t\tpreserve: false,\n\t\t\tfeatures: (\n\t\t\t\tconfigValueDefined( 'config.dev.styles.features' ) ?\n\t\t\t\t\tconfig.dev.styles.features :\n\t\t\t\t\t{\n\t\t\t\t\t\t'custom-media-queries': {\n\t\t\t\t\t\t\tpreserve: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'custom-properties': {\n\t\t\t\t\t\t// Preserve must always be false for the editor\n\t\t\t\t\t\t\tpreserve: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'nesting-rules': true,\n\t\t\t\t\t}\n\t\t\t),\n\t\t} ),\n\t\tcalc( {\n\t\t\tpreserve: false,\n\t\t} ),\n\t\tcssnano(),\n\t];\n\n\t// Skip minifying files if we aren't building for\n\t// production and debug is enabled\n\tif ( config.dev.debug.styles && ! isProd ) {\n\t\tpostcssPlugins.pop();\n\t}\n\n\t// Report messages from other postcss plugins\n\tpostcssPlugins.push(\n\t\treporter( { clearReportedMessages: true } )\n\t);\n\n\t// Return a single stream containing all the\n\t// after replacement functionality\n\treturn pipeline.obj( [\n\t\tgulpPlugins.postcss( [\n\t\t\tAtImport( {\n\t\t\t\tpath: [ paths.styles.srcDir ],\n\t\t\t\tplugins: [\n\t\t\t\t\tstylelint(),\n\t\t\t\t],\n\t\t\t} ),\n\t\t] ),\n\t\tgulpPlugins.postcss( postcssPlugins ),\n\t\tgulpPlugins.if(\n\t\t\tconfig.dev.debug.styles,\n\t\t\tgulpPlugins.tabify( 2, true )\n\t\t),\n\t\tgulpPlugins.rename( {\n\t\t\tsuffix: '.min',\n\t\t} ),\n\t\tserver.stream( { match: '**/*.css' } ),\n\t] );\n}\n\n/**\n* CSS via PostCSS + CSSNext (includes Autoprefixer by default).\n* @param {function} done function to call when async processes finish\n* @return {Stream} single stream\n*/\nexport default function editorStyles( done ) {\n\treturn pump( [\n\t\tsrc( paths.styles.editorSrc, { sourcemaps: ! isProd } ),\n\t\teditorStylesBeforeReplacementStream(),\n\t\t// Only do string replacements when building for production\n\t\tgulpPlugins.if(\n\t\t\tisProd,\n\t\t\tgetStringReplacementTasks()\n\t\t),\n\t\teditorStylesAfterReplacementStream(),\n\t\tdest( paths.styles.editorDest, { sourcemaps: ! isProd } ),\n\t], done );\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566485032000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"filename\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/translate.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/translate.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/translate.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/translate.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
        "sourceFileName": "translate.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = translate;\n\nvar _gulp = require(\"gulp\");\n\nvar _pump = _interopRequireDefault(require(\"pump\"));\n\nvar _constants = require(\"./constants\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\n\n/**\n * Generate translation files.\n * @param {function} done function to call when async processes finish\n * @return {Stream} single stream\n */\nfunction translate(done) {\n  var config = (0, _utils.getThemeConfig)(); // Don't generate .pot file on production if the config flag is false\n\n  if (_constants.isProd && !config[\"export\"].generatePotFile) {\n    return done();\n  }\n\n  (0, _pump[\"default\"])([(0, _gulp.src)(_constants.paths.languages.src), _constants.gulpPlugins.sort(), _constants.gulpPlugins.wpPot({\n    domain: _constants.isProd ? config.theme.slug : _constants.nameFieldDefaults.slug,\n    \"package\": _constants.isProd ? config.theme.name : _constants.nameFieldDefaults.name,\n    bugReport: _constants.isProd ? config.theme.name : _constants.nameFieldDefaults.name,\n    lastTranslator: _constants.isProd ? config.theme.author : _constants.nameFieldDefaults.author\n  }), (0, _gulp.dest)(_constants.paths.languages.dest)], done);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zbGF0ZS5qcyJdLCJuYW1lcyI6WyJ0cmFuc2xhdGUiLCJkb25lIiwiY29uZmlnIiwiaXNQcm9kIiwiZ2VuZXJhdGVQb3RGaWxlIiwicGF0aHMiLCJsYW5ndWFnZXMiLCJzcmMiLCJndWxwUGx1Z2lucyIsInNvcnQiLCJ3cFBvdCIsImRvbWFpbiIsInRoZW1lIiwic2x1ZyIsIm5hbWVGaWVsZERlZmF1bHRzIiwibmFtZSIsImJ1Z1JlcG9ydCIsImxhc3RUcmFuc2xhdG9yIiwiYXV0aG9yIiwiZGVzdCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUVBOzs7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFLQTs7QUFDQTs7OztBQUpBOzs7O0FBTUE7Ozs7O0FBS2UsU0FBU0EsU0FBVCxDQUFvQkMsSUFBcEIsRUFBMkI7QUFDekMsTUFBTUMsTUFBTSxHQUFHLDRCQUFmLENBRHlDLENBR3pDOztBQUNBLE1BQUtDLHFCQUFVLENBQUVELE1BQU0sVUFBTixDQUFjRSxlQUEvQixFQUFpRDtBQUNoRCxXQUFPSCxJQUFJLEVBQVg7QUFDQTs7QUFFRCx3QkFBTSxDQUNMLGVBQUtJLGlCQUFNQyxTQUFOLENBQWdCQyxHQUFyQixDQURLLEVBRUxDLHVCQUFZQyxJQUFaLEVBRkssRUFHTEQsdUJBQVlFLEtBQVosQ0FBbUI7QUFDbEJDLElBQUFBLE1BQU0sRUFBSVIsaUJBQUYsR0FBYUQsTUFBTSxDQUFDVSxLQUFQLENBQWFDLElBQTFCLEdBQWlDQyw2QkFBa0JELElBRHpDO0FBRWxCLGVBQVdWLGlCQUFGLEdBQWFELE1BQU0sQ0FBQ1UsS0FBUCxDQUFhRyxJQUExQixHQUFpQ0QsNkJBQWtCQyxJQUYxQztBQUdsQkMsSUFBQUEsU0FBUyxFQUFJYixpQkFBRixHQUFhRCxNQUFNLENBQUNVLEtBQVAsQ0FBYUcsSUFBMUIsR0FBaUNELDZCQUFrQkMsSUFINUM7QUFJbEJFLElBQUFBLGNBQWMsRUFBSWQsaUJBQUYsR0FBYUQsTUFBTSxDQUFDVSxLQUFQLENBQWFNLE1BQTFCLEdBQW1DSiw2QkFBa0JJO0FBSm5ELEdBQW5CLENBSEssRUFTTCxnQkFBTWIsaUJBQU1DLFNBQU4sQ0FBZ0JhLElBQXRCLENBVEssQ0FBTixFQVVHbEIsSUFWSDtBQVdBIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9hdXN0aW50dWRlL0RvY3VtZW50cy9Sb2FkIGFuZCBUcmFjayBTcGVjaWFsaXN0cy93cC1jb250ZW50L3RoZW1lcy93cHJpZy1yb2FkYW5kdHJhY2tzcGVjaWFsaXN0cy9ndWxwIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWVudiBlczYgKi9cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgc3JjLCBkZXN0IH0gZnJvbSAnZ3VscCc7XG5pbXBvcnQgcHVtcCBmcm9tICdwdW1wJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgcGF0aHMsIGd1bHBQbHVnaW5zLCBuYW1lRmllbGREZWZhdWx0cywgaXNQcm9kIH0gZnJvbSAnLi9jb25zdGFudHMnO1xuaW1wb3J0IHsgZ2V0VGhlbWVDb25maWcgfSBmcm9tICcuL3V0aWxzJztcblxuLyoqXG4gKiBHZW5lcmF0ZSB0cmFuc2xhdGlvbiBmaWxlcy5cbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGRvbmUgZnVuY3Rpb24gdG8gY2FsbCB3aGVuIGFzeW5jIHByb2Nlc3NlcyBmaW5pc2hcbiAqIEByZXR1cm4ge1N0cmVhbX0gc2luZ2xlIHN0cmVhbVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0cmFuc2xhdGUoIGRvbmUgKSB7XG5cdGNvbnN0IGNvbmZpZyA9IGdldFRoZW1lQ29uZmlnKCk7XG5cblx0Ly8gRG9uJ3QgZ2VuZXJhdGUgLnBvdCBmaWxlIG9uIHByb2R1Y3Rpb24gaWYgdGhlIGNvbmZpZyBmbGFnIGlzIGZhbHNlXG5cdGlmICggaXNQcm9kICYmICEgY29uZmlnLmV4cG9ydC5nZW5lcmF0ZVBvdEZpbGUgKSB7XG5cdFx0cmV0dXJuIGRvbmUoKTtcblx0fVxuXG5cdHB1bXAoIFtcblx0XHRzcmMoIHBhdGhzLmxhbmd1YWdlcy5zcmMgKSxcblx0XHRndWxwUGx1Z2lucy5zb3J0KCksXG5cdFx0Z3VscFBsdWdpbnMud3BQb3QoIHtcblx0XHRcdGRvbWFpbjogKCBpc1Byb2QgKSA/IGNvbmZpZy50aGVtZS5zbHVnIDogbmFtZUZpZWxkRGVmYXVsdHMuc2x1Zyxcblx0XHRcdHBhY2thZ2U6ICggaXNQcm9kICkgPyBjb25maWcudGhlbWUubmFtZSA6IG5hbWVGaWVsZERlZmF1bHRzLm5hbWUsXG5cdFx0XHRidWdSZXBvcnQ6ICggaXNQcm9kICkgPyBjb25maWcudGhlbWUubmFtZSA6IG5hbWVGaWVsZERlZmF1bHRzLm5hbWUsXG5cdFx0XHRsYXN0VHJhbnNsYXRvcjogKCBpc1Byb2QgKSA/IGNvbmZpZy50aGVtZS5hdXRob3IgOiBuYW1lRmllbGREZWZhdWx0cy5hdXRob3IsXG5cdFx0fSApLFxuXHRcdGRlc3QoIHBhdGhzLmxhbmd1YWdlcy5kZXN0ICksXG5cdF0sIGRvbmUgKTtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "translate.js"
      ],
      "names": [
        "translate",
        "done",
        "config",
        "isProd",
        "generatePotFile",
        "paths",
        "languages",
        "src",
        "gulpPlugins",
        "sort",
        "wpPot",
        "domain",
        "theme",
        "slug",
        "nameFieldDefaults",
        "name",
        "bugReport",
        "lastTranslator",
        "author",
        "dest"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;AAGA;;AACA;;AAKA;;AACA;;;;AAJA;;;;AAMA;;;;;AAKe,SAASA,SAAT,CAAoBC,IAApB,EAA2B;AACzC,MAAMC,MAAM,GAAG,4BAAf,CADyC,CAGzC;;AACA,MAAKC,qBAAU,CAAED,MAAM,UAAN,CAAcE,eAA/B,EAAiD;AAChD,WAAOH,IAAI,EAAX;AACA;;AAED,wBAAM,CACL,eAAKI,iBAAMC,SAAN,CAAgBC,GAArB,CADK,EAELC,uBAAYC,IAAZ,EAFK,EAGLD,uBAAYE,KAAZ,CAAmB;AAClBC,IAAAA,MAAM,EAAIR,iBAAF,GAAaD,MAAM,CAACU,KAAP,CAAaC,IAA1B,GAAiCC,6BAAkBD,IADzC;AAElB,eAAWV,iBAAF,GAAaD,MAAM,CAACU,KAAP,CAAaG,IAA1B,GAAiCD,6BAAkBC,IAF1C;AAGlBC,IAAAA,SAAS,EAAIb,iBAAF,GAAaD,MAAM,CAACU,KAAP,CAAaG,IAA1B,GAAiCD,6BAAkBC,IAH5C;AAIlBE,IAAAA,cAAc,EAAId,iBAAF,GAAaD,MAAM,CAACU,KAAP,CAAaM,MAA1B,GAAmCJ,6BAAkBI;AAJnD,GAAnB,CAHK,EASL,gBAAMb,iBAAMC,SAAN,CAAgBa,IAAtB,CATK,CAAN,EAUGlB,IAVH;AAWA",
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport { src, dest } from 'gulp';\nimport pump from 'pump';\n\n/**\n * Internal dependencies\n */\nimport { paths, gulpPlugins, nameFieldDefaults, isProd } from './constants';\nimport { getThemeConfig } from './utils';\n\n/**\n * Generate translation files.\n * @param {function} done function to call when async processes finish\n * @return {Stream} single stream\n */\nexport default function translate( done ) {\n\tconst config = getThemeConfig();\n\n\t// Don't generate .pot file on production if the config flag is false\n\tif ( isProd && ! config.export.generatePotFile ) {\n\t\treturn done();\n\t}\n\n\tpump( [\n\t\tsrc( paths.languages.src ),\n\t\tgulpPlugins.sort(),\n\t\tgulpPlugins.wpPot( {\n\t\t\tdomain: ( isProd ) ? config.theme.slug : nameFieldDefaults.slug,\n\t\t\tpackage: ( isProd ) ? config.theme.name : nameFieldDefaults.name,\n\t\t\tbugReport: ( isProd ) ? config.theme.name : nameFieldDefaults.name,\n\t\t\tlastTranslator: ( isProd ) ? config.theme.author : nameFieldDefaults.author,\n\t\t} ),\n\t\tdest( paths.languages.dest ),\n\t], done );\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566485032000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"filename\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/watch.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/watch.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/watch.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/watch.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
        "sourceFileName": "watch.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = watch;\n\nvar _gulp = require(\"gulp\");\n\nvar _pump = _interopRequireDefault(require(\"pump\"));\n\nvar _constants = require(\"./constants\");\n\nvar _utils = require(\"./utils\");\n\nvar _browserSync = require(\"./browserSync\");\n\nvar _images = _interopRequireDefault(require(\"./images\"));\n\nvar _scripts = _interopRequireDefault(require(\"./scripts\"));\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _editorStyles = _interopRequireDefault(require(\"./editorStyles\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\n\n/**\n * Watch everything\n */\nfunction watch() {\n  /**\n   * gulp watch uses chokidar, which doesn't play well with backslashes\n   * in file paths, so they are replaced with forward slashes, which are\n   * valid for Windows paths in a NodeJS context.\n   */\n  var PHPwatcher = (0, _gulp.watch)((0, _utils.backslashToForwardSlash)(_constants.paths.php.src), _browserSync.reload);\n  var config = (0, _utils.getThemeConfig)(); // Only code sniff PHP files if the debug setting is true\n\n  if (config.dev.debug.phpcs) {\n    PHPwatcher.on('change', function (path) {\n      return (0, _pump[\"default\"])([(0, _gulp.src)(path), // Run code sniffing\n      _constants.gulpPlugins.phpcs(_constants.PHPCSOptions), // Log all problems that were found.\n      _constants.gulpPlugins.phpcs.reporter('log')]);\n    });\n  }\n\n  (0, _gulp.watch)((0, _utils.backslashToForwardSlash)(_constants.paths.styles.src[0]), (0, _gulp.series)(_styles[\"default\"], _editorStyles[\"default\"]));\n  (0, _gulp.watch)((0, _utils.backslashToForwardSlash)(_constants.paths.scripts.src[0]), (0, _gulp.series)(_scripts[\"default\"], _browserSync.reload));\n  (0, _gulp.watch)((0, _utils.backslashToForwardSlash)(_constants.paths.images.src), (0, _gulp.series)(_images[\"default\"], _browserSync.reload));\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhdGNoLmpzIl0sIm5hbWVzIjpbIndhdGNoIiwiUEhQd2F0Y2hlciIsInBhdGhzIiwicGhwIiwic3JjIiwicmVsb2FkIiwiY29uZmlnIiwiZGV2IiwiZGVidWciLCJwaHBjcyIsIm9uIiwicGF0aCIsImd1bHBQbHVnaW5zIiwiUEhQQ1NPcHRpb25zIiwicmVwb3J0ZXIiLCJzdHlsZXMiLCJlZGl0b3JTdHlsZXMiLCJzY3JpcHRzIiwiaW1hZ2VzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBRUE7Ozs7Ozs7OztBQUdBOztBQUNBOztBQUtBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBVEE7Ozs7QUFXQTs7O0FBR2UsU0FBU0EsS0FBVCxHQUFpQjtBQUMvQjs7Ozs7QUFLQSxNQUFNQyxVQUFVLEdBQUcsaUJBQVcsb0NBQXlCQyxpQkFBTUMsR0FBTixDQUFVQyxHQUFuQyxDQUFYLEVBQXFEQyxtQkFBckQsQ0FBbkI7QUFDQSxNQUFNQyxNQUFNLEdBQUcsNEJBQWYsQ0FQK0IsQ0FTL0I7O0FBQ0EsTUFBS0EsTUFBTSxDQUFDQyxHQUFQLENBQVdDLEtBQVgsQ0FBaUJDLEtBQXRCLEVBQThCO0FBQzdCUixJQUFBQSxVQUFVLENBQUNTLEVBQVgsQ0FBZSxRQUFmLEVBQXlCLFVBQVVDLElBQVYsRUFBaUI7QUFDekMsYUFBTyxzQkFBTSxDQUNaLGVBQUtBLElBQUwsQ0FEWSxFQUVaO0FBQ0FDLDZCQUFZSCxLQUFaLENBQW1CSSx1QkFBbkIsQ0FIWSxFQUlaO0FBQ0FELDZCQUFZSCxLQUFaLENBQWtCSyxRQUFsQixDQUE0QixLQUE1QixDQUxZLENBQU4sQ0FBUDtBQU9BLEtBUkQ7QUFTQTs7QUFFRCxtQkFBVyxvQ0FBeUJaLGlCQUFNYSxNQUFOLENBQWFYLEdBQWIsQ0FBa0IsQ0FBbEIsQ0FBekIsQ0FBWCxFQUE2RCxrQkFBUVcsa0JBQVIsRUFBZ0JDLHdCQUFoQixDQUE3RDtBQUVBLG1CQUFXLG9DQUF5QmQsaUJBQU1lLE9BQU4sQ0FBY2IsR0FBZCxDQUFtQixDQUFuQixDQUF6QixDQUFYLEVBQThELGtCQUFRYSxtQkFBUixFQUFpQlosbUJBQWpCLENBQTlEO0FBRUEsbUJBQVcsb0NBQXlCSCxpQkFBTWdCLE1BQU4sQ0FBYWQsR0FBdEMsQ0FBWCxFQUF3RCxrQkFBUWMsa0JBQVIsRUFBZ0JiLG1CQUFoQixDQUF4RDtBQUNBIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9hdXN0aW50dWRlL0RvY3VtZW50cy9Sb2FkIGFuZCBUcmFjayBTcGVjaWFsaXN0cy93cC1jb250ZW50L3RoZW1lcy93cHJpZy1yb2FkYW5kdHJhY2tzcGVjaWFsaXN0cy9ndWxwIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWVudiBlczYgKi9cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgd2F0Y2ggYXMgZ3VscFdhdGNoLCBzZXJpZXMsIHNyYyB9IGZyb20gJ2d1bHAnO1xuaW1wb3J0IHB1bXAgZnJvbSAncHVtcCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IHBhdGhzLCBndWxwUGx1Z2lucywgUEhQQ1NPcHRpb25zIH0gZnJvbSAnLi9jb25zdGFudHMnO1xuaW1wb3J0IHsgZ2V0VGhlbWVDb25maWcsIGJhY2tzbGFzaFRvRm9yd2FyZFNsYXNoIH0gZnJvbSAnLi91dGlscyc7XG5pbXBvcnQgeyByZWxvYWQgfSBmcm9tICcuL2Jyb3dzZXJTeW5jJztcbmltcG9ydCBpbWFnZXMgZnJvbSAnLi9pbWFnZXMnO1xuaW1wb3J0IHNjcmlwdHMgZnJvbSAnLi9zY3JpcHRzJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMnO1xuaW1wb3J0IGVkaXRvclN0eWxlcyBmcm9tICcuL2VkaXRvclN0eWxlcyc7XG5cbi8qKlxuICogV2F0Y2ggZXZlcnl0aGluZ1xuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB3YXRjaCgpIHtcblx0LyoqXG5cdCAqIGd1bHAgd2F0Y2ggdXNlcyBjaG9raWRhciwgd2hpY2ggZG9lc24ndCBwbGF5IHdlbGwgd2l0aCBiYWNrc2xhc2hlc1xuXHQgKiBpbiBmaWxlIHBhdGhzLCBzbyB0aGV5IGFyZSByZXBsYWNlZCB3aXRoIGZvcndhcmQgc2xhc2hlcywgd2hpY2ggYXJlXG5cdCAqIHZhbGlkIGZvciBXaW5kb3dzIHBhdGhzIGluIGEgTm9kZUpTIGNvbnRleHQuXG5cdCAqL1xuXHRjb25zdCBQSFB3YXRjaGVyID0gZ3VscFdhdGNoKCBiYWNrc2xhc2hUb0ZvcndhcmRTbGFzaCggcGF0aHMucGhwLnNyYyApLCByZWxvYWQgKTtcblx0Y29uc3QgY29uZmlnID0gZ2V0VGhlbWVDb25maWcoKTtcblxuXHQvLyBPbmx5IGNvZGUgc25pZmYgUEhQIGZpbGVzIGlmIHRoZSBkZWJ1ZyBzZXR0aW5nIGlzIHRydWVcblx0aWYgKCBjb25maWcuZGV2LmRlYnVnLnBocGNzICkge1xuXHRcdFBIUHdhdGNoZXIub24oICdjaGFuZ2UnLCBmdW5jdGlvbiggcGF0aCApIHtcblx0XHRcdHJldHVybiBwdW1wKCBbXG5cdFx0XHRcdHNyYyggcGF0aCApLFxuXHRcdFx0XHQvLyBSdW4gY29kZSBzbmlmZmluZ1xuXHRcdFx0XHRndWxwUGx1Z2lucy5waHBjcyggUEhQQ1NPcHRpb25zICksXG5cdFx0XHRcdC8vIExvZyBhbGwgcHJvYmxlbXMgdGhhdCB3ZXJlIGZvdW5kLlxuXHRcdFx0XHRndWxwUGx1Z2lucy5waHBjcy5yZXBvcnRlciggJ2xvZycgKSxcblx0XHRcdF0gKTtcblx0XHR9ICk7XG5cdH1cblxuXHRndWxwV2F0Y2goIGJhY2tzbGFzaFRvRm9yd2FyZFNsYXNoKCBwYXRocy5zdHlsZXMuc3JjWyAwIF0gKSwgc2VyaWVzKCBzdHlsZXMsIGVkaXRvclN0eWxlcyApICk7XG5cblx0Z3VscFdhdGNoKCBiYWNrc2xhc2hUb0ZvcndhcmRTbGFzaCggcGF0aHMuc2NyaXB0cy5zcmNbIDAgXSApLCBzZXJpZXMoIHNjcmlwdHMsIHJlbG9hZCApICk7XG5cblx0Z3VscFdhdGNoKCBiYWNrc2xhc2hUb0ZvcndhcmRTbGFzaCggcGF0aHMuaW1hZ2VzLnNyYyApLCBzZXJpZXMoIGltYWdlcywgcmVsb2FkICkgKTtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "watch.js"
      ],
      "names": [
        "watch",
        "PHPwatcher",
        "paths",
        "php",
        "src",
        "reload",
        "config",
        "dev",
        "debug",
        "phpcs",
        "on",
        "path",
        "gulpPlugins",
        "PHPCSOptions",
        "reporter",
        "styles",
        "editorStyles",
        "scripts",
        "images"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;AAGA;;AACA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AATA;;;;AAWA;;;AAGe,SAASA,KAAT,GAAiB;AAC/B;;;;;AAKA,MAAMC,UAAU,GAAG,iBAAW,oCAAyBC,iBAAMC,GAAN,CAAUC,GAAnC,CAAX,EAAqDC,mBAArD,CAAnB;AACA,MAAMC,MAAM,GAAG,4BAAf,CAP+B,CAS/B;;AACA,MAAKA,MAAM,CAACC,GAAP,CAAWC,KAAX,CAAiBC,KAAtB,EAA8B;AAC7BR,IAAAA,UAAU,CAACS,EAAX,CAAe,QAAf,EAAyB,UAAUC,IAAV,EAAiB;AACzC,aAAO,sBAAM,CACZ,eAAKA,IAAL,CADY,EAEZ;AACAC,6BAAYH,KAAZ,CAAmBI,uBAAnB,CAHY,EAIZ;AACAD,6BAAYH,KAAZ,CAAkBK,QAAlB,CAA4B,KAA5B,CALY,CAAN,CAAP;AAOA,KARD;AASA;;AAED,mBAAW,oCAAyBZ,iBAAMa,MAAN,CAAaX,GAAb,CAAkB,CAAlB,CAAzB,CAAX,EAA6D,kBAAQW,kBAAR,EAAgBC,wBAAhB,CAA7D;AAEA,mBAAW,oCAAyBd,iBAAMe,OAAN,CAAcb,GAAd,CAAmB,CAAnB,CAAzB,CAAX,EAA8D,kBAAQa,mBAAR,EAAiBZ,mBAAjB,CAA9D;AAEA,mBAAW,oCAAyBH,iBAAMgB,MAAN,CAAad,GAAtC,CAAX,EAAwD,kBAAQc,kBAAR,EAAgBb,mBAAhB,CAAxD;AACA",
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport { watch as gulpWatch, series, src } from 'gulp';\nimport pump from 'pump';\n\n/**\n * Internal dependencies\n */\nimport { paths, gulpPlugins, PHPCSOptions } from './constants';\nimport { getThemeConfig, backslashToForwardSlash } from './utils';\nimport { reload } from './browserSync';\nimport images from './images';\nimport scripts from './scripts';\nimport styles from './styles';\nimport editorStyles from './editorStyles';\n\n/**\n * Watch everything\n */\nexport default function watch() {\n\t/**\n\t * gulp watch uses chokidar, which doesn't play well with backslashes\n\t * in file paths, so they are replaced with forward slashes, which are\n\t * valid for Windows paths in a NodeJS context.\n\t */\n\tconst PHPwatcher = gulpWatch( backslashToForwardSlash( paths.php.src ), reload );\n\tconst config = getThemeConfig();\n\n\t// Only code sniff PHP files if the debug setting is true\n\tif ( config.dev.debug.phpcs ) {\n\t\tPHPwatcher.on( 'change', function( path ) {\n\t\t\treturn pump( [\n\t\t\t\tsrc( path ),\n\t\t\t\t// Run code sniffing\n\t\t\t\tgulpPlugins.phpcs( PHPCSOptions ),\n\t\t\t\t// Log all problems that were found.\n\t\t\t\tgulpPlugins.phpcs.reporter( 'log' ),\n\t\t\t] );\n\t\t} );\n\t}\n\n\tgulpWatch( backslashToForwardSlash( paths.styles.src[ 0 ] ), series( styles, editorStyles ) );\n\n\tgulpWatch( backslashToForwardSlash( paths.scripts.src[ 0 ] ), series( scripts, reload ) );\n\n\tgulpWatch( backslashToForwardSlash( paths.images.src ), series( images, reload ) );\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566485032000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"filename\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/prodPrep.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/prodPrep.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/prodPrep.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/prodPrep.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
        "sourceFileName": "prodPrep.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = prodPrep;\n\nvar _gulp = require(\"gulp\");\n\nvar _pump = _interopRequireDefault(require(\"pump\"));\n\nvar _fancyLog = _interopRequireDefault(require(\"fancy-log\"));\n\nvar _ansiColors = _interopRequireDefault(require(\"ansi-colors\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _constants = require(\"./constants\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\n\n/**\n * Create the production directory\n * @param {function} done function to call when async processes finish\n * @return {Stream} single stream\n */\nfunction prodPrep(done) {\n  var config = (0, _utils.getThemeConfig)(true); // Error if not in a production environment\n\n  if (!_constants.isProd) {\n    (0, _fancyLog[\"default\"])(_ansiColors[\"default\"].red(\"\".concat(_ansiColors[\"default\"].bold('Error:'), \" the bundle task may only be called from the production environment. Set NODE_ENV to production and try again.\")));\n    process.exit(1);\n  } // The dev theme and the prod theme can't have the same name\n\n\n  if (_path[\"default\"].basename(_constants.prodThemePath) === _path[\"default\"].basename(_constants.rootPath)) {\n    (0, _fancyLog[\"default\"])(_ansiColors[\"default\"].red(\"\".concat(_ansiColors[\"default\"].bold('Error:'), \" the theme slug cannot be the same as the dev theme directory name.\")));\n    process.exit(1);\n  }\n\n  var requiredConfigUpdates = ['slug', 'name']; // Error if config that must be set is still the default value.\n\n  for (var _i = 0, _requiredConfigUpdate = requiredConfigUpdates; _i < _requiredConfigUpdate.length; _i++) {\n    var requiredConfigField = _requiredConfigUpdate[_i];\n\n    if (_constants.nameFieldDefaults[requiredConfigField] === config.theme[requiredConfigField]) {\n      (0, _fancyLog[\"default\"])(_ansiColors[\"default\"].red(\"\".concat(_ansiColors[\"default\"].bold('Error:'), \" the theme \").concat(requiredConfigField, \" must be different than the default value \").concat(_constants.nameFieldDefaults[requiredConfigField], \".\")));\n      process.exit(1);\n    }\n  } // Create the prod directory\n\n\n  (0, _utils.createProdDir)(); // Copying misc files to the prod directory\n\n  return (0, _pump[\"default\"])([(0, _gulp.src)(_constants.paths[\"export\"].src, {\n    allowEmpty: true\n  }), (0, _gulp.dest)(_utils.gulpRelativeDest)], done);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2RQcmVwLmpzIl0sIm5hbWVzIjpbInByb2RQcmVwIiwiZG9uZSIsImNvbmZpZyIsImlzUHJvZCIsImNvbG9ycyIsInJlZCIsImJvbGQiLCJwcm9jZXNzIiwiZXhpdCIsInBhdGgiLCJiYXNlbmFtZSIsInByb2RUaGVtZVBhdGgiLCJyb290UGF0aCIsInJlcXVpcmVkQ29uZmlnVXBkYXRlcyIsInJlcXVpcmVkQ29uZmlnRmllbGQiLCJuYW1lRmllbGREZWZhdWx0cyIsInRoZW1lIiwicGF0aHMiLCJzcmMiLCJhbGxvd0VtcHR5IiwiZ3VscFJlbGF0aXZlRGVzdCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUVBOzs7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFLQTs7QUFPQTs7OztBQVZBOzs7O0FBZ0JBOzs7OztBQUtlLFNBQVNBLFFBQVQsQ0FBbUJDLElBQW5CLEVBQTBCO0FBQ3hDLE1BQU1DLE1BQU0sR0FBRywyQkFBZ0IsSUFBaEIsQ0FBZixDQUR3QyxDQUd4Qzs7QUFDQSxNQUFLLENBQUVDLGlCQUFQLEVBQWdCO0FBQ2YsOEJBQUtDLHVCQUFPQyxHQUFQLFdBQWdCRCx1QkFBT0UsSUFBUCxDQUFhLFFBQWIsQ0FBaEIsb0hBQUw7QUFDQUMsSUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWMsQ0FBZDtBQUNBLEdBUHVDLENBU3hDOzs7QUFDQSxNQUFLQyxpQkFBS0MsUUFBTCxDQUFlQyx3QkFBZixNQUFtQ0YsaUJBQUtDLFFBQUwsQ0FBZUUsbUJBQWYsQ0FBeEMsRUFBb0U7QUFDbkUsOEJBQUtSLHVCQUFPQyxHQUFQLFdBQWdCRCx1QkFBT0UsSUFBUCxDQUFhLFFBQWIsQ0FBaEIseUVBQUw7QUFDQUMsSUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWMsQ0FBZDtBQUNBOztBQUVELE1BQU1LLHFCQUFxQixHQUFHLENBQzdCLE1BRDZCLEVBRTdCLE1BRjZCLENBQTlCLENBZndDLENBb0J4Qzs7QUFDQSwyQ0FBbUNBLHFCQUFuQywyQ0FBMkQ7QUFBckQsUUFBTUMsbUJBQW1CLDRCQUF6Qjs7QUFDTCxRQUFLQyw2QkFBbUJELG1CQUFuQixNQUE2Q1osTUFBTSxDQUFDYyxLQUFQLENBQWNGLG1CQUFkLENBQWxELEVBQXdGO0FBQ3ZGLGdDQUFLVix1QkFBT0MsR0FBUCxXQUFnQkQsdUJBQU9FLElBQVAsQ0FBYSxRQUFiLENBQWhCLHdCQUF1RFEsbUJBQXZELHVEQUF5SEMsNkJBQW1CRCxtQkFBbkIsQ0FBekgsT0FBTDtBQUNBUCxNQUFBQSxPQUFPLENBQUNDLElBQVIsQ0FBYyxDQUFkO0FBQ0E7QUFDRCxHQTFCdUMsQ0E0QnhDOzs7QUFDQSw4QkE3QndDLENBK0J4Qzs7QUFDQSxTQUFPLHNCQUNOLENBQ0MsZUFBS1MsMkJBQWFDLEdBQWxCLEVBQXVCO0FBQUVDLElBQUFBLFVBQVUsRUFBRTtBQUFkLEdBQXZCLENBREQsRUFFQyxnQkFBTUMsdUJBQU4sQ0FGRCxDQURNLEVBS05uQixJQUxNLENBQVA7QUFPQSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYXVzdGludHVkZS9Eb2N1bWVudHMvUm9hZCBhbmQgVHJhY2sgU3BlY2lhbGlzdHMvd3AtY29udGVudC90aGVtZXMvd3ByaWctcm9hZGFuZHRyYWNrc3BlY2lhbGlzdHMvZ3VscCIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1lbnYgZXM2ICovXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IHNyYywgZGVzdCB9IGZyb20gJ2d1bHAnO1xuaW1wb3J0IHB1bXAgZnJvbSAncHVtcCc7XG5pbXBvcnQgbG9nIGZyb20gJ2ZhbmN5LWxvZyc7XG5pbXBvcnQgY29sb3JzIGZyb20gJ2Fuc2ktY29sb3JzJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuXG4vKipcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQge1xuXHRpc1Byb2QsXG5cdHByb2RUaGVtZVBhdGgsXG5cdHJvb3RQYXRoLFxuXHRwYXRocyxcblx0bmFtZUZpZWxkRGVmYXVsdHMsXG59IGZyb20gJy4vY29uc3RhbnRzJztcbmltcG9ydCB7XG5cdGNyZWF0ZVByb2REaXIsXG5cdGd1bHBSZWxhdGl2ZURlc3QsXG5cdGdldFRoZW1lQ29uZmlnLFxufSBmcm9tICcuL3V0aWxzJztcblxuLyoqXG4gKiBDcmVhdGUgdGhlIHByb2R1Y3Rpb24gZGlyZWN0b3J5XG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBkb25lIGZ1bmN0aW9uIHRvIGNhbGwgd2hlbiBhc3luYyBwcm9jZXNzZXMgZmluaXNoXG4gKiBAcmV0dXJuIHtTdHJlYW19IHNpbmdsZSBzdHJlYW1cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcHJvZFByZXAoIGRvbmUgKSB7XG5cdGNvbnN0IGNvbmZpZyA9IGdldFRoZW1lQ29uZmlnKCB0cnVlICk7XG5cblx0Ly8gRXJyb3IgaWYgbm90IGluIGEgcHJvZHVjdGlvbiBlbnZpcm9ubWVudFxuXHRpZiAoICEgaXNQcm9kICkge1xuXHRcdGxvZyggY29sb3JzLnJlZCggYCR7IGNvbG9ycy5ib2xkKCAnRXJyb3I6JyApIH0gdGhlIGJ1bmRsZSB0YXNrIG1heSBvbmx5IGJlIGNhbGxlZCBmcm9tIHRoZSBwcm9kdWN0aW9uIGVudmlyb25tZW50LiBTZXQgTk9ERV9FTlYgdG8gcHJvZHVjdGlvbiBhbmQgdHJ5IGFnYWluLmAgKSApO1xuXHRcdHByb2Nlc3MuZXhpdCggMSApO1xuXHR9XG5cblx0Ly8gVGhlIGRldiB0aGVtZSBhbmQgdGhlIHByb2QgdGhlbWUgY2FuJ3QgaGF2ZSB0aGUgc2FtZSBuYW1lXG5cdGlmICggcGF0aC5iYXNlbmFtZSggcHJvZFRoZW1lUGF0aCApID09PSBwYXRoLmJhc2VuYW1lKCByb290UGF0aCApICkge1xuXHRcdGxvZyggY29sb3JzLnJlZCggYCR7IGNvbG9ycy5ib2xkKCAnRXJyb3I6JyApIH0gdGhlIHRoZW1lIHNsdWcgY2Fubm90IGJlIHRoZSBzYW1lIGFzIHRoZSBkZXYgdGhlbWUgZGlyZWN0b3J5IG5hbWUuYCApICk7XG5cdFx0cHJvY2Vzcy5leGl0KCAxICk7XG5cdH1cblxuXHRjb25zdCByZXF1aXJlZENvbmZpZ1VwZGF0ZXMgPSBbXG5cdFx0J3NsdWcnLFxuXHRcdCduYW1lJyxcblx0XTtcblxuXHQvLyBFcnJvciBpZiBjb25maWcgdGhhdCBtdXN0IGJlIHNldCBpcyBzdGlsbCB0aGUgZGVmYXVsdCB2YWx1ZS5cblx0Zm9yICggY29uc3QgcmVxdWlyZWRDb25maWdGaWVsZCBvZiByZXF1aXJlZENvbmZpZ1VwZGF0ZXMgKSB7XG5cdFx0aWYgKCBuYW1lRmllbGREZWZhdWx0c1sgcmVxdWlyZWRDb25maWdGaWVsZCBdID09PSBjb25maWcudGhlbWVbIHJlcXVpcmVkQ29uZmlnRmllbGQgXSApIHtcblx0XHRcdGxvZyggY29sb3JzLnJlZCggYCR7IGNvbG9ycy5ib2xkKCAnRXJyb3I6JyApIH0gdGhlIHRoZW1lICR7IHJlcXVpcmVkQ29uZmlnRmllbGQgfSBtdXN0IGJlIGRpZmZlcmVudCB0aGFuIHRoZSBkZWZhdWx0IHZhbHVlICR7IG5hbWVGaWVsZERlZmF1bHRzWyByZXF1aXJlZENvbmZpZ0ZpZWxkIF0gfS5gICkgKTtcblx0XHRcdHByb2Nlc3MuZXhpdCggMSApO1xuXHRcdH1cblx0fVxuXG5cdC8vIENyZWF0ZSB0aGUgcHJvZCBkaXJlY3Rvcnlcblx0Y3JlYXRlUHJvZERpcigpO1xuXG5cdC8vIENvcHlpbmcgbWlzYyBmaWxlcyB0byB0aGUgcHJvZCBkaXJlY3Rvcnlcblx0cmV0dXJuIHB1bXAoXG5cdFx0W1xuXHRcdFx0c3JjKCBwYXRocy5leHBvcnQuc3JjLCB7IGFsbG93RW1wdHk6IHRydWUgfSApLFxuXHRcdFx0ZGVzdCggZ3VscFJlbGF0aXZlRGVzdCApLFxuXHRcdF0sXG5cdFx0ZG9uZVxuXHQpO1xufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "prodPrep.js"
      ],
      "names": [
        "prodPrep",
        "done",
        "config",
        "isProd",
        "colors",
        "red",
        "bold",
        "process",
        "exit",
        "path",
        "basename",
        "prodThemePath",
        "rootPath",
        "requiredConfigUpdates",
        "requiredConfigField",
        "nameFieldDefaults",
        "theme",
        "paths",
        "src",
        "allowEmpty",
        "gulpRelativeDest"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;AAGA;;AACA;;AACA;;AACA;;AACA;;AAKA;;AAOA;;;;AAVA;;;;AAgBA;;;;;AAKe,SAASA,QAAT,CAAmBC,IAAnB,EAA0B;AACxC,MAAMC,MAAM,GAAG,2BAAgB,IAAhB,CAAf,CADwC,CAGxC;;AACA,MAAK,CAAEC,iBAAP,EAAgB;AACf,8BAAKC,uBAAOC,GAAP,WAAgBD,uBAAOE,IAAP,CAAa,QAAb,CAAhB,oHAAL;AACAC,IAAAA,OAAO,CAACC,IAAR,CAAc,CAAd;AACA,GAPuC,CASxC;;;AACA,MAAKC,iBAAKC,QAAL,CAAeC,wBAAf,MAAmCF,iBAAKC,QAAL,CAAeE,mBAAf,CAAxC,EAAoE;AACnE,8BAAKR,uBAAOC,GAAP,WAAgBD,uBAAOE,IAAP,CAAa,QAAb,CAAhB,yEAAL;AACAC,IAAAA,OAAO,CAACC,IAAR,CAAc,CAAd;AACA;;AAED,MAAMK,qBAAqB,GAAG,CAC7B,MAD6B,EAE7B,MAF6B,CAA9B,CAfwC,CAoBxC;;AACA,2CAAmCA,qBAAnC,2CAA2D;AAArD,QAAMC,mBAAmB,4BAAzB;;AACL,QAAKC,6BAAmBD,mBAAnB,MAA6CZ,MAAM,CAACc,KAAP,CAAcF,mBAAd,CAAlD,EAAwF;AACvF,gCAAKV,uBAAOC,GAAP,WAAgBD,uBAAOE,IAAP,CAAa,QAAb,CAAhB,wBAAuDQ,mBAAvD,uDAAyHC,6BAAmBD,mBAAnB,CAAzH,OAAL;AACAP,MAAAA,OAAO,CAACC,IAAR,CAAc,CAAd;AACA;AACD,GA1BuC,CA4BxC;;;AACA,8BA7BwC,CA+BxC;;AACA,SAAO,sBACN,CACC,eAAKS,2BAAaC,GAAlB,EAAuB;AAAEC,IAAAA,UAAU,EAAE;AAAd,GAAvB,CADD,EAEC,gBAAMC,uBAAN,CAFD,CADM,EAKNnB,IALM,CAAP;AAOA",
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport { src, dest } from 'gulp';\nimport pump from 'pump';\nimport log from 'fancy-log';\nimport colors from 'ansi-colors';\nimport path from 'path';\n\n/**\n * Internal dependencies\n */\nimport {\n\tisProd,\n\tprodThemePath,\n\trootPath,\n\tpaths,\n\tnameFieldDefaults,\n} from './constants';\nimport {\n\tcreateProdDir,\n\tgulpRelativeDest,\n\tgetThemeConfig,\n} from './utils';\n\n/**\n * Create the production directory\n * @param {function} done function to call when async processes finish\n * @return {Stream} single stream\n */\nexport default function prodPrep( done ) {\n\tconst config = getThemeConfig( true );\n\n\t// Error if not in a production environment\n\tif ( ! isProd ) {\n\t\tlog( colors.red( `${ colors.bold( 'Error:' ) } the bundle task may only be called from the production environment. Set NODE_ENV to production and try again.` ) );\n\t\tprocess.exit( 1 );\n\t}\n\n\t// The dev theme and the prod theme can't have the same name\n\tif ( path.basename( prodThemePath ) === path.basename( rootPath ) ) {\n\t\tlog( colors.red( `${ colors.bold( 'Error:' ) } the theme slug cannot be the same as the dev theme directory name.` ) );\n\t\tprocess.exit( 1 );\n\t}\n\n\tconst requiredConfigUpdates = [\n\t\t'slug',\n\t\t'name',\n\t];\n\n\t// Error if config that must be set is still the default value.\n\tfor ( const requiredConfigField of requiredConfigUpdates ) {\n\t\tif ( nameFieldDefaults[ requiredConfigField ] === config.theme[ requiredConfigField ] ) {\n\t\t\tlog( colors.red( `${ colors.bold( 'Error:' ) } the theme ${ requiredConfigField } must be different than the default value ${ nameFieldDefaults[ requiredConfigField ] }.` ) );\n\t\t\tprocess.exit( 1 );\n\t\t}\n\t}\n\n\t// Create the prod directory\n\tcreateProdDir();\n\n\t// Copying misc files to the prod directory\n\treturn pump(\n\t\t[\n\t\t\tsrc( paths.export.src, { allowEmpty: true } ),\n\t\t\tdest( gulpRelativeDest ),\n\t\t],\n\t\tdone\n\t);\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566485032000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"filename\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/prodStringReplace.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/prodStringReplace.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/prodStringReplace.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/prodStringReplace.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
        "sourceFileName": "prodStringReplace.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = prodStringReplace;\n\nvar _gulp = require(\"gulp\");\n\nvar _pump = _interopRequireDefault(require(\"pump\"));\n\nvar _constants = require(\"./constants\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\n\n/**\n * Run string replacement on production files\n * @param {function} done function to call when async processes finish\n * @return {Stream} single stream\n */\nfunction prodStringReplace(done) {\n  // Bail if not in production\n  if (!_constants.isProd) {\n    return done();\n  }\n\n  return (0, _pump[\"default\"])([(0, _gulp.src)(_constants.paths[\"export\"].stringReplaceSrc), (0, _utils.getStringReplacementTasks)(), (0, _gulp.dest)(_utils.gulpRelativeDest)], done);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2RTdHJpbmdSZXBsYWNlLmpzIl0sIm5hbWVzIjpbInByb2RTdHJpbmdSZXBsYWNlIiwiZG9uZSIsImlzUHJvZCIsInBhdGhzIiwic3RyaW5nUmVwbGFjZVNyYyIsImd1bHBSZWxhdGl2ZURlc3QiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFFQTs7Ozs7Ozs7O0FBR0E7O0FBQ0E7O0FBS0E7O0FBSUE7Ozs7QUFQQTs7OztBQVlBOzs7OztBQUtlLFNBQVNBLGlCQUFULENBQTRCQyxJQUE1QixFQUFtQztBQUNqRDtBQUNBLE1BQUssQ0FBRUMsaUJBQVAsRUFBZ0I7QUFDZixXQUFPRCxJQUFJLEVBQVg7QUFDQTs7QUFFRCxTQUFPLHNCQUNOLENBQ0MsZUFBS0UsMkJBQWFDLGdCQUFsQixDQURELEVBRUMsdUNBRkQsRUFHQyxnQkFBTUMsdUJBQU4sQ0FIRCxDQURNLEVBTU5KLElBTk0sQ0FBUDtBQVFBIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9hdXN0aW50dWRlL0RvY3VtZW50cy9Sb2FkIGFuZCBUcmFjayBTcGVjaWFsaXN0cy93cC1jb250ZW50L3RoZW1lcy93cHJpZy1yb2FkYW5kdHJhY2tzcGVjaWFsaXN0cy9ndWxwIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWVudiBlczYgKi9cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgc3JjLCBkZXN0IH0gZnJvbSAnZ3VscCc7XG5pbXBvcnQgcHVtcCBmcm9tICdwdW1wJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHtcblx0aXNQcm9kLFxuXHRwYXRocyxcbn0gZnJvbSAnLi9jb25zdGFudHMnO1xuaW1wb3J0IHtcblx0Z2V0U3RyaW5nUmVwbGFjZW1lbnRUYXNrcyxcblx0Z3VscFJlbGF0aXZlRGVzdCxcbn0gZnJvbSAnLi91dGlscyc7XG5cbi8qKlxuICogUnVuIHN0cmluZyByZXBsYWNlbWVudCBvbiBwcm9kdWN0aW9uIGZpbGVzXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBkb25lIGZ1bmN0aW9uIHRvIGNhbGwgd2hlbiBhc3luYyBwcm9jZXNzZXMgZmluaXNoXG4gKiBAcmV0dXJuIHtTdHJlYW19IHNpbmdsZSBzdHJlYW1cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcHJvZFN0cmluZ1JlcGxhY2UoIGRvbmUgKSB7XG5cdC8vIEJhaWwgaWYgbm90IGluIHByb2R1Y3Rpb25cblx0aWYgKCAhIGlzUHJvZCApIHtcblx0XHRyZXR1cm4gZG9uZSgpO1xuXHR9XG5cblx0cmV0dXJuIHB1bXAoXG5cdFx0W1xuXHRcdFx0c3JjKCBwYXRocy5leHBvcnQuc3RyaW5nUmVwbGFjZVNyYyApLFxuXHRcdFx0Z2V0U3RyaW5nUmVwbGFjZW1lbnRUYXNrcygpLFxuXHRcdFx0ZGVzdCggZ3VscFJlbGF0aXZlRGVzdCApLFxuXHRcdF0sXG5cdFx0ZG9uZVxuXHQpO1xufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "prodStringReplace.js"
      ],
      "names": [
        "prodStringReplace",
        "done",
        "isProd",
        "paths",
        "stringReplaceSrc",
        "gulpRelativeDest"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;AAGA;;AACA;;AAKA;;AAIA;;;;AAPA;;;;AAYA;;;;;AAKe,SAASA,iBAAT,CAA4BC,IAA5B,EAAmC;AACjD;AACA,MAAK,CAAEC,iBAAP,EAAgB;AACf,WAAOD,IAAI,EAAX;AACA;;AAED,SAAO,sBACN,CACC,eAAKE,2BAAaC,gBAAlB,CADD,EAEC,uCAFD,EAGC,gBAAMC,uBAAN,CAHD,CADM,EAMNJ,IANM,CAAP;AAQA",
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport { src, dest } from 'gulp';\nimport pump from 'pump';\n\n/**\n * Internal dependencies\n */\nimport {\n\tisProd,\n\tpaths,\n} from './constants';\nimport {\n\tgetStringReplacementTasks,\n\tgulpRelativeDest,\n} from './utils';\n\n/**\n * Run string replacement on production files\n * @param {function} done function to call when async processes finish\n * @return {Stream} single stream\n */\nexport default function prodStringReplace( done ) {\n\t// Bail if not in production\n\tif ( ! isProd ) {\n\t\treturn done();\n\t}\n\n\treturn pump(\n\t\t[\n\t\t\tsrc( paths.export.stringReplaceSrc ),\n\t\t\tgetStringReplacementTasks(),\n\t\t\tdest( gulpRelativeDest ),\n\t\t],\n\t\tdone\n\t);\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566485032000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"filename\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/prodCompress.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/prodCompress.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/prodCompress.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/prodCompress.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
        "sourceFileName": "prodCompress.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = prodCompress;\n\nvar _gulp = require(\"gulp\");\n\nvar _pump = _interopRequireDefault(require(\"pump\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _constants = require(\"./constants\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\n\n/**\n * Create the zip file\n * @param {function} done function to call when async processes finish\n * @return {Stream} single stream\n */\nfunction prodCompress(done) {\n  var config = (0, _utils.getThemeConfig)(); // Bail if the compress option is false\n\n  if (!config[\"export\"].compress) {\n    return done();\n  }\n\n  return (0, _pump[\"default\"])([(0, _gulp.src)(\"\".concat(_constants.prodThemePath, \"/**/*\")), _constants.gulpPlugins.zip(\"\".concat(config.theme.slug, \".zip\")), (0, _gulp.dest)(_path[\"default\"].normalize(\"\".concat(_constants.prodThemePath, \"/../\")))], done);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2RDb21wcmVzcy5qcyJdLCJuYW1lcyI6WyJwcm9kQ29tcHJlc3MiLCJkb25lIiwiY29uZmlnIiwiY29tcHJlc3MiLCJwcm9kVGhlbWVQYXRoIiwiZ3VscFBsdWdpbnMiLCJ6aXAiLCJ0aGVtZSIsInNsdWciLCJwYXRoIiwibm9ybWFsaXplIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBRUE7Ozs7Ozs7OztBQUdBOztBQUNBOztBQUNBOztBQUtBOztBQUNBOzs7O0FBSkE7Ozs7QUFNQTs7Ozs7QUFLZSxTQUFTQSxZQUFULENBQXVCQyxJQUF2QixFQUE4QjtBQUM1QyxNQUFNQyxNQUFNLEdBQUcsNEJBQWYsQ0FENEMsQ0FHNUM7O0FBQ0EsTUFBSyxDQUFFQSxNQUFNLFVBQU4sQ0FBY0MsUUFBckIsRUFBZ0M7QUFDL0IsV0FBT0YsSUFBSSxFQUFYO0FBQ0E7O0FBRUQsU0FBTyxzQkFDTixDQUNDLHlCQUFTRyx3QkFBVCxXQURELEVBRUNDLHVCQUFZQyxHQUFaLFdBQXFCSixNQUFNLENBQUNLLEtBQVAsQ0FBYUMsSUFBbEMsVUFGRCxFQUdDLGdCQUFNQyxpQkFBS0MsU0FBTCxXQUFvQk4sd0JBQXBCLFVBQU4sQ0FIRCxDQURNLEVBTU5ILElBTk0sQ0FBUDtBQVFBIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9hdXN0aW50dWRlL0RvY3VtZW50cy9Sb2FkIGFuZCBUcmFjayBTcGVjaWFsaXN0cy93cC1jb250ZW50L3RoZW1lcy93cHJpZy1yb2FkYW5kdHJhY2tzcGVjaWFsaXN0cy9ndWxwIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWVudiBlczYgKi9cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgc3JjLCBkZXN0IH0gZnJvbSAnZ3VscCc7XG5pbXBvcnQgcHVtcCBmcm9tICdwdW1wJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuXG4vKipcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBwcm9kVGhlbWVQYXRoLCBndWxwUGx1Z2lucyB9IGZyb20gJy4vY29uc3RhbnRzJztcbmltcG9ydCB7IGdldFRoZW1lQ29uZmlnIH0gZnJvbSAnLi91dGlscyc7XG5cbi8qKlxuICogQ3JlYXRlIHRoZSB6aXAgZmlsZVxuICogQHBhcmFtIHtmdW5jdGlvbn0gZG9uZSBmdW5jdGlvbiB0byBjYWxsIHdoZW4gYXN5bmMgcHJvY2Vzc2VzIGZpbmlzaFxuICogQHJldHVybiB7U3RyZWFtfSBzaW5nbGUgc3RyZWFtXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHByb2RDb21wcmVzcyggZG9uZSApIHtcblx0Y29uc3QgY29uZmlnID0gZ2V0VGhlbWVDb25maWcoKTtcblxuXHQvLyBCYWlsIGlmIHRoZSBjb21wcmVzcyBvcHRpb24gaXMgZmFsc2Vcblx0aWYgKCAhIGNvbmZpZy5leHBvcnQuY29tcHJlc3MgKSB7XG5cdFx0cmV0dXJuIGRvbmUoKTtcblx0fVxuXG5cdHJldHVybiBwdW1wKFxuXHRcdFtcblx0XHRcdHNyYyggYCR7IHByb2RUaGVtZVBhdGggfS8qKi8qYCApLFxuXHRcdFx0Z3VscFBsdWdpbnMuemlwKCBgJHsgY29uZmlnLnRoZW1lLnNsdWcgfS56aXBgICksXG5cdFx0XHRkZXN0KCBwYXRoLm5vcm1hbGl6ZSggYCR7IHByb2RUaGVtZVBhdGggfS8uLi9gICkgKSxcblx0XHRdLFxuXHRcdGRvbmVcblx0KTtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "prodCompress.js"
      ],
      "names": [
        "prodCompress",
        "done",
        "config",
        "compress",
        "prodThemePath",
        "gulpPlugins",
        "zip",
        "theme",
        "slug",
        "path",
        "normalize"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;AAGA;;AACA;;AACA;;AAKA;;AACA;;;;AAJA;;;;AAMA;;;;;AAKe,SAASA,YAAT,CAAuBC,IAAvB,EAA8B;AAC5C,MAAMC,MAAM,GAAG,4BAAf,CAD4C,CAG5C;;AACA,MAAK,CAAEA,MAAM,UAAN,CAAcC,QAArB,EAAgC;AAC/B,WAAOF,IAAI,EAAX;AACA;;AAED,SAAO,sBACN,CACC,yBAASG,wBAAT,WADD,EAECC,uBAAYC,GAAZ,WAAqBJ,MAAM,CAACK,KAAP,CAAaC,IAAlC,UAFD,EAGC,gBAAMC,iBAAKC,SAAL,WAAoBN,wBAApB,UAAN,CAHD,CADM,EAMNH,IANM,CAAP;AAQA",
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport { src, dest } from 'gulp';\nimport pump from 'pump';\nimport path from 'path';\n\n/**\n * Internal dependencies\n */\nimport { prodThemePath, gulpPlugins } from './constants';\nimport { getThemeConfig } from './utils';\n\n/**\n * Create the zip file\n * @param {function} done function to call when async processes finish\n * @return {Stream} single stream\n */\nexport default function prodCompress( done ) {\n\tconst config = getThemeConfig();\n\n\t// Bail if the compress option is false\n\tif ( ! config.export.compress ) {\n\t\treturn done();\n\t}\n\n\treturn pump(\n\t\t[\n\t\t\tsrc( `${ prodThemePath }/**/*` ),\n\t\t\tgulpPlugins.zip( `${ config.theme.slug }.zip` ),\n\t\t\tdest( path.normalize( `${ prodThemePath }/../` ) ),\n\t\t],\n\t\tdone\n\t);\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566485032000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"filename\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/clean.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/clean.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/clean.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp/clean.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
        "sourceFileName": "clean.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cleanCSS = cleanCSS;\nexports.cleanJS = cleanJS;\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _constants = require(\"./constants\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\n\n/**\n * Clean CSS\n * @return {Promise|string} with the deleted paths\n */\nfunction cleanCSS() {\n  var delPath = [\"\".concat(_constants.paths.styles.dest, \"/**/*.css\"), \"!\".concat(_constants.paths.styles.srcDir), \"!\".concat(_constants.paths.styles.srcDir, \"/**\")];\n  return (0, _del[\"default\"])(delPath);\n}\n/**\n * Clean JS\n * @return {Promise|string} with the deleted paths\n */\n\n\nfunction cleanJS() {\n  var delPath = [\"\".concat(_constants.paths.scripts.dest, \"/**/*.js\"), \"!\".concat(_constants.paths.scripts.srcDir), \"!\".concat(_constants.paths.scripts.srcDir, \"/**\")];\n  return (0, _del[\"default\"])(delPath);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsZWFuLmpzIl0sIm5hbWVzIjpbImNsZWFuQ1NTIiwiZGVsUGF0aCIsInBhdGhzIiwic3R5bGVzIiwiZGVzdCIsInNyY0RpciIsImNsZWFuSlMiLCJzY3JpcHRzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBRUE7Ozs7Ozs7Ozs7QUFHQTs7QUFLQTs7OztBQUhBOzs7O0FBS0E7Ozs7QUFJTyxTQUFTQSxRQUFULEdBQW9CO0FBQzFCLE1BQU1DLE9BQU8sR0FBRyxXQUNYQyxpQkFBTUMsTUFBTixDQUFhQyxJQURGLDJCQUVWRixpQkFBTUMsTUFBTixDQUFhRSxNQUZILGNBR1ZILGlCQUFNQyxNQUFOLENBQWFFLE1BSEgsU0FBaEI7QUFLQSxTQUFPLHFCQUFLSixPQUFMLENBQVA7QUFDQTtBQUVEOzs7Ozs7QUFJTyxTQUFTSyxPQUFULEdBQW1CO0FBQ3pCLE1BQU1MLE9BQU8sR0FBRyxXQUNYQyxpQkFBTUssT0FBTixDQUFjSCxJQURILDBCQUVWRixpQkFBTUssT0FBTixDQUFjRixNQUZKLGNBR1ZILGlCQUFNSyxPQUFOLENBQWNGLE1BSEosU0FBaEI7QUFLQSxTQUFPLHFCQUFLSixPQUFMLENBQVA7QUFDQSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYXVzdGludHVkZS9Eb2N1bWVudHMvUm9hZCBhbmQgVHJhY2sgU3BlY2lhbGlzdHMvd3AtY29udGVudC90aGVtZXMvd3ByaWctcm9hZGFuZHRyYWNrc3BlY2lhbGlzdHMvZ3VscCIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1lbnYgZXM2ICovXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBkZWwgZnJvbSAnZGVsJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgcGF0aHMgfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbi8qKlxuICogQ2xlYW4gQ1NTXG4gKiBAcmV0dXJuIHtQcm9taXNlfHN0cmluZ30gd2l0aCB0aGUgZGVsZXRlZCBwYXRoc1xuICovXG5leHBvcnQgZnVuY3Rpb24gY2xlYW5DU1MoKSB7XG5cdGNvbnN0IGRlbFBhdGggPSBbXG5cdFx0YCR7IHBhdGhzLnN0eWxlcy5kZXN0IH0vKiovKi5jc3NgLFxuXHRcdGAhJHsgcGF0aHMuc3R5bGVzLnNyY0RpciB9YCxcblx0XHRgISR7IHBhdGhzLnN0eWxlcy5zcmNEaXIgfS8qKmAsXG5cdF07XG5cdHJldHVybiBkZWwoIGRlbFBhdGggKTtcbn1cblxuLyoqXG4gKiBDbGVhbiBKU1xuICogQHJldHVybiB7UHJvbWlzZXxzdHJpbmd9IHdpdGggdGhlIGRlbGV0ZWQgcGF0aHNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNsZWFuSlMoKSB7XG5cdGNvbnN0IGRlbFBhdGggPSBbXG5cdFx0YCR7IHBhdGhzLnNjcmlwdHMuZGVzdCB9LyoqLyouanNgLFxuXHRcdGAhJHsgcGF0aHMuc2NyaXB0cy5zcmNEaXIgfWAsXG5cdFx0YCEkeyBwYXRocy5zY3JpcHRzLnNyY0RpciB9LyoqYCxcblx0XTtcblx0cmV0dXJuIGRlbCggZGVsUGF0aCApO1xufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "clean.js"
      ],
      "names": [
        "cleanCSS",
        "delPath",
        "paths",
        "styles",
        "dest",
        "srcDir",
        "cleanJS",
        "scripts"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;;AAGA;;AAKA;;;;AAHA;;;;AAKA;;;;AAIO,SAASA,QAAT,GAAoB;AAC1B,MAAMC,OAAO,GAAG,WACXC,iBAAMC,MAAN,CAAaC,IADF,2BAEVF,iBAAMC,MAAN,CAAaE,MAFH,cAGVH,iBAAMC,MAAN,CAAaE,MAHH,SAAhB;AAKA,SAAO,qBAAKJ,OAAL,CAAP;AACA;AAED;;;;;;AAIO,SAASK,OAAT,GAAmB;AACzB,MAAML,OAAO,GAAG,WACXC,iBAAMK,OAAN,CAAcH,IADH,0BAEVF,iBAAMK,OAAN,CAAcF,MAFJ,cAGVH,iBAAMK,OAAN,CAAcF,MAHJ,SAAhB;AAKA,SAAO,qBAAKJ,OAAL,CAAP;AACA",
      "sourceRoot": "/Users/austintude/Documents/Road and Track Specialists/wp-content/themes/wprig-roadandtrackspecialists/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport del from 'del';\n\n/**\n * Internal dependencies\n */\nimport { paths } from './constants';\n\n/**\n * Clean CSS\n * @return {Promise|string} with the deleted paths\n */\nexport function cleanCSS() {\n\tconst delPath = [\n\t\t`${ paths.styles.dest }/**/*.css`,\n\t\t`!${ paths.styles.srcDir }`,\n\t\t`!${ paths.styles.srcDir }/**`,\n\t];\n\treturn del( delPath );\n}\n\n/**\n * Clean JS\n * @return {Promise|string} with the deleted paths\n */\nexport function cleanJS() {\n\tconst delPath = [\n\t\t`${ paths.scripts.dest }/**/*.js`,\n\t\t`!${ paths.scripts.srcDir }`,\n\t\t`!${ paths.scripts.srcDir }/**`,\n\t];\n\treturn del( delPath );\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566485032000
  }
}